scopeName: 'source.ScopeList'
name: 'ScopeList'
fileTypes: ['ScopeList']
patterns: [
	{
		match: '(^border.alignment$)'
		name: 'border.alignment'
	}

	{
		match: '(^border.header$)'
		name: 'border.header'
	}

	{
		match: '(^border.pipe.inner$)'
		name: 'border.pipe.inner'
	}

	{
		match: '(^border.pipe.outer$)'
		name: 'border.pipe.outer'
	}

	{
		match: '(^comment.block.c$)'
		name: 'comment.block.c'
	}

	{
		match: '(^comment.block.coffee$)'
		name: 'comment.block.coffee'
	}

	{
		match: '(^comment.block.cs$)'
		name: 'comment.block.cs'
	}

	{
		match: '(^comment.block.css$)'
		name: 'comment.block.css'
	}

	{
		match: '(^comment.block.documentation.cs$)'
		name: 'comment.block.documentation.cs'
	}

	{
		match: '(^comment.block.documentation.js$)'
		name: 'comment.block.documentation.js'
	}

	{
		match: '(^comment.block.documentation.perl$)'
		name: 'comment.block.documentation.perl'
	}

	{
		match: '(^comment.block.documentation.phpdoc.php$)'
		name: 'comment.block.documentation.phpdoc.php'
	}

	{
		match: '(^comment.block.documentation.ruby$)'
		name: 'comment.block.documentation.ruby'
	}

	{
		match: '(^comment.block.empty.java$)'
		name: 'comment.block.empty.java'
	}

	{
		match: '(^comment.block.erb$)'
		name: 'comment.block.erb'
	}

	{
		match: '(^comment.block.gfm$)'
		name: 'comment.block.gfm'
	}

	{
		match: '(^comment.block.go$)'
		name: 'comment.block.go'
	}

	{
		match: '(^comment.block.gotemplate$)'
		name: 'comment.block.gotemplate'
	}

	{
		match: '(^comment.block.html$)'
		name: 'comment.block.html'
	}

	{
		match: '(^comment.block.html.js$)'
		name: 'comment.block.html.js'
	}

	{
		match: '(^comment.block.java$)'
		name: 'comment.block.java'
	}

	{
		match: '(^comment.block.javadoc.java$)'
		name: 'comment.block.javadoc.java'
	}

	{
		match: '(^comment.block.js$)'
		name: 'comment.block.js'
	}

	{
		match: '(^comment.block.jsp$)'
		name: 'comment.block.jsp'
	}

	{
		match: '(^comment.block.mustache$)'
		name: 'comment.block.mustache'
	}

	{
		match: '(^comment.block.nant$)'
		name: 'comment.block.nant'
	}

	{
		match: '(^comment.block.objc$)'
		name: 'comment.block.objc'
	}

	{
		match: '(^comment.block.perl6$)'
		name: 'comment.block.perl6'
	}

	{
		match: '(^comment.block.php$)'
		name: 'comment.block.php'
	}

	{
		match: '(^comment.block.plist$)'
		name: 'comment.block.plist'
	}

	{
		match: '(^comment.block.preprocessor.if-branch.c$)'
		name: 'comment.block.preprocessor.if-branch.c'
	}

	{
		match: '(^comment.block.python$)'
		name: 'comment.block.python'
	}

	{
		match: '(^comment.block.regexp$)'
		name: 'comment.block.regexp'
	}

	{
		match: '(^comment.block.sass$)'
		name: 'comment.block.sass'
	}

	{
		match: '(^comment.block.scss$)'
		name: 'comment.block.scss'
	}

	{
		match: '(^comment.block.strings$)'
		name: 'comment.block.strings'
	}

	{
		match: '(^comment.block.xml$)'
		name: 'comment.block.xml'
	}

	{
		match: '(^comment.block.xml.plist$)'
		name: 'comment.block.xml.plist'
	}

	{
		match: '(^comment.hr.gfm$)'
		name: 'comment.hr.gfm'
	}

	{
		match: '(^comment.line.banner.cpp$)'
		name: 'comment.line.banner.cpp'
	}

	{
		match: '(^comment.line.double-dash.sql$)'
		name: 'comment.line.double-dash.sql'
	}

	{
		match: '(^comment.line.double-slash.cpp$)'
		name: 'comment.line.double-slash.cpp'
	}

	{
		match: '(^comment.line.double-slash.cs$)'
		name: 'comment.line.double-slash.cs'
	}

	{
		match: '(^comment.line.double-slash.go$)'
		name: 'comment.line.double-slash.go'
	}

	{
		match: '(^comment.line.double-slash.java$)'
		name: 'comment.line.double-slash.java'
	}

	{
		match: '(^comment.line.double-slash.js$)'
		name: 'comment.line.double-slash.js'
	}

	{
		match: '(^comment.line.double-slash.less$)'
		name: 'comment.line.double-slash.less'
	}

	{
		match: '(^comment.line.double-slash.objc$)'
		name: 'comment.line.double-slash.objc'
	}

	{
		match: '(^comment.line.double-slash.php$)'
		name: 'comment.line.double-slash.php'
	}

	{
		match: '(^comment.line.double-slash.plist$)'
		name: 'comment.line.double-slash.plist'
	}

	{
		match: '(^comment.line.exclamation.java-properties$)'
		name: 'comment.line.exclamation.java-properties'
	}

	{
		match: '(^comment.line.keyword.yard.ruby$)'
		name: 'comment.line.keyword.yard.ruby'
	}

	{
		match: '(^comment.line.number-sign.coffee$)'
		name: 'comment.line.number-sign.coffee'
	}

	{
		match: '(^comment.line.number-sign.erb$)'
		name: 'comment.line.number-sign.erb'
	}

	{
		match: '(^comment.line.number-sign.git-commit$)'
		name: 'comment.line.number-sign.git-commit'
	}

	{
		match: '(^comment.line.number-sign.java-properties$)'
		name: 'comment.line.number-sign.java-properties'
	}

	{
		match: '(^comment.line.number-sign.makefile$)'
		name: 'comment.line.number-sign.makefile'
	}

	{
		match: '(^comment.line.number-sign.perl$)'
		name: 'comment.line.number-sign.perl'
	}

	{
		match: '(^comment.line.number-sign.perl6$)'
		name: 'comment.line.number-sign.perl6'
	}

	{
		match: '(^comment.line.number-sign.php$)'
		name: 'comment.line.number-sign.php'
	}

	{
		match: '(^comment.line.number-sign.python$)'
		name: 'comment.line.number-sign.python'
	}

	{
		match: '(^comment.line.number-sign.regexp$)'
		name: 'comment.line.number-sign.regexp'
	}

	{
		match: '(^comment.line.number-sign.ruby$)'
		name: 'comment.line.number-sign.ruby'
	}

	{
		match: '(^comment.line.number-sign.shebang.shell$)'
		name: 'comment.line.number-sign.shebang.shell'
	}

	{
		match: '(^comment.line.number-sign.shell$)'
		name: 'comment.line.number-sign.shell'
	}

	{
		match: '(^comment.line.number-sign.sql$)'
		name: 'comment.line.number-sign.sql'
	}

	{
		match: '(^comment.line.number-sign.toml$)'
		name: 'comment.line.number-sign.toml'
	}

	{
		match: '(^comment.line.parameter.yard.ruby$)'
		name: 'comment.line.parameter.yard.ruby'
	}

	{
		match: '(^comment.line.punctuation.yard.ruby$)'
		name: 'comment.line.punctuation.yard.ruby'
	}

	{
		match: '(^comment.line.sass$)'
		name: 'comment.line.sass'
	}

	{
		match: '(^comment.line.scss$)'
		name: 'comment.line.scss'
	}

	{
		match: '(^comment.line.semi-colon.git-config$)'
		name: 'comment.line.semi-colon.git-config'
	}

	{
		match: '(^comment.line.semicolon.clojure$)'
		name: 'comment.line.semicolon.clojure'
	}

	{
		match: '(^comment.line.shebang.clojure$)'
		name: 'comment.line.shebang.clojure'
	}

	{
		match: '(^comment.line.shebang.js$)'
		name: 'comment.line.shebang.js'
	}

	{
		match: '(^comment.line.string.yard.ruby$)'
		name: 'comment.line.string.yard.ruby'
	}

	{
		match: '(^comment.line.type.yard.ruby$)'
		name: 'comment.line.type.yard.ruby'
	}

	{
		match: '(^comment.line.yard.ruby$)'
		name: 'comment.line.yard.ruby'
	}

	{
		match: '(^comment.quote.gfm$)'
		name: 'comment.quote.gfm'
	}

	{
		match: '(^constant.character.character-class.regexp$)'
		name: 'constant.character.character-class.regexp'
	}

	{
		match: '(^constant.character.control.regexp$)'
		name: 'constant.character.control.regexp'
	}

	{
		match: '(^constant.character.entity.html$)'
		name: 'constant.character.entity.html'
	}

	{
		match: '(^constant.character.entity.xml$)'
		name: 'constant.character.entity.xml'
	}

	{
		match: '(^constant.character.escape.ansi-c.shell$)'
		name: 'constant.character.escape.ansi-c.shell'
	}

	{
		match: '(^constant.character.escape.backlash.python$)'
		name: 'constant.character.escape.backlash.python'
	}

	{
		match: '(^constant.character.escape.backslash.coffee$)'
		name: 'constant.character.escape.backslash.coffee'
	}

	{
		match: '(^constant.character.escape.backslash.regexp$)'
		name: 'constant.character.escape.backslash.regexp'
	}

	{
		match: '(^constant.character.escape.backslash.regexp.replacement$)'
		name: 'constant.character.escape.backslash.regexp.replacement'
	}

	{
		match: '(^constant.character.escape.backspace.python$)'
		name: 'constant.character.escape.backspace.python'
	}

	{
		match: '(^constant.character.escape.bell.python$)'
		name: 'constant.character.escape.bell.python'
	}

	{
		match: '(^constant.character.escape.clojure$)'
		name: 'constant.character.escape.clojure'
	}

	{
		match: '(^constant.character.escape.codepoint.css$)'
		name: 'constant.character.escape.codepoint.css'
	}

	{
		match: '(^constant.character.escape.coffee$)'
		name: 'constant.character.escape.coffee'
	}

	{
		match: '(^constant.character.escape.continuation.makefile$)'
		name: 'constant.character.escape.continuation.makefile'
	}

	{
		match: '(^constant.character.escape.control-char.shell$)'
		name: 'constant.character.escape.control-char.shell'
	}

	{
		match: '(^constant.character.escape.cpp$)'
		name: 'constant.character.escape.cpp'
	}

	{
		match: '(^constant.character.escape.cs$)'
		name: 'constant.character.escape.cs'
	}

	{
		match: '(^constant.character.escape.css$)'
		name: 'constant.character.escape.css'
	}

	{
		match: '(^constant.character.escape.dollar.regexp.replacement$)'
		name: 'constant.character.escape.dollar.regexp.replacement'
	}

	{
		match: '(^constant.character.escape.double-quote.python$)'
		name: 'constant.character.escape.double-quote.python'
	}

	{
		match: '(^constant.character.escape.formfeed.python$)'
		name: 'constant.character.escape.formfeed.python'
	}

	{
		match: '(^constant.character.escape.gfm$)'
		name: 'constant.character.escape.gfm'
	}

	{
		match: '(^constant.character.escape.git-config$)'
		name: 'constant.character.escape.git-config'
	}

	{
		match: '(^constant.character.escape.go$)'
		name: 'constant.character.escape.go'
	}

	{
		match: '(^constant.character.escape.gotemplate$)'
		name: 'constant.character.escape.gotemplate'
	}

	{
		match: '(^constant.character.escape.java$)'
		name: 'constant.character.escape.java'
	}

	{
		match: '(^constant.character.escape.java-properties$)'
		name: 'constant.character.escape.java-properties'
	}

	{
		match: '(^constant.character.escape.js$)'
		name: 'constant.character.escape.js'
	}

	{
		match: '(^constant.character.escape.line-continuation.c$)'
		name: 'constant.character.escape.line-continuation.c'
	}

	{
		match: '(^constant.character.escape.linefeed.python$)'
		name: 'constant.character.escape.linefeed.python'
	}

	{
		match: '(^constant.character.escape.markdown$)'
		name: 'constant.character.escape.markdown'
	}

	{
		match: '(^constant.character.escape.newline.python$)'
		name: 'constant.character.escape.newline.python'
	}

	{
		match: '(^constant.character.escape.octal.python$)'
		name: 'constant.character.escape.octal.python'
	}

	{
		match: '(^constant.character.escape.octal.shell$)'
		name: 'constant.character.escape.octal.shell'
	}

	{
		match: '(^constant.character.escape.perl$)'
		name: 'constant.character.escape.perl'
	}

	{
		match: '(^constant.character.escape.perl.perl$)'
		name: 'constant.character.escape.perl.perl'
	}

	{
		match: '(^constant.character.escape.perl6$)'
		name: 'constant.character.escape.perl6'
	}

	{
		match: '(^constant.character.escape.php$)'
		name: 'constant.character.escape.php'
	}

	{
		match: '(^constant.character.escape.plist$)'
		name: 'constant.character.escape.plist'
	}

	{
		match: '(^constant.character.escape.regex.php$)'
		name: 'constant.character.escape.regex.php'
	}

	{
		match: '(^constant.character.escape.return.python$)'
		name: 'constant.character.escape.return.python'
	}

	{
		match: '(^constant.character.escape.ruby$)'
		name: 'constant.character.escape.ruby'
	}

	{
		match: '(^constant.character.escape.sass$)'
		name: 'constant.character.escape.sass'
	}

	{
		match: '(^constant.character.escape.scss$)'
		name: 'constant.character.escape.scss'
	}

	{
		match: '(^constant.character.escape.shell$)'
		name: 'constant.character.escape.shell'
	}

	{
		match: '(^constant.character.escape.single-quote.python$)'
		name: 'constant.character.escape.single-quote.python'
	}

	{
		match: '(^constant.character.escape.slash.sql$)'
		name: 'constant.character.escape.slash.sql'
	}

	{
		match: '(^constant.character.escape.sql$)'
		name: 'constant.character.escape.sql'
	}

	{
		match: '(^constant.character.escape.tab.python$)'
		name: 'constant.character.escape.tab.python'
	}

	{
		match: '(^constant.character.escape.toml$)'
		name: 'constant.character.escape.toml'
	}

	{
		match: '(^constant.character.escape.unicode.32-bit-hex.python$)'
		name: 'constant.character.escape.unicode.32-bit-hex.python'
	}

	{
		match: '(^constant.character.escape.unicode.name.python$)'
		name: 'constant.character.escape.unicode.name.python'
	}

	{
		match: '(^constant.character.escape.vertical-tab.python$)'
		name: 'constant.character.escape.vertical-tab.python'
	}

	{
		match: '(^constant.character.escape.yaml$)'
		name: 'constant.character.escape.yaml'
	}

	{
		match: '(^constant.character.numeric.regexp$)'
		name: 'constant.character.numeric.regexp'
	}

	{
		match: '(^constant.character.parameter-entity.xml$)'
		name: 'constant.character.parameter-entity.xml'
	}

	{
		match: '(^constant.keyword.clojure$)'
		name: 'constant.keyword.clojure'
	}

	{
		match: '(^constant.language.boolean.clojure$)'
		name: 'constant.language.boolean.clojure'
	}

	{
		match: '(^constant.language.boolean.false.coffee$)'
		name: 'constant.language.boolean.false.coffee'
	}

	{
		match: '(^constant.language.boolean.false.toml$)'
		name: 'constant.language.boolean.false.toml'
	}

	{
		match: '(^constant.language.boolean.git-config$)'
		name: 'constant.language.boolean.git-config'
	}

	{
		match: '(^constant.language.boolean.less$)'
		name: 'constant.language.boolean.less'
	}

	{
		match: '(^constant.language.boolean.ruby$)'
		name: 'constant.language.boolean.ruby'
	}

	{
		match: '(^constant.language.boolean.true.coffee$)'
		name: 'constant.language.boolean.true.coffee'
	}

	{
		match: '(^constant.language.boolean.true.toml$)'
		name: 'constant.language.boolean.true.toml'
	}

	{
		match: '(^constant.language.c$)'
		name: 'constant.language.c'
	}

	{
		match: '(^constant.language.cpp$)'
		name: 'constant.language.cpp'
	}

	{
		match: '(^constant.language.cs$)'
		name: 'constant.language.cs'
	}

	{
		match: '(^constant.language.go$)'
		name: 'constant.language.go'
	}

	{
		match: '(^constant.language.js$)'
		name: 'constant.language.js'
	}

	{
		match: '(^constant.language.json$)'
		name: 'constant.language.json'
	}

	{
		match: '(^constant.language.nil.clojure$)'
		name: 'constant.language.nil.clojure'
	}

	{
		match: '(^constant.language.nil.ruby$)'
		name: 'constant.language.nil.ruby'
	}

	{
		match: '(^constant.language.null.coffee$)'
		name: 'constant.language.null.coffee'
	}

	{
		match: '(^constant.language.null.js$)'
		name: 'constant.language.null.js'
	}

	{
		match: '(^constant.language.perl$)'
		name: 'constant.language.perl'
	}

	{
		match: '(^constant.language.php$)'
		name: 'constant.language.php'
	}

	{
		match: '(^constant.language.predicate.cocoa$)'
		name: 'constant.language.predicate.cocoa'
	}

	{
		match: '(^constant.language.python$)'
		name: 'constant.language.python'
	}

	{
		match: '(^constant.language.yaml$)'
		name: 'constant.language.yaml'
	}

	{
		match: '(^constant.numeric.arbitrary-radix.clojure$)'
		name: 'constant.numeric.arbitrary-radix.clojure'
	}

	{
		match: '(^constant.numeric.base64.xml.plist$)'
		name: 'constant.numeric.base64.xml.plist'
	}

	{
		match: '(^constant.numeric.bigdecimal.clojure$)'
		name: 'constant.numeric.bigdecimal.clojure'
	}

	{
		match: '(^constant.numeric.bigint.clojure$)'
		name: 'constant.numeric.bigint.clojure'
	}

	{
		match: '(^constant.numeric.binary.java$)'
		name: 'constant.numeric.binary.java'
	}

	{
		match: '(^constant.numeric.binary.js$)'
		name: 'constant.numeric.binary.js'
	}

	{
		match: '(^constant.numeric.c$)'
		name: 'constant.numeric.c'
	}

	{
		match: '(^constant.numeric.coffee$)'
		name: 'constant.numeric.coffee'
	}

	{
		match: '(^constant.numeric.color.hex-value.scss$)'
		name: 'constant.numeric.color.hex-value.scss'
	}

	{
		match: '(^constant.numeric.complex.python$)'
		name: 'constant.numeric.complex.python'
	}

	{
		match: '(^constant.numeric.cs$)'
		name: 'constant.numeric.cs'
	}

	{
		match: '(^constant.numeric.css$)'
		name: 'constant.numeric.css'
	}

	{
		match: '(^constant.numeric.decimal.java$)'
		name: 'constant.numeric.decimal.java'
	}

	{
		match: '(^constant.numeric.float.python$)'
		name: 'constant.numeric.float.python'
	}

	{
		match: '(^constant.numeric.floating-point.go$)'
		name: 'constant.numeric.floating-point.go'
	}

	{
		match: '(^constant.numeric.hex.java$)'
		name: 'constant.numeric.hex.java'
	}

	{
		match: '(^constant.numeric.hex.js$)'
		name: 'constant.numeric.hex.js'
	}

	{
		match: '(^constant.numeric.hex.php$)'
		name: 'constant.numeric.hex.php'
	}

	{
		match: '(^constant.numeric.hex.shell$)'
		name: 'constant.numeric.hex.shell'
	}

	{
		match: '(^constant.numeric.hexadecimal.clojure$)'
		name: 'constant.numeric.hexadecimal.clojure'
	}

	{
		match: '(^constant.numeric.index.php$)'
		name: 'constant.numeric.index.php'
	}

	{
		match: '(^constant.numeric.integer.binary.python$)'
		name: 'constant.numeric.integer.binary.python'
	}

	{
		match: '(^constant.numeric.integer.go$)'
		name: 'constant.numeric.integer.go'
	}

	{
		match: '(^constant.numeric.integer.hexadecimal.python$)'
		name: 'constant.numeric.integer.hexadecimal.python'
	}

	{
		match: '(^constant.numeric.integer.long.binary.python$)'
		name: 'constant.numeric.integer.long.binary.python'
	}

	{
		match: '(^constant.numeric.integer.long.decimal.python$)'
		name: 'constant.numeric.integer.long.decimal.python'
	}

	{
		match: '(^constant.numeric.integer.long.hexadecimal.python$)'
		name: 'constant.numeric.integer.long.hexadecimal.python'
	}

	{
		match: '(^constant.numeric.integer.long.octal.python$)'
		name: 'constant.numeric.integer.long.octal.python'
	}

	{
		match: '(^constant.numeric.integer.octal.python$)'
		name: 'constant.numeric.integer.octal.python'
	}

	{
		match: '(^constant.numeric.integer.shell$)'
		name: 'constant.numeric.integer.shell'
	}

	{
		match: '(^constant.numeric.json$)'
		name: 'constant.numeric.json'
	}

	{
		match: '(^constant.numeric.long.clojure$)'
		name: 'constant.numeric.long.clojure'
	}

	{
		match: '(^constant.numeric.octal.clojure$)'
		name: 'constant.numeric.octal.clojure'
	}

	{
		match: '(^constant.numeric.octal.java$)'
		name: 'constant.numeric.octal.java'
	}

	{
		match: '(^constant.numeric.octal.js$)'
		name: 'constant.numeric.octal.js'
	}

	{
		match: '(^constant.numeric.octal.php$)'
		name: 'constant.numeric.octal.php'
	}

	{
		match: '(^constant.numeric.octal.shell$)'
		name: 'constant.numeric.octal.shell'
	}

	{
		match: '(^constant.numeric.other.density.css$)'
		name: 'constant.numeric.other.density.css'
	}

	{
		match: '(^constant.numeric.perl6$)'
		name: 'constant.numeric.perl6'
	}

	{
		match: '(^constant.numeric.php$)'
		name: 'constant.numeric.php'
	}

	{
		match: '(^constant.numeric.plist$)'
		name: 'constant.numeric.plist'
	}

	{
		match: '(^constant.numeric.preprocessor.c$)'
		name: 'constant.numeric.preprocessor.c'
	}

	{
		match: '(^constant.numeric.python.traceback$)'
		name: 'constant.numeric.python.traceback'
	}

	{
		match: '(^constant.numeric.ratio.clojure$)'
		name: 'constant.numeric.ratio.clojure'
	}

	{
		match: '(^constant.numeric.real.xml.plist$)'
		name: 'constant.numeric.real.xml.plist'
	}

	{
		match: '(^constant.numeric.ruby$)'
		name: 'constant.numeric.ruby'
	}

	{
		match: '(^constant.numeric.scss$)'
		name: 'constant.numeric.scss'
	}

	{
		match: '(^constant.numeric.sql$)'
		name: 'constant.numeric.sql'
	}

	{
		match: '(^constant.numeric.toml$)'
		name: 'constant.numeric.toml'
	}

	{
		match: '(^constant.numeric.yaml$)'
		name: 'constant.numeric.yaml'
	}

	{
		match: '(^constant.other.character-class.range.regexp$)'
		name: 'constant.other.character-class.range.regexp'
	}

	{
		match: '(^constant.other.character-class.set.regexp$)'
		name: 'constant.other.character-class.set.regexp'
	}

	{
		match: '(^constant.other.class.php$)'
		name: 'constant.other.class.php'
	}

	{
		match: '(^constant.other.color.rgb-percentage.sass$)'
		name: 'constant.other.color.rgb-percentage.sass'
	}

	{
		match: '(^constant.other.color.rgb-value.css$)'
		name: 'constant.other.color.rgb-value.css'
	}

	{
		match: '(^constant.other.color.rgb-value.sass$)'
		name: 'constant.other.color.rgb-value.sass'
	}

	{
		match: '(^constant.other.database-name.sql$)'
		name: 'constant.other.database-name.sql'
	}

	{
		match: '(^constant.other.date.xml.plist$)'
		name: 'constant.other.date.xml.plist'
	}

	{
		match: '(^constant.other.date.yaml$)'
		name: 'constant.other.date.yaml'
	}

	{
		match: '(^constant.other.description.jsdoc$)'
		name: 'constant.other.description.jsdoc'
	}

	{
		match: '(^constant.other.enum.java$)'
		name: 'constant.other.enum.java'
	}

	{
		match: '(^constant.other.inline-data.html$)'
		name: 'constant.other.inline-data.html'
	}

	{
		match: '(^constant.other.js$)'
		name: 'constant.other.js'
	}

	{
		match: '(^constant.other.key.perl$)'
		name: 'constant.other.key.perl'
	}

	{
		match: '(^constant.other.key.plist$)'
		name: 'constant.other.key.plist'
	}

	{
		match: '(^constant.other.object.js$)'
		name: 'constant.other.object.js'
	}

	{
		match: '(^constant.other.object.property.js$)'
		name: 'constant.other.object.property.js'
	}

	{
		match: '(^constant.other.php$)'
		name: 'constant.other.php'
	}

	{
		match: '(^constant.other.placeholder.c$)'
		name: 'constant.other.placeholder.c'
	}

	{
		match: '(^constant.other.placeholder.go$)'
		name: 'constant.other.placeholder.go'
	}

	{
		match: '(^constant.other.placeholder.gotemplate$)'
		name: 'constant.other.placeholder.gotemplate'
	}

	{
		match: '(^constant.other.placeholder.makefile$)'
		name: 'constant.other.placeholder.makefile'
	}

	{
		match: '(^constant.other.placeholder.objc$)'
		name: 'constant.other.placeholder.objc'
	}

	{
		match: '(^constant.other.placeholder.python$)'
		name: 'constant.other.placeholder.python'
	}

	{
		match: '(^constant.other.property.js$)'
		name: 'constant.other.property.js'
	}

	{
		match: '(^constant.other.reference.link.markdown$)'
		name: 'constant.other.reference.link.markdown'
	}

	{
		match: '(^constant.other.symbol.hashkey.parameter.function.ruby$)'
		name: 'constant.other.symbol.hashkey.parameter.function.ruby'
	}

	{
		match: '(^constant.other.symbol.hashkey.ruby$)'
		name: 'constant.other.symbol.hashkey.ruby'
	}

	{
		match: '(^constant.other.symbol.interpolated.ruby$)'
		name: 'constant.other.symbol.interpolated.ruby'
	}

	{
		match: '(^constant.other.symbol.ruby$)'
		name: 'constant.other.symbol.ruby'
	}

	{
		match: '(^constant.other.table-name.sql$)'
		name: 'constant.other.table-name.sql'
	}

	{
		match: '(^constant.other.variable.mac-classic.c$)'
		name: 'constant.other.variable.mac-classic.c'
	}

	{
		match: '(^constant.sha.git-rebase$)'
		name: 'constant.sha.git-rebase'
	}

	{
		match: '(^critic.gfm.addition.marker$)'
		name: 'critic.gfm.addition.marker'
	}

	{
		match: '(^critic.gfm.comment.marker$)'
		name: 'critic.gfm.comment.marker'
	}

	{
		match: '(^critic.gfm.deletion.marker$)'
		name: 'critic.gfm.deletion.marker'
	}

	{
		match: '(^critic.gfm.highlight.marker$)'
		name: 'critic.gfm.highlight.marker'
	}

	{
		match: '(^critic.gfm.substitution.marker$)'
		name: 'critic.gfm.substitution.marker'
	}

	{
		match: '(^critic.gfm.substitution.operator$)'
		name: 'critic.gfm.substitution.operator'
	}

	{
		match: '(^entity.gfm$)'
		name: 'entity.gfm'
	}

	{
		match: '(^entity.global.clojure$)'
		name: 'entity.global.clojure'
	}

	{
		match: '(^entity.name.alias.namespace.cs$)'
		name: 'entity.name.alias.namespace.cs'
	}

	{
		match: '(^entity.name.entity.other.html$)'
		name: 'entity.name.entity.other.html'
	}

	{
		match: '(^entity.name.enum.cs$)'
		name: 'entity.name.enum.cs'
	}

	{
		match: '(^entity.name.function.clojure$)'
		name: 'entity.name.function.clojure'
	}

	{
		match: '(^entity.name.function.constructor.js$)'
		name: 'entity.name.function.constructor.js'
	}

	{
		match: '(^entity.name.function.format.perl$)'
		name: 'entity.name.function.format.perl'
	}

	{
		match: '(^entity.name.function.go$)'
		name: 'entity.name.function.go'
	}

	{
		match: '(^entity.name.function.java$)'
		name: 'entity.name.function.java'
	}

	{
		match: '(^entity.name.function.js$)'
		name: 'entity.name.function.js'
	}

	{
		match: '(^entity.name.function.mustache$)'
		name: 'entity.name.function.mustache'
	}

	{
		match: '(^entity.name.function.name-of-parameter.objc$)'
		name: 'entity.name.function.name-of-parameter.objc'
	}

	{
		match: '(^entity.name.function.namespace-prefix.css$)'
		name: 'entity.name.function.namespace-prefix.css'
	}

	{
		match: '(^entity.name.function.objc$)'
		name: 'entity.name.function.objc'
	}

	{
		match: '(^entity.name.function.perl$)'
		name: 'entity.name.function.perl'
	}

	{
		match: '(^entity.name.function.php$)'
		name: 'entity.name.function.php'
	}

	{
		match: '(^entity.name.function.preprocessor.c$)'
		name: 'entity.name.function.preprocessor.c'
	}

	{
		match: '(^entity.name.function.python.traceback$)'
		name: 'entity.name.function.python.traceback'
	}

	{
		match: '(^entity.name.function.ruby$)'
		name: 'entity.name.function.ruby'
	}

	{
		match: '(^entity.name.function.scss$)'
		name: 'entity.name.function.scss'
	}

	{
		match: '(^entity.name.function.shell$)'
		name: 'entity.name.function.shell'
	}

	{
		match: '(^entity.name.function.sql$)'
		name: 'entity.name.function.sql'
	}

	{
		match: '(^entity.name.function.target.makefile$)'
		name: 'entity.name.function.target.makefile'
	}

	{
		match: '(^entity.name.generic.class.cs$)'
		name: 'entity.name.generic.class.cs'
	}

	{
		match: '(^entity.name.goto-label.php$)'
		name: 'entity.name.goto-label.php'
	}

	{
		match: '(^entity.name.import.go$)'
		name: 'entity.name.import.go'
	}

	{
		match: '(^entity.name.interface.class.cs$)'
		name: 'entity.name.interface.class.cs'
	}

	{
		match: '(^entity.name.package.go$)'
		name: 'entity.name.package.go'
	}

	{
		match: '(^entity.name.preprocessor.cs$)'
		name: 'entity.name.preprocessor.cs'
	}

	{
		match: '(^entity.name.section.back-reference.regexp$)'
		name: 'entity.name.section.back-reference.regexp'
	}

	{
		match: '(^entity.name.section.group.regexp$)'
		name: 'entity.name.section.group.regexp'
	}

	{
		match: '(^entity.name.section.subsection.git-config$)'
		name: 'entity.name.section.subsection.git-config'
	}

	{
		match: '(^entity.name.tag.block.any.html$)'
		name: 'entity.name.tag.block.any.html'
	}

	{
		match: '(^entity.name.tag.custom.css$)'
		name: 'entity.name.tag.custom.css'
	}

	{
		match: '(^entity.name.tag.custom.scss$)'
		name: 'entity.name.tag.custom.scss'
	}

	{
		match: '(^entity.name.tag.css$)'
		name: 'entity.name.tag.css'
	}

	{
		match: '(^entity.name.tag.html$)'
		name: 'entity.name.tag.html'
	}

	{
		match: '(^entity.name.tag.inline.any.html$)'
		name: 'entity.name.tag.inline.any.html'
	}

	{
		match: '(^entity.name.tag.jsp$)'
		name: 'entity.name.tag.jsp'
	}

	{
		match: '(^entity.name.tag.localname.xml$)'
		name: 'entity.name.tag.localname.xml'
	}

	{
		match: '(^entity.name.tag.localname.xml.plist$)'
		name: 'entity.name.tag.localname.xml.plist'
	}

	{
		match: '(^entity.name.tag.namespace.xml$)'
		name: 'entity.name.tag.namespace.xml'
	}

	{
		match: '(^entity.name.tag.nant$)'
		name: 'entity.name.tag.nant'
	}

	{
		match: '(^entity.name.tag.other.html$)'
		name: 'entity.name.tag.other.html'
	}

	{
		match: '(^entity.name.tag.pragma-mark.c$)'
		name: 'entity.name.tag.pragma-mark.c'
	}

	{
		match: '(^entity.name.tag.reference.scss$)'
		name: 'entity.name.tag.reference.scss'
	}

	{
		match: '(^entity.name.tag.script.html$)'
		name: 'entity.name.tag.script.html'
	}

	{
		match: '(^entity.name.tag.structure.any.html$)'
		name: 'entity.name.tag.structure.any.html'
	}

	{
		match: '(^entity.name.tag.style.html$)'
		name: 'entity.name.tag.style.html'
	}

	{
		match: '(^entity.name.tag.wildcard.sass$)'
		name: 'entity.name.tag.wildcard.sass'
	}

	{
		match: '(^entity.name.tag.wildcard.scss$)'
		name: 'entity.name.tag.wildcard.scss'
	}

	{
		match: '(^entity.name.tag.xml$)'
		name: 'entity.name.tag.xml'
	}

	{
		match: '(^entity.name.tag.xml.html$)'
		name: 'entity.name.tag.xml.html'
	}

	{
		match: '(^entity.name.tag.xml.plist$)'
		name: 'entity.name.tag.xml.plist'
	}

	{
		match: '(^entity.name.tag.yaml$)'
		name: 'entity.name.tag.yaml'
	}

	{
		match: '(^entity.name.testcase.junit-test-report$)'
		name: 'entity.name.testcase.junit-test-report'
	}

	{
		match: '(^entity.name.testsuite.junit-test-report$)'
		name: 'entity.name.testsuite.junit-test-report'
	}

	{
		match: '(^entity.name.type.class.coffee$)'
		name: 'entity.name.type.class.coffee'
	}

	{
		match: '(^entity.name.type.class.java$)'
		name: 'entity.name.type.class.java'
	}

	{
		match: '(^entity.name.type.class.js$)'
		name: 'entity.name.type.class.js'
	}

	{
		match: '(^entity.name.type.class.perl$)'
		name: 'entity.name.type.class.perl'
	}

	{
		match: '(^entity.name.type.class.perl6$)'
		name: 'entity.name.type.class.perl6'
	}

	{
		match: '(^entity.name.type.class.php$)'
		name: 'entity.name.type.class.php'
	}

	{
		match: '(^entity.name.type.class.ruby$)'
		name: 'entity.name.type.class.ruby'
	}

	{
		match: '(^entity.name.type.cpp$)'
		name: 'entity.name.type.cpp'
	}

	{
		match: '(^entity.name.type.enum.java$)'
		name: 'entity.name.type.enum.java'
	}

	{
		match: '(^entity.name.type.go$)'
		name: 'entity.name.type.go'
	}

	{
		match: '(^entity.name.type.inherited.cpp$)'
		name: 'entity.name.type.inherited.cpp'
	}

	{
		match: '(^entity.name.type.instance.coffee$)'
		name: 'entity.name.type.instance.coffee'
	}

	{
		match: '(^entity.name.type.instance.js$)'
		name: 'entity.name.type.instance.js'
	}

	{
		match: '(^entity.name.type.instance.jsdoc$)'
		name: 'entity.name.type.instance.jsdoc'
	}

	{
		match: '(^entity.name.type.instance.pod.perl$)'
		name: 'entity.name.type.instance.pod.perl'
	}

	{
		match: '(^entity.name.type.interface.php$)'
		name: 'entity.name.type.interface.php'
	}

	{
		match: '(^entity.name.type.module.ruby$)'
		name: 'entity.name.type.module.ruby'
	}

	{
		match: '(^entity.name.type.namespace.cs$)'
		name: 'entity.name.type.namespace.cs'
	}

	{
		match: '(^entity.name.type.objc$)'
		name: 'entity.name.type.objc'
	}

	{
		match: '(^entity.name.type.object.coffee$)'
		name: 'entity.name.type.object.coffee'
	}

	{
		match: '(^entity.name.type.object.console.js$)'
		name: 'entity.name.type.object.console.js'
	}

	{
		match: '(^entity.name.type.trait.php$)'
		name: 'entity.name.type.trait.php'
	}

	{
		match: '(^entity.name.variable.cs$)'
		name: 'entity.name.variable.cs'
	}

	{
		match: '(^entity.name.variables.cs$)'
		name: 'entity.name.variables.cs'
	}

	{
		match: '(^entity.other.attribute-name$)'
		name: 'entity.other.attribute-name'
	}

	{
		match: '(^entity.other.attribute-name.attribute.css$)'
		name: 'entity.other.attribute-name.attribute.css'
	}

	{
		match: '(^entity.other.attribute-name.attribute.sass$)'
		name: 'entity.other.attribute-name.attribute.sass'
	}

	{
		match: '(^entity.other.attribute-name.attribute.scss$)'
		name: 'entity.other.attribute-name.attribute.scss'
	}

	{
		match: '(^entity.other.attribute-name.class.mixin.css$)'
		name: 'entity.other.attribute-name.class.mixin.css'
	}

	{
		match: '(^entity.other.attribute-name.class.sass$)'
		name: 'entity.other.attribute-name.class.sass'
	}

	{
		match: '(^entity.other.attribute-name.css$)'
		name: 'entity.other.attribute-name.css'
	}

	{
		match: '(^entity.other.attribute-name.html$)'
		name: 'entity.other.attribute-name.html'
	}

	{
		match: '(^entity.other.attribute-name.id$)'
		name: 'entity.other.attribute-name.id'
	}

	{
		match: '(^entity.other.attribute-name.id.css$)'
		name: 'entity.other.attribute-name.id.css'
	}

	{
		match: '(^entity.other.attribute-name.localname.xml$)'
		name: 'entity.other.attribute-name.localname.xml'
	}

	{
		match: '(^entity.other.attribute-name.nant$)'
		name: 'entity.other.attribute-name.nant'
	}

	{
		match: '(^entity.other.attribute-name.parent-selector-suffix.css$)'
		name: 'entity.other.attribute-name.parent-selector-suffix.css'
	}

	{
		match: '(^entity.other.attribute-name.parent-selector-suffix.css.sass$)'
		name: 'entity.other.attribute-name.parent-selector-suffix.css.sass'
	}

	{
		match: '(^entity.other.attribute-name.pragma.preprocessor.c$)'
		name: 'entity.other.attribute-name.pragma.preprocessor.c'
	}

	{
		match: '(^entity.other.attribute-name.pseudo-class.css$)'
		name: 'entity.other.attribute-name.pseudo-class.css'
	}

	{
		match: '(^entity.other.attribute-name.pseudo-element.css$)'
		name: 'entity.other.attribute-name.pseudo-element.css'
	}

	{
		match: '(^entity.other.attribute-name.scss$)'
		name: 'entity.other.attribute-name.scss'
	}

	{
		match: '(^entity.other.attribute-name.xml$)'
		name: 'entity.other.attribute-name.xml'
	}

	{
		match: '(^entity.other.inherited-class.coffee$)'
		name: 'entity.other.inherited-class.coffee'
	}

	{
		match: '(^entity.other.inherited-class.js$)'
		name: 'entity.other.inherited-class.js'
	}

	{
		match: '(^entity.other.inherited-class.module.first.ruby$)'
		name: 'entity.other.inherited-class.module.first.ruby'
	}

	{
		match: '(^entity.other.inherited-class.module.second.ruby$)'
		name: 'entity.other.inherited-class.module.second.ruby'
	}

	{
		match: '(^entity.other.inherited-class.module.third.ruby$)'
		name: 'entity.other.inherited-class.module.third.ruby'
	}

	{
		match: '(^entity.other.inherited-class.objc$)'
		name: 'entity.other.inherited-class.objc'
	}

	{
		match: '(^entity.other.inherited-class.php$)'
		name: 'entity.other.inherited-class.php'
	}

	{
		match: '(^entity.other.inherited-class.ruby$)'
		name: 'entity.other.inherited-class.ruby'
	}

	{
		match: '(^entity.other.keyframe-offset.percentage.css$)'
		name: 'entity.other.keyframe-offset.percentage.css'
	}

	{
		match: '(^entity.other.namespace-prefix.css$)'
		name: 'entity.other.namespace-prefix.css'
	}

	{
		match: '(^front-matter.yaml.gfm$)'
		name: 'front-matter.yaml.gfm'
	}

	{
		match: '(^invalid.deprecated.color.system.css$)'
		name: 'invalid.deprecated.color.system.css'
	}

	{
		match: '(^invalid.deprecated.combinator.css$)'
		name: 'invalid.deprecated.combinator.css'
	}

	{
		match: '(^invalid.deprecated.constant.media.css$)'
		name: 'invalid.deprecated.constant.media.css'
	}

	{
		match: '(^invalid.deprecated.line-too-long.git-commit$)'
		name: 'invalid.deprecated.line-too-long.git-commit'
	}

	{
		match: '(^invalid.deprecated.media.css$)'
		name: 'invalid.deprecated.media.css'
	}

	{
		match: '(^invalid.deprecated.operator.python$)'
		name: 'invalid.deprecated.operator.python'
	}

	{
		match: '(^invalid.illegal.bad-ampersand.html$)'
		name: 'invalid.illegal.bad-ampersand.html'
	}

	{
		match: '(^invalid.illegal.bad-ampersand.nant$)'
		name: 'invalid.illegal.bad-ampersand.nant'
	}

	{
		match: '(^invalid.illegal.bad-ampersand.xml$)'
		name: 'invalid.illegal.bad-ampersand.xml'
	}

	{
		match: '(^invalid.illegal.bad-ampersand.xml.plist$)'
		name: 'invalid.illegal.bad-ampersand.xml.plist'
	}

	{
		match: '(^invalid.illegal.bad-comments-or-CDATA.html$)'
		name: 'invalid.illegal.bad-comments-or-CDATA.html'
	}

	{
		match: '(^invalid.illegal.character_not_allowed_here.java$)'
		name: 'invalid.illegal.character_not_allowed_here.java'
	}

	{
		match: '(^invalid.illegal.character-data-not-allowed-here.xml.plist$)'
		name: 'invalid.illegal.character-data-not-allowed-here.xml.plist'
	}

	{
		match: '(^invalid.illegal.character-not-allowed-here.plist$)'
		name: 'invalid.illegal.character-not-allowed-here.plist'
	}

	{
		match: '(^invalid.illegal.colon.css$)'
		name: 'invalid.illegal.colon.css'
	}

	{
		match: '(^invalid.illegal.comma.css$)'
		name: 'invalid.illegal.comma.css'
	}

	{
		match: '(^invalid.illegal.delimiter-too-long.cpp$)'
		name: 'invalid.illegal.delimiter-too-long.cpp'
	}

	{
		match: '(^invalid.illegal.deprecated.sass$)'
		name: 'invalid.illegal.deprecated.sass'
	}

	{
		match: '(^invalid.illegal.double-dash-not-allowed.xml.plist$)'
		name: 'invalid.illegal.double-dash-not-allowed.xml.plist'
	}

	{
		match: '(^invalid.illegal.escape.yaml$)'
		name: 'invalid.illegal.escape.yaml'
	}

	{
		match: '(^invalid.illegal.expected-array-separator.json$)'
		name: 'invalid.illegal.expected-array-separator.json'
	}

	{
		match: '(^invalid.illegal.expected-dictionary-separator.json$)'
		name: 'invalid.illegal.expected-dictionary-separator.json'
	}

	{
		match: '(^invalid.illegal.identifier.java$)'
		name: 'invalid.illegal.identifier.java'
	}

	{
		match: '(^invalid.illegal.identifier.js$)'
		name: 'invalid.illegal.identifier.js'
	}

	{
		match: '(^invalid.illegal.identifier.scss$)'
		name: 'invalid.illegal.identifier.scss'
	}

	{
		match: '(^invalid.illegal.incomplete.html$)'
		name: 'invalid.illegal.incomplete.html'
	}

	{
		match: '(^invalid.illegal.invalid-character.plist$)'
		name: 'invalid.illegal.invalid-character.plist'
	}

	{
		match: '(^invalid.illegal.invalid-character.xml.plist$)'
		name: 'invalid.illegal.invalid-character.xml.plist'
	}

	{
		match: '(^invalid.illegal.js$)'
		name: 'invalid.illegal.js'
	}

	{
		match: '(^invalid.illegal.leading-whitespace.charset.css$)'
		name: 'invalid.illegal.leading-whitespace.charset.css'
	}

	{
		match: '(^invalid.illegal.line-too-long.git-commit$)'
		name: 'invalid.illegal.line-too-long.git-commit'
	}

	{
		match: '(^invalid.illegal.macro-name.c$)'
		name: 'invalid.illegal.macro-name.c'
	}

	{
		match: '(^invalid.illegal.missing-asterisk.phpdoc.php$)'
		name: 'invalid.illegal.missing-asterisk.phpdoc.php'
	}

	{
		match: '(^invalid.illegal.missing-inheritance.python$)'
		name: 'invalid.illegal.missing-inheritance.python'
	}

	{
		match: '(^invalid.illegal.missing-parameters.python$)'
		name: 'invalid.illegal.missing-parameters.python'
	}

	{
		match: '(^invalid.illegal.missing-section-begin.python$)'
		name: 'invalid.illegal.missing-section-begin.python'
	}

	{
		match: '(^invalid.illegal.name.python$)'
		name: 'invalid.illegal.name.python'
	}

	{
		match: '(^invalid.illegal.no-whitespace.charset.css$)'
		name: 'invalid.illegal.no-whitespace.charset.css'
	}

	{
		match: '(^invalid.illegal.non-null-typehinted.php$)'
		name: 'invalid.illegal.non-null-typehinted.php'
	}

	{
		match: '(^invalid.illegal.not-a-number.xml.plist$)'
		name: 'invalid.illegal.not-a-number.xml.plist'
	}

	{
		match: '(^invalid.illegal.not-double-quoted.charset.css$)'
		name: 'invalid.illegal.not-double-quoted.charset.css'
	}

	{
		match: '(^invalid.illegal.numeric.go$)'
		name: 'invalid.illegal.numeric.go'
	}

	{
		match: '(^invalid.illegal.placeholder.c$)'
		name: 'invalid.illegal.placeholder.c'
	}

	{
		match: '(^invalid.illegal.placeholder.gotemplate$)'
		name: 'invalid.illegal.placeholder.gotemplate'
	}

	{
		match: '(^invalid.illegal.punctuation.sass$)'
		name: 'invalid.illegal.punctuation.sass'
	}

	{
		match: '(^invalid.illegal.receive-channel.go$)'
		name: 'invalid.illegal.receive-channel.go'
	}

	{
		match: '(^invalid.illegal.sass$)'
		name: 'invalid.illegal.sass'
	}

	{
		match: '(^invalid.illegal.scss$)'
		name: 'invalid.illegal.scss'
	}

	{
		match: '(^invalid.illegal.send-channel.go$)'
		name: 'invalid.illegal.send-channel.go'
	}

	{
		match: '(^invalid.illegal.slice.go$)'
		name: 'invalid.illegal.slice.go'
	}

	{
		match: '(^invalid.illegal.stray-comment-end.c$)'
		name: 'invalid.illegal.stray-comment-end.c'
	}

	{
		match: '(^invalid.illegal.string.js$)'
		name: 'invalid.illegal.string.js'
	}

	{
		match: '(^invalid.illegal.subject-no-trailing-period.git-commit$)'
		name: 'invalid.illegal.subject-no-trailing-period.git-commit'
	}

	{
		match: '(^invalid.illegal.tag-not-recognized.xml.plist$)'
		name: 'invalid.illegal.tag-not-recognized.xml.plist'
	}

	{
		match: '(^invalid.illegal.trailing-whitespace.php$)'
		name: 'invalid.illegal.trailing-whitespace.php'
	}

	{
		match: '(^invalid.illegal.unclosed-string.charset.css$)'
		name: 'invalid.illegal.unclosed-string.charset.css'
	}

	{
		match: '(^invalid.illegal.unclosed-string.python$)'
		name: 'invalid.illegal.unclosed-string.python'
	}

	{
		match: '(^invalid.illegal.unclosed.string.css$)'
		name: 'invalid.illegal.unclosed.string.css'
	}

	{
		match: '(^invalid.illegal.unexpected-characters.charset.css$)'
		name: 'invalid.illegal.unexpected-characters.charset.css'
	}

	{
		match: '(^invalid.illegal.unexpected-text.python$)'
		name: 'invalid.illegal.unexpected-text.python'
	}

	{
		match: '(^invalid.illegal.unicode-escape.js$)'
		name: 'invalid.illegal.unicode-escape.js'
	}

	{
		match: '(^invalid.illegal.unknown-escape.c$)'
		name: 'invalid.illegal.unknown-escape.c'
	}

	{
		match: '(^invalid.illegal.unknown-escape.git-config$)'
		name: 'invalid.illegal.unknown-escape.git-config'
	}

	{
		match: '(^invalid.illegal.unknown-escape.go$)'
		name: 'invalid.illegal.unknown-escape.go'
	}

	{
		match: '(^invalid.illegal.unknown-escape.gotemplate$)'
		name: 'invalid.illegal.unknown-escape.gotemplate'
	}

	{
		match: '(^invalid.illegal.unknown-escape.objc$)'
		name: 'invalid.illegal.unknown-escape.objc'
	}

	{
		match: '(^invalid.illegal.unknown-escape.strings$)'
		name: 'invalid.illegal.unknown-escape.strings'
	}

	{
		match: '(^invalid.illegal.unknown-method.objc$)'
		name: 'invalid.illegal.unknown-method.objc'
	}

	{
		match: '(^invalid.illegal.unknown-rune.go$)'
		name: 'invalid.illegal.unknown-rune.go'
	}

	{
		match: '(^invalid.illegal.unrecognized-string-escape.json$)'
		name: 'invalid.illegal.unrecognized-string-escape.json'
	}

	{
		match: '(^invalid.illegal.whitespace.charset.css$)'
		name: 'invalid.illegal.whitespace.charset.css'
	}

	{
		match: '(^invalid.illegal.whitespace.markdown$)'
		name: 'invalid.illegal.whitespace.markdown'
	}

	{
		match: '(^invalid.illegal.wrong-access-type.phpdoc.php$)'
		name: 'invalid.illegal.wrong-access-type.phpdoc.php'
	}

	{
		match: '(^invalid.illegal.you-forgot-semicolon.cpp$)'
		name: 'invalid.illegal.you-forgot-semicolon.cpp'
	}

	{
		match: '(^invalid.trailing-whitespace$)'
		name: 'invalid.trailing-whitespace'
	}

	{
		match: '(^keyword.channel.go$)'
		name: 'keyword.channel.go'
	}

	{
		match: '(^keyword.class.cs$)'
		name: 'keyword.class.cs'
	}

	{
		match: '(^keyword.const.go$)'
		name: 'keyword.const.go'
	}

	{
		match: '(^keyword.control.anchor.perl$)'
		name: 'keyword.control.anchor.perl'
	}

	{
		match: '(^keyword.control.anchor.regexp$)'
		name: 'keyword.control.anchor.regexp'
	}

	{
		match: '(^keyword.control.at-rule.include.scss$)'
		name: 'keyword.control.at-rule.include.scss'
	}

	{
		match: '(^keyword.control.at-rule.media.css$)'
		name: 'keyword.control.at-rule.media.css'
	}

	{
		match: '(^keyword.control.attribute.jsp$)'
		name: 'keyword.control.attribute.jsp'
	}

	{
		match: '(^keyword.control.c$)'
		name: 'keyword.control.c'
	}

	{
		match: '(^keyword.control.case.js$)'
		name: 'keyword.control.case.js'
	}

	{
		match: '(^keyword.control.catch.java$)'
		name: 'keyword.control.catch.java'
	}

	{
		match: '(^keyword.control.clojure$)'
		name: 'keyword.control.clojure'
	}

	{
		match: '(^keyword.control.coffee$)'
		name: 'keyword.control.coffee'
	}

	{
		match: '(^keyword.control.conditional.perl6$)'
		name: 'keyword.control.conditional.perl6'
	}

	{
		match: '(^keyword.control.conditional.python$)'
		name: 'keyword.control.conditional.python'
	}

	{
		match: '(^keyword.control.control-handlers.perl6$)'
		name: 'keyword.control.control-handlers.perl6'
	}

	{
		match: '(^keyword.control.cpp$)'
		name: 'keyword.control.cpp'
	}

	{
		match: '(^keyword.control.cs$)'
		name: 'keyword.control.cs'
	}

	{
		match: '(^keyword.control.define.makefile$)'
		name: 'keyword.control.define.makefile'
	}

	{
		match: '(^keyword.control.directive.conditional.c$)'
		name: 'keyword.control.directive.conditional.c'
	}

	{
		match: '(^keyword.control.directive.pragma.pragma-mark.c$)'
		name: 'keyword.control.directive.pragma.pragma-mark.c'
	}

	{
		match: '(^keyword.control.else.makefile$)'
		name: 'keyword.control.else.makefile'
	}

	{
		match: '(^keyword.control.exception.catch.php$)'
		name: 'keyword.control.exception.catch.php'
	}

	{
		match: '(^keyword.control.exception.php$)'
		name: 'keyword.control.exception.php'
	}

	{
		match: '(^keyword.control.exception.python$)'
		name: 'keyword.control.exception.python'
	}

	{
		match: '(^keyword.control.finally.java$)'
		name: 'keyword.control.finally.java'
	}

	{
		match: '(^keyword.control.flowcontrol.perl6$)'
		name: 'keyword.control.flowcontrol.perl6'
	}

	{
		match: '(^keyword.control.gotemplate$)'
		name: 'keyword.control.gotemplate'
	}

	{
		match: '(^keyword.control.heredoc-token.shell$)'
		name: 'keyword.control.heredoc-token.shell'
	}

	{
		match: '(^keyword.control.import.c$)'
		name: 'keyword.control.import.c'
	}

	{
		match: '(^keyword.control.import.else.c$)'
		name: 'keyword.control.import.else.c'
	}

	{
		match: '(^keyword.control.import.from.python$)'
		name: 'keyword.control.import.from.python'
	}

	{
		match: '(^keyword.control.import.if.c$)'
		name: 'keyword.control.import.if.c'
	}

	{
		match: '(^keyword.control.import.option.less$)'
		name: 'keyword.control.import.option.less'
	}

	{
		match: '(^keyword.control.import.pragma.c$)'
		name: 'keyword.control.import.pragma.c'
	}

	{
		match: '(^keyword.control.include.jsp$)'
		name: 'keyword.control.include.jsp'
	}

	{
		match: '(^keyword.control.include.makefile$)'
		name: 'keyword.control.include.makefile'
	}

	{
		match: '(^keyword.control.inheritance.coffee$)'
		name: 'keyword.control.inheritance.coffee'
	}

	{
		match: '(^keyword.control.java$)'
		name: 'keyword.control.java'
	}

	{
		match: '(^keyword.control.js$)'
		name: 'keyword.control.js'
	}

	{
		match: '(^keyword.control.logical.operator.less$)'
		name: 'keyword.control.logical.operator.less'
	}

	{
		match: '(^keyword.control.module.ruby$)'
		name: 'keyword.control.module.ruby'
	}

	{
		match: '(^keyword.control.new.java$)'
		name: 'keyword.control.new.java'
	}

	{
		match: '(^keyword.control.operator$)'
		name: 'keyword.control.operator'
	}

	{
		match: '(^keyword.control.page.jsp$)'
		name: 'keyword.control.page.jsp'
	}

	{
		match: '(^keyword.control.perl$)'
		name: 'keyword.control.perl'
	}

	{
		match: '(^keyword.control.php$)'
		name: 'keyword.control.php'
	}

	{
		match: '(^keyword.control.protocol-specification.objc$)'
		name: 'keyword.control.protocol-specification.objc'
	}

	{
		match: '(^keyword.control.pseudo-method.ruby$)'
		name: 'keyword.control.pseudo-method.ruby'
	}

	{
		match: '(^keyword.control.regexp-option.perl$)'
		name: 'keyword.control.regexp-option.perl'
	}

	{
		match: '(^keyword.control.repeat.perl6$)'
		name: 'keyword.control.repeat.perl6'
	}

	{
		match: '(^keyword.control.repeat.python$)'
		name: 'keyword.control.repeat.python'
	}

	{
		match: '(^keyword.control.ruby$)'
		name: 'keyword.control.ruby'
	}

	{
		match: '(^keyword.control.shell$)'
		name: 'keyword.control.shell'
	}

	{
		match: '(^keyword.control.start-block.ruby$)'
		name: 'keyword.control.start-block.ruby'
	}

	{
		match: '(^keyword.control.statement.python$)'
		name: 'keyword.control.statement.python'
	}

	{
		match: '(^keyword.control.switch.js$)'
		name: 'keyword.control.switch.js'
	}

	{
		match: '(^keyword.control.tag.jsp$)'
		name: 'keyword.control.tag.jsp'
	}

	{
		match: '(^keyword.control.taglib.jsp$)'
		name: 'keyword.control.taglib.jsp'
	}

	{
		match: '(^keyword.control.ternary.java$)'
		name: 'keyword.control.ternary.java'
	}

	{
		match: '(^keyword.control.try.java$)'
		name: 'keyword.control.try.java'
	}

	{
		match: '(^keyword.control.variable.jsp$)'
		name: 'keyword.control.variable.jsp'
	}

	{
		match: '(^keyword.control.vpath.makefile$)'
		name: 'keyword.control.vpath.makefile'
	}

	{
		match: '(^keyword.enum.cs$)'
		name: 'keyword.enum.cs'
	}

	{
		match: '(^keyword.function.go$)'
		name: 'keyword.function.go'
	}

	{
		match: '(^keyword.import.go$)'
		name: 'keyword.import.go'
	}

	{
		match: '(^keyword.interface.go$)'
		name: 'keyword.interface.go'
	}

	{
		match: '(^keyword.linq.cs$)'
		name: 'keyword.linq.cs'
	}

	{
		match: '(^keyword.map.go$)'
		name: 'keyword.map.go'
	}

	{
		match: '(^keyword.operator.arithmetic.bitwise.go$)'
		name: 'keyword.operator.arithmetic.bitwise.go'
	}

	{
		match: '(^keyword.operator.arithmetic.css$)'
		name: 'keyword.operator.arithmetic.css'
	}

	{
		match: '(^keyword.operator.arithmetic.go$)'
		name: 'keyword.operator.arithmetic.go'
	}

	{
		match: '(^keyword.operator.arithmetic.java$)'
		name: 'keyword.operator.arithmetic.java'
	}

	{
		match: '(^keyword.operator.arithmetic.php$)'
		name: 'keyword.operator.arithmetic.php'
	}

	{
		match: '(^keyword.operator.assert.expression-separator.java$)'
		name: 'keyword.operator.assert.expression-separator.java'
	}

	{
		match: '(^keyword.operator.assignment.arithmetic.java$)'
		name: 'keyword.operator.assignment.arithmetic.java'
	}

	{
		match: '(^keyword.operator.assignment.augmented.python$)'
		name: 'keyword.operator.assignment.augmented.python'
	}

	{
		match: '(^keyword.operator.assignment.augmented.ruby$)'
		name: 'keyword.operator.assignment.augmented.ruby'
	}

	{
		match: '(^keyword.operator.assignment.bitwise.java$)'
		name: 'keyword.operator.assignment.bitwise.java'
	}

	{
		match: '(^keyword.operator.assignment.c$)'
		name: 'keyword.operator.assignment.c'
	}

	{
		match: '(^keyword.operator.assignment.compound.bitwise.c$)'
		name: 'keyword.operator.assignment.compound.bitwise.c'
	}

	{
		match: '(^keyword.operator.assignment.compound.bitwise.js$)'
		name: 'keyword.operator.assignment.compound.bitwise.js'
	}

	{
		match: '(^keyword.operator.assignment.compound.c$)'
		name: 'keyword.operator.assignment.compound.c'
	}

	{
		match: '(^keyword.operator.assignment.compound.js$)'
		name: 'keyword.operator.assignment.compound.js'
	}

	{
		match: '(^keyword.operator.assignment.cs$)'
		name: 'keyword.operator.assignment.cs'
	}

	{
		match: '(^keyword.operator.assignment.go$)'
		name: 'keyword.operator.assignment.go'
	}

	{
		match: '(^keyword.operator.assignment.java$)'
		name: 'keyword.operator.assignment.java'
	}

	{
		match: '(^keyword.operator.assignment.js$)'
		name: 'keyword.operator.assignment.js'
	}

	{
		match: '(^keyword.operator.assignment.php$)'
		name: 'keyword.operator.assignment.php'
	}

	{
		match: '(^keyword.operator.assignment.python$)'
		name: 'keyword.operator.assignment.python'
	}

	{
		match: '(^keyword.operator.assignment.ruby$)'
		name: 'keyword.operator.assignment.ruby'
	}

	{
		match: '(^keyword.operator.assignment.toml$)'
		name: 'keyword.operator.assignment.toml'
	}

	{
		match: '(^keyword.operator.bitwise.java$)'
		name: 'keyword.operator.bitwise.java'
	}

	{
		match: '(^keyword.operator.bitwise.js$)'
		name: 'keyword.operator.bitwise.js'
	}

	{
		match: '(^keyword.operator.bitwise.php$)'
		name: 'keyword.operator.bitwise.php'
	}

	{
		match: '(^keyword.operator.bitwise.shift.c$)'
		name: 'keyword.operator.bitwise.shift.c'
	}

	{
		match: '(^keyword.operator.bitwise.shift.js$)'
		name: 'keyword.operator.bitwise.shift.js'
	}

	{
		match: '(^keyword.operator.c$)'
		name: 'keyword.operator.c'
	}

	{
		match: '(^keyword.operator.channel.go$)'
		name: 'keyword.operator.channel.go'
	}

	{
		match: '(^keyword.operator.class.php$)'
		name: 'keyword.operator.class.php'
	}

	{
		match: '(^keyword.operator.coffee$)'
		name: 'keyword.operator.coffee'
	}

	{
		match: '(^keyword.operator.combinator.css$)'
		name: 'keyword.operator.combinator.css'
	}

	{
		match: '(^keyword.operator.comparison.go$)'
		name: 'keyword.operator.comparison.go'
	}

	{
		match: '(^keyword.operator.comparison.js$)'
		name: 'keyword.operator.comparison.js'
	}

	{
		match: '(^keyword.operator.comparison.perl$)'
		name: 'keyword.operator.comparison.perl'
	}

	{
		match: '(^keyword.operator.comparison.php$)'
		name: 'keyword.operator.comparison.php'
	}

	{
		match: '(^keyword.operator.comparison.predicate.cocoa$)'
		name: 'keyword.operator.comparison.predicate.cocoa'
	}

	{
		match: '(^keyword.operator.comparison.python$)'
		name: 'keyword.operator.comparison.python'
	}

	{
		match: '(^keyword.operator.comparison.ruby$)'
		name: 'keyword.operator.comparison.ruby'
	}

	{
		match: '(^keyword.operator.comparison.sass$)'
		name: 'keyword.operator.comparison.sass'
	}

	{
		match: '(^keyword.operator.comparison.scss$)'
		name: 'keyword.operator.comparison.scss'
	}

	{
		match: '(^keyword.operator.concatenator.sql$)'
		name: 'keyword.operator.concatenator.sql'
	}

	{
		match: '(^keyword.operator.control.sass$)'
		name: 'keyword.operator.control.sass'
	}

	{
		match: '(^keyword.operator.cpp$)'
		name: 'keyword.operator.cpp'
	}

	{
		match: '(^keyword.operator.cs$)'
		name: 'keyword.operator.cs'
	}

	{
		match: '(^keyword.operator.css$)'
		name: 'keyword.operator.css'
	}

	{
		match: '(^keyword.operator.decrement.c$)'
		name: 'keyword.operator.decrement.c'
	}

	{
		match: '(^keyword.operator.decrement.go$)'
		name: 'keyword.operator.decrement.go'
	}

	{
		match: '(^keyword.operator.decrement.js$)'
		name: 'keyword.operator.decrement.js'
	}

	{
		match: '(^keyword.operator.ellipsis.go$)'
		name: 'keyword.operator.ellipsis.go'
	}

	{
		match: '(^keyword.operator.error-control.php$)'
		name: 'keyword.operator.error-control.php'
	}

	{
		match: '(^keyword.operator.filetest.perl$)'
		name: 'keyword.operator.filetest.perl'
	}

	{
		match: '(^keyword.operator.glob.shell$)'
		name: 'keyword.operator.glob.shell'
	}

	{
		match: '(^keyword.operator.gradient.css$)'
		name: 'keyword.operator.gradient.css'
	}

	{
		match: '(^keyword.operator.heredoc.php$)'
		name: 'keyword.operator.heredoc.php'
	}

	{
		match: '(^keyword.operator.increment-decrement.java$)'
		name: 'keyword.operator.increment-decrement.java'
	}

	{
		match: '(^keyword.operator.increment-decrement.php$)'
		name: 'keyword.operator.increment-decrement.php'
	}

	{
		match: '(^keyword.operator.increment.c$)'
		name: 'keyword.operator.increment.c'
	}

	{
		match: '(^keyword.operator.increment.go$)'
		name: 'keyword.operator.increment.go'
	}

	{
		match: '(^keyword.operator.increment.js$)'
		name: 'keyword.operator.increment.js'
	}

	{
		match: '(^keyword.operator.initialize.gotemplate$)'
		name: 'keyword.operator.initialize.gotemplate'
	}

	{
		match: '(^keyword.operator.instanceof.java$)'
		name: 'keyword.operator.instanceof.java'
	}

	{
		match: '(^keyword.operator.js$)'
		name: 'keyword.operator.js'
	}

	{
		match: '(^keyword.operator.key.php$)'
		name: 'keyword.operator.key.php'
	}

	{
		match: '(^keyword.operator.less$)'
		name: 'keyword.operator.less'
	}

	{
		match: '(^keyword.operator.list.shell$)'
		name: 'keyword.operator.list.shell'
	}

	{
		match: '(^keyword.operator.logical.and.media.css$)'
		name: 'keyword.operator.logical.and.media.css'
	}

	{
		match: '(^keyword.operator.logical.c$)'
		name: 'keyword.operator.logical.c'
	}

	{
		match: '(^keyword.operator.logical.go$)'
		name: 'keyword.operator.logical.go'
	}

	{
		match: '(^keyword.operator.logical.php$)'
		name: 'keyword.operator.logical.php'
	}

	{
		match: '(^keyword.operator.logical.predicate.cocoa$)'
		name: 'keyword.operator.logical.predicate.cocoa'
	}

	{
		match: '(^keyword.operator.logical.ruby$)'
		name: 'keyword.operator.logical.ruby'
	}

	{
		match: '(^keyword.operator.logical.sass$)'
		name: 'keyword.operator.logical.sass'
	}

	{
		match: '(^keyword.operator.logical.scss$)'
		name: 'keyword.operator.logical.scss'
	}

	{
		match: '(^keyword.operator.logical.shell$)'
		name: 'keyword.operator.logical.shell'
	}

	{
		match: '(^keyword.operator.math.sql$)'
		name: 'keyword.operator.math.sql'
	}

	{
		match: '(^keyword.operator.negation.regexp$)'
		name: 'keyword.operator.negation.regexp'
	}

	{
		match: '(^keyword.operator.new.coffee$)'
		name: 'keyword.operator.new.coffee'
	}

	{
		match: '(^keyword.operator.new.js$)'
		name: 'keyword.operator.new.js'
	}

	{
		match: '(^keyword.operator.nowdoc.php$)'
		name: 'keyword.operator.nowdoc.php'
	}

	{
		match: '(^keyword.operator.or.regexp$)'
		name: 'keyword.operator.or.regexp'
	}

	{
		match: '(^keyword.operator.other.ruby$)'
		name: 'keyword.operator.other.ruby'
	}

	{
		match: '(^keyword.operator.perl6$)'
		name: 'keyword.operator.perl6'
	}

	{
		match: '(^keyword.operator.pipe.gotemplate$)'
		name: 'keyword.operator.pipe.gotemplate'
	}

	{
		match: '(^keyword.operator.pipe.shell$)'
		name: 'keyword.operator.pipe.shell'
	}

	{
		match: '(^keyword.operator.redirect.shell$)'
		name: 'keyword.operator.redirect.shell'
	}

	{
		match: '(^keyword.operator.regexp.php$)'
		name: 'keyword.operator.regexp.php'
	}

	{
		match: '(^keyword.operator.scss$)'
		name: 'keyword.operator.scss'
	}

	{
		match: '(^keyword.operator.shape.css$)'
		name: 'keyword.operator.shape.css'
	}

	{
		match: '(^keyword.operator.spread.js$)'
		name: 'keyword.operator.spread.js'
	}

	{
		match: '(^keyword.operator.star.sql$)'
		name: 'keyword.operator.star.sql'
	}

	{
		match: '(^keyword.operator.ternary.c$)'
		name: 'keyword.operator.ternary.c'
	}

	{
		match: '(^keyword.operator.ternary.js$)'
		name: 'keyword.operator.ternary.js'
	}

	{
		match: '(^keyword.operator.type.php$)'
		name: 'keyword.operator.type.php'
	}

	{
		match: '(^keyword.other.alias.sql$)'
		name: 'keyword.other.alias.sql'
	}

	{
		match: '(^keyword.other.authorization.sql$)'
		name: 'keyword.other.authorization.sql'
	}

	{
		match: '(^keyword.other.back-reference.named.regexp$)'
		name: 'keyword.other.back-reference.named.regexp'
	}

	{
		match: '(^keyword.other.back-reference.regexp$)'
		name: 'keyword.other.back-reference.regexp'
	}

	{
		match: '(^keyword.other.cascade.sql$)'
		name: 'keyword.other.cascade.sql'
	}

	{
		match: '(^keyword.other.coffee$)'
		name: 'keyword.other.coffee'
	}

	{
		match: '(^keyword.other.create.sql$)'
		name: 'keyword.other.create.sql'
	}

	{
		match: '(^keyword.other.cs$)'
		name: 'keyword.other.cs'
	}

	{
		match: '(^keyword.other.data-integrity.sql$)'
		name: 'keyword.other.data-integrity.sql'
	}

	{
		match: '(^keyword.other.DDL.create.II.sql$)'
		name: 'keyword.other.DDL.create.II.sql'
	}

	{
		match: '(^keyword.other.debugger.js$)'
		name: 'keyword.other.debugger.js'
	}

	{
		match: '(^keyword.other.default.scss$)'
		name: 'keyword.other.default.scss'
	}

	{
		match: '(^keyword.other.DML.II.sql$)'
		name: 'keyword.other.DML.II.sql'
	}

	{
		match: '(^keyword.other.DML.sql$)'
		name: 'keyword.other.DML.sql'
	}

	{
		match: '(^keyword.other.doctype.xml$)'
		name: 'keyword.other.doctype.xml'
	}

	{
		match: '(^keyword.other.documentation.javadoc.java$)'
		name: 'keyword.other.documentation.javadoc.java'
	}

	{
		match: '(^keyword.other.drop.sql$)'
		name: 'keyword.other.drop.sql'
	}

	{
		match: '(^keyword.other.entity.xml$)'
		name: 'keyword.other.entity.xml'
	}

	{
		match: '(^keyword.other.entitytype.xml$)'
		name: 'keyword.other.entitytype.xml'
	}

	{
		match: '(^keyword.other.important.css$)'
		name: 'keyword.other.important.css'
	}

	{
		match: '(^keyword.other.important.sass$)'
		name: 'keyword.other.important.sass'
	}

	{
		match: '(^keyword.other.important.scss$)'
		name: 'keyword.other.important.scss'
	}

	{
		match: '(^keyword.other.include.perl6$)'
		name: 'keyword.other.include.perl6'
	}

	{
		match: '(^keyword.other.LUW.sql$)'
		name: 'keyword.other.LUW.sql'
	}

	{
		match: '(^keyword.other.modifier.predicate.cocoa$)'
		name: 'keyword.other.modifier.predicate.cocoa'
	}

	{
		match: '(^keyword.other.namespace.cs$)'
		name: 'keyword.other.namespace.cs'
	}

	{
		match: '(^keyword.other.namespace.php$)'
		name: 'keyword.other.namespace.php'
	}

	{
		match: '(^keyword.other.new.php$)'
		name: 'keyword.other.new.php'
	}

	{
		match: '(^keyword.other.not.sql$)'
		name: 'keyword.other.not.sql'
	}

	{
		match: '(^keyword.other.object-comments.sql$)'
		name: 'keyword.other.object-comments.sql'
	}

	{
		match: '(^keyword.other.offset.toml$)'
		name: 'keyword.other.offset.toml'
	}

	{
		match: '(^keyword.other.omap.yaml$)'
		name: 'keyword.other.omap.yaml'
	}

	{
		match: '(^keyword.other.option-toggle.regexp$)'
		name: 'keyword.other.option-toggle.regexp'
	}

	{
		match: '(^keyword.other.optional.scss$)'
		name: 'keyword.other.optional.scss'
	}

	{
		match: '(^keyword.other.order.sql$)'
		name: 'keyword.other.order.sql'
	}

	{
		match: '(^keyword.other.package.java$)'
		name: 'keyword.other.package.java'
	}

	{
		match: '(^keyword.other.page-props.xml$)'
		name: 'keyword.other.page-props.xml'
	}

	{
		match: '(^keyword.other.phpdoc.php$)'
		name: 'keyword.other.phpdoc.php'
	}

	{
		match: '(^keyword.other.pragma.perl6$)'
		name: 'keyword.other.pragma.perl6'
	}

	{
		match: '(^keyword.other.predicate.cocoa$)'
		name: 'keyword.other.predicate.cocoa'
	}

	{
		match: '(^keyword.other.property.directive.objc$)'
		name: 'keyword.other.property.directive.objc'
	}

	{
		match: '(^keyword.other.property.objc$)'
		name: 'keyword.other.property.objc'
	}

	{
		match: '(^keyword.other.python$)'
		name: 'keyword.other.python'
	}

	{
		match: '(^keyword.other.special-method.ruby$)'
		name: 'keyword.other.special-method.ruby'
	}

	{
		match: '(^keyword.other.special-method.ruby.gemfile$)'
		name: 'keyword.other.special-method.ruby.gemfile'
	}

	{
		match: '(^keyword.other.sql$)'
		name: 'keyword.other.sql'
	}

	{
		match: '(^keyword.other.static.cs$)'
		name: 'keyword.other.static.cs'
	}

	{
		match: '(^keyword.other.table.sql$)'
		name: 'keyword.other.table.sql'
	}

	{
		match: '(^keyword.other.tag.local.yaml$)'
		name: 'keyword.other.tag.local.yaml'
	}

	{
		match: '(^keyword.other.time.toml$)'
		name: 'keyword.other.time.toml'
	}

	{
		match: '(^keyword.other.unit.css$)'
		name: 'keyword.other.unit.css'
	}

	{
		match: '(^keyword.other.unit.percentage.css$)'
		name: 'keyword.other.unit.percentage.css'
	}

	{
		match: '(^keyword.other.unit.scss$)'
		name: 'keyword.other.unit.scss'
	}

	{
		match: '(^keyword.other.using.cs$)'
		name: 'keyword.other.using.cs'
	}

	{
		match: '(^keyword.package.go$)'
		name: 'keyword.package.go'
	}

	{
		match: '(^keyword.reserved.coffee$)'
		name: 'keyword.reserved.coffee'
	}

	{
		match: '(^keyword.struct.go$)'
		name: 'keyword.struct.go'
	}

	{
		match: '(^keyword.type.go$)'
		name: 'keyword.type.go'
	}

	{
		match: '(^keyword.var.go$)'
		name: 'keyword.var.go'
	}

	{
		match: '(^linebreak.gfm$)'
		name: 'linebreak.gfm'
	}

	{
		match: '(^markup.bold.gfm$)'
		name: 'markup.bold.gfm'
	}

	{
		match: '(^markup.bold.italic.gfm$)'
		name: 'markup.bold.italic.gfm'
	}

	{
		match: '(^markup.bold.markdown$)'
		name: 'markup.bold.markdown'
	}

	{
		match: '(^markup.bold.pod.perl$)'
		name: 'markup.bold.pod.perl'
	}

	{
		match: '(^markup.changed.git-commit$)'
		name: 'markup.changed.git-commit'
	}

	{
		match: '(^markup.code.asciidoc.gfm$)'
		name: 'markup.code.asciidoc.gfm'
	}

	{
		match: '(^markup.code.c.gfm$)'
		name: 'markup.code.c.gfm'
	}

	{
		match: '(^markup.code.clojure.gfm$)'
		name: 'markup.code.clojure.gfm'
	}

	{
		match: '(^markup.code.coffee.gfm$)'
		name: 'markup.code.coffee.gfm'
	}

	{
		match: '(^markup.code.cpp.gfm$)'
		name: 'markup.code.cpp.gfm'
	}

	{
		match: '(^markup.code.cs.gfm$)'
		name: 'markup.code.cs.gfm'
	}

	{
		match: '(^markup.code.css.gfm$)'
		name: 'markup.code.css.gfm'
	}

	{
		match: '(^markup.code.diff.gfm$)'
		name: 'markup.code.diff.gfm'
	}

	{
		match: '(^markup.code.dockerfile.gfm$)'
		name: 'markup.code.dockerfile.gfm'
	}

	{
		match: '(^markup.code.elixir.gfm$)'
		name: 'markup.code.elixir.gfm'
	}

	{
		match: '(^markup.code.elm.gfm$)'
		name: 'markup.code.elm.gfm'
	}

	{
		match: '(^markup.code.erlang.gfm$)'
		name: 'markup.code.erlang.gfm'
	}

	{
		match: '(^markup.code.gfm$)'
		name: 'markup.code.gfm'
	}

	{
		match: '(^markup.code.go.gfm$)'
		name: 'markup.code.go.gfm'
	}

	{
		match: '(^markup.code.graphql.gfm$)'
		name: 'markup.code.graphql.gfm'
	}

	{
		match: '(^markup.code.haskell.gfm$)'
		name: 'markup.code.haskell.gfm'
	}

	{
		match: '(^markup.code.html.gfm$)'
		name: 'markup.code.html.gfm'
	}

	{
		match: '(^markup.code.java.gfm$)'
		name: 'markup.code.java.gfm'
	}

	{
		match: '(^markup.code.js.gfm$)'
		name: 'markup.code.js.gfm'
	}

	{
		match: '(^markup.code.json.gfm$)'
		name: 'markup.code.json.gfm'
	}

	{
		match: '(^markup.code.julia.gfm$)'
		name: 'markup.code.julia.gfm'
	}

	{
		match: '(^markup.code.less.gfm$)'
		name: 'markup.code.less.gfm'
	}

	{
		match: '(^markup.code.makefile.gfm$)'
		name: 'markup.code.makefile.gfm'
	}

	{
		match: '(^markup.code.objc.gfm$)'
		name: 'markup.code.objc.gfm'
	}

	{
		match: '(^markup.code.perl.gfm$)'
		name: 'markup.code.perl.gfm'
	}

	{
		match: '(^markup.code.perl6.gfm$)'
		name: 'markup.code.perl6.gfm'
	}

	{
		match: '(^markup.code.php.gfm$)'
		name: 'markup.code.php.gfm'
	}

	{
		match: '(^markup.code.python.console.gfm$)'
		name: 'markup.code.python.console.gfm'
	}

	{
		match: '(^markup.code.python.gfm$)'
		name: 'markup.code.python.gfm'
	}

	{
		match: '(^markup.code.r.gfm$)'
		name: 'markup.code.r.gfm'
	}

	{
		match: '(^markup.code.ruby.gfm$)'
		name: 'markup.code.ruby.gfm'
	}

	{
		match: '(^markup.code.rust.gfm$)'
		name: 'markup.code.rust.gfm'
	}

	{
		match: '(^markup.code.scala.gfm$)'
		name: 'markup.code.scala.gfm'
	}

	{
		match: '(^markup.code.shell.gfm$)'
		name: 'markup.code.shell.gfm'
	}

	{
		match: '(^markup.code.sql.gfm$)'
		name: 'markup.code.sql.gfm'
	}

	{
		match: '(^markup.code.swift.gfm$)'
		name: 'markup.code.swift.gfm'
	}

	{
		match: '(^markup.code.toml.gfm$)'
		name: 'markup.code.toml.gfm'
	}

	{
		match: '(^markup.code.ts.gfm$)'
		name: 'markup.code.ts.gfm'
	}

	{
		match: '(^markup.code.xml.gfm$)'
		name: 'markup.code.xml.gfm'
	}

	{
		match: '(^markup.code.yaml.gfm$)'
		name: 'markup.code.yaml.gfm'
	}

	{
		match: '(^markup.deleted.git-commit$)'
		name: 'markup.deleted.git-commit'
	}

	{
		match: '(^markup.heading.2.markdown$)'
		name: 'markup.heading.2.markdown'
	}

	{
		match: '(^markup.heading.markdown$)'
		name: 'markup.heading.markdown'
	}

	{
		match: '(^markup.heading.marker.gfm$)'
		name: 'markup.heading.marker.gfm'
	}

	{
		match: '(^markup.heading.space.gfm$)'
		name: 'markup.heading.space.gfm'
	}

	{
		match: '(^markup.inserted.git-commit$)'
		name: 'markup.inserted.git-commit'
	}

	{
		match: '(^markup.italic.gfm$)'
		name: 'markup.italic.gfm'
	}

	{
		match: '(^markup.italic.markdown$)'
		name: 'markup.italic.markdown'
	}

	{
		match: '(^markup.italic.pod.perl$)'
		name: 'markup.italic.pod.perl'
	}

	{
		match: '(^markup.list.numbered.markdown$)'
		name: 'markup.list.numbered.markdown'
	}

	{
		match: '(^markup.list.unnumbered.markdown$)'
		name: 'markup.list.unnumbered.markdown'
	}

	{
		match: '(^markup.quote.markdown$)'
		name: 'markup.quote.markdown'
	}

	{
		match: '(^markup.raw.block.markdown$)'
		name: 'markup.raw.block.markdown'
	}

	{
		match: '(^markup.raw.gfm$)'
		name: 'markup.raw.gfm'
	}

	{
		match: '(^markup.raw.inline.markdown$)'
		name: 'markup.raw.inline.markdown'
	}

	{
		match: '(^markup.raw.pod.perl$)'
		name: 'markup.raw.pod.perl'
	}

	{
		match: '(^markup.strike.gfm$)'
		name: 'markup.strike.gfm'
	}

	{
		match: '(^markup.underline.link.gfm$)'
		name: 'markup.underline.link.gfm'
	}

	{
		match: '(^markup.underline.link.hyperlink.pod.perl$)'
		name: 'markup.underline.link.hyperlink.pod.perl'
	}

	{
		match: '(^markup.underline.link.image.markdown$)'
		name: 'markup.underline.link.image.markdown'
	}

	{
		match: '(^markup.underline.link.markdown$)'
		name: 'markup.underline.link.markdown'
	}

	{
		match: '(^markup.underline.link.php$)'
		name: 'markup.underline.link.php'
	}

	{
		match: '(^markup.underline.link.radar$)'
		name: 'markup.underline.link.radar'
	}

	{
		match: '(^meta.after-expression.clojure$)'
		name: 'meta.after-expression.clojure'
	}

	{
		match: '(^meta.angle-brackets.cpp$)'
		name: 'meta.angle-brackets.cpp'
	}

	{
		match: '(^meta.annotation.cs$)'
		name: 'meta.annotation.cs'
	}

	{
		match: '(^meta.argument-type.objc$)'
		name: 'meta.argument-type.objc'
	}

	{
		match: '(^meta.arguments.js$)'
		name: 'meta.arguments.js'
	}

	{
		match: '(^meta.array.empty.php$)'
		name: 'meta.array.empty.php'
	}

	{
		match: '(^meta.array.php$)'
		name: 'meta.array.php'
	}

	{
		match: '(^meta.assertion.look-ahead.regexp$)'
		name: 'meta.assertion.look-ahead.regexp'
	}

	{
		match: '(^meta.assertion.look-behind.regexp$)'
		name: 'meta.assertion.look-behind.regexp'
	}

	{
		match: '(^meta.assertion.negative-look-ahead.regexp$)'
		name: 'meta.assertion.negative-look-ahead.regexp'
	}

	{
		match: '(^meta.assertion.negative-look-behind.regexp$)'
		name: 'meta.assertion.negative-look-behind.regexp'
	}

	{
		match: '(^meta.at-rule.at-root.sass$)'
		name: 'meta.at-rule.at-root.sass'
	}

	{
		match: '(^meta.at-rule.at-root.scss$)'
		name: 'meta.at-rule.at-root.scss'
	}

	{
		match: '(^meta.at-rule.charset.css$)'
		name: 'meta.at-rule.charset.css'
	}

	{
		match: '(^meta.at-rule.charset.scss$)'
		name: 'meta.at-rule.charset.scss'
	}

	{
		match: '(^meta.at-rule.content.sass$)'
		name: 'meta.at-rule.content.sass'
	}

	{
		match: '(^meta.at-rule.counter-style.body.css$)'
		name: 'meta.at-rule.counter-style.body.css'
	}

	{
		match: '(^meta.at-rule.counter-style.header.css$)'
		name: 'meta.at-rule.counter-style.header.css'
	}

	{
		match: '(^meta.at-rule.document.body.css$)'
		name: 'meta.at-rule.document.body.css'
	}

	{
		match: '(^meta.at-rule.document.header.css$)'
		name: 'meta.at-rule.document.header.css'
	}

	{
		match: '(^meta.at-rule.each.sass$)'
		name: 'meta.at-rule.each.sass'
	}

	{
		match: '(^meta.at-rule.each.scss$)'
		name: 'meta.at-rule.each.scss'
	}

	{
		match: '(^meta.at-rule.else.sass$)'
		name: 'meta.at-rule.else.sass'
	}

	{
		match: '(^meta.at-rule.else.scss$)'
		name: 'meta.at-rule.else.scss'
	}

	{
		match: '(^meta.at-rule.font-face.css$)'
		name: 'meta.at-rule.font-face.css'
	}

	{
		match: '(^meta.at-rule.font-features.css$)'
		name: 'meta.at-rule.font-features.css'
	}

	{
		match: '(^meta.at-rule.fontface.scss$)'
		name: 'meta.at-rule.fontface.scss'
	}

	{
		match: '(^meta.at-rule.for.sass$)'
		name: 'meta.at-rule.for.sass'
	}

	{
		match: '(^meta.at-rule.for.scss$)'
		name: 'meta.at-rule.for.scss'
	}

	{
		match: '(^meta.at-rule.function.sass$)'
		name: 'meta.at-rule.function.sass'
	}

	{
		match: '(^meta.at-rule.function.scss$)'
		name: 'meta.at-rule.function.scss'
	}

	{
		match: '(^meta.at-rule.if.sass$)'
		name: 'meta.at-rule.if.sass'
	}

	{
		match: '(^meta.at-rule.if.scss$)'
		name: 'meta.at-rule.if.scss'
	}

	{
		match: '(^meta.at-rule.import.css$)'
		name: 'meta.at-rule.import.css'
	}

	{
		match: '(^meta.at-rule.import.sass$)'
		name: 'meta.at-rule.import.sass'
	}

	{
		match: '(^meta.at-rule.import.scss$)'
		name: 'meta.at-rule.import.scss'
	}

	{
		match: '(^meta.at-rule.include.scss$)'
		name: 'meta.at-rule.include.scss'
	}

	{
		match: '(^meta.at-rule.keyframes.body.css$)'
		name: 'meta.at-rule.keyframes.body.css'
	}

	{
		match: '(^meta.at-rule.keyframes.header.css$)'
		name: 'meta.at-rule.keyframes.header.css'
	}

	{
		match: '(^meta.at-rule.keyframes.scss$)'
		name: 'meta.at-rule.keyframes.scss'
	}

	{
		match: '(^meta.at-rule.media.body.css$)'
		name: 'meta.at-rule.media.body.css'
	}

	{
		match: '(^meta.at-rule.media.css$)'
		name: 'meta.at-rule.media.css'
	}

	{
		match: '(^meta.at-rule.media.header.css$)'
		name: 'meta.at-rule.media.header.css'
	}

	{
		match: '(^meta.at-rule.media.sass$)'
		name: 'meta.at-rule.media.sass'
	}

	{
		match: '(^meta.at-rule.media.scss$)'
		name: 'meta.at-rule.media.scss'
	}

	{
		match: '(^meta.at-rule.mixin.scss$)'
		name: 'meta.at-rule.mixin.scss'
	}

	{
		match: '(^meta.at-rule.namespace.css$)'
		name: 'meta.at-rule.namespace.css'
	}

	{
		match: '(^meta.at-rule.namespace.scss$)'
		name: 'meta.at-rule.namespace.scss'
	}

	{
		match: '(^meta.at-rule.option.scss$)'
		name: 'meta.at-rule.option.scss'
	}

	{
		match: '(^meta.at-rule.page.css$)'
		name: 'meta.at-rule.page.css'
	}

	{
		match: '(^meta.at-rule.page.scss$)'
		name: 'meta.at-rule.page.scss'
	}

	{
		match: '(^meta.at-rule.return.sass$)'
		name: 'meta.at-rule.return.sass'
	}

	{
		match: '(^meta.at-rule.return.scss$)'
		name: 'meta.at-rule.return.scss'
	}

	{
		match: '(^meta.at-rule.supports.body.css$)'
		name: 'meta.at-rule.supports.body.css'
	}

	{
		match: '(^meta.at-rule.supports.header.css$)'
		name: 'meta.at-rule.supports.header.css'
	}

	{
		match: '(^meta.at-rule.supports.scss$)'
		name: 'meta.at-rule.supports.scss'
	}

	{
		match: '(^meta.at-rule.viewport.css$)'
		name: 'meta.at-rule.viewport.css'
	}

	{
		match: '(^meta.at-rule.warn.sass$)'
		name: 'meta.at-rule.warn.sass'
	}

	{
		match: '(^meta.at-rule.warn.scss$)'
		name: 'meta.at-rule.warn.scss'
	}

	{
		match: '(^meta.at-rule.while.sass$)'
		name: 'meta.at-rule.while.sass'
	}

	{
		match: '(^meta.at-rule.while.scss$)'
		name: 'meta.at-rule.while.scss'
	}

	{
		match: '(^meta.attribute-selector.css$)'
		name: 'meta.attribute-selector.css'
	}

	{
		match: '(^meta.attribute-selector.css.sass$)'
		name: 'meta.attribute-selector.css.sass'
	}

	{
		match: '(^meta.attribute-with-value.id.html$)'
		name: 'meta.attribute-with-value.id.html'
	}

	{
		match: '(^meta.binary-data.plist$)'
		name: 'meta.binary-data.plist'
	}

	{
		match: '(^meta.block-level.markdown$)'
		name: 'meta.block-level.markdown'
	}

	{
		match: '(^meta.block.c$)'
		name: 'meta.block.c'
	}

	{
		match: '(^meta.block.cpp$)'
		name: 'meta.block.cpp'
	}

	{
		match: '(^meta.block.cs$)'
		name: 'meta.block.cs'
	}

	{
		match: '(^meta.brace.curly.coffee$)'
		name: 'meta.brace.curly.coffee'
	}

	{
		match: '(^meta.brace.curly.css$)'
		name: 'meta.brace.curly.css'
	}

	{
		match: '(^meta.brace.curly.js$)'
		name: 'meta.brace.curly.js'
	}

	{
		match: '(^meta.brace.round.coffee$)'
		name: 'meta.brace.round.coffee'
	}

	{
		match: '(^meta.brace.round.css$)'
		name: 'meta.brace.round.css'
	}

	{
		match: '(^meta.brace.round.js$)'
		name: 'meta.brace.round.js'
	}

	{
		match: '(^meta.brace.square.coffee$)'
		name: 'meta.brace.square.coffee'
	}

	{
		match: '(^meta.brace.square.js$)'
		name: 'meta.brace.square.js'
	}

	{
		match: '(^meta.bracketed.objc$)'
		name: 'meta.bracketed.objc'
	}

	{
		match: '(^meta.bullet-point.star.text$)'
		name: 'meta.bullet-point.star.text'
	}

	{
		match: '(^meta.catch.java$)'
		name: 'meta.catch.java'
	}

	{
		match: '(^meta.catch.php$)'
		name: 'meta.catch.php'
	}

	{
		match: '(^meta.class-struct-block.cpp$)'
		name: 'meta.class-struct-block.cpp'
	}

	{
		match: '(^meta.class.coffee$)'
		name: 'meta.class.coffee'
	}

	{
		match: '(^meta.class.enum.identifier.cs$)'
		name: 'meta.class.enum.identifier.cs'
	}

	{
		match: '(^meta.class.identifier.java$)'
		name: 'meta.class.identifier.java'
	}

	{
		match: '(^meta.class.instance.constructor$)'
		name: 'meta.class.instance.constructor'
	}

	{
		match: '(^meta.class.java$)'
		name: 'meta.class.java'
	}

	{
		match: '(^meta.class.js$)'
		name: 'meta.class.js'
	}

	{
		match: '(^meta.class.old-style.python$)'
		name: 'meta.class.old-style.python'
	}

	{
		match: '(^meta.class.perl6$)'
		name: 'meta.class.perl6'
	}

	{
		match: '(^meta.class.php$)'
		name: 'meta.class.php'
	}

	{
		match: '(^meta.class.python$)'
		name: 'meta.class.python'
	}

	{
		match: '(^meta.commit-command.git-rebase$)'
		name: 'meta.commit-command.git-rebase'
	}

	{
		match: '(^meta.commit-message.git-rebase$)'
		name: 'meta.commit-message.git-rebase'
	}

	{
		match: '(^meta.computed-key.js$)'
		name: 'meta.computed-key.js'
	}

	{
		match: '(^meta.content.scss$)'
		name: 'meta.content.scss'
	}

	{
		match: '(^meta.control.yield.js$)'
		name: 'meta.control.yield.js'
	}

	{
		match: '(^meta.declaration.annotation.java$)'
		name: 'meta.declaration.annotation.java'
	}

	{
		match: '(^meta.declaration.assertion.java$)'
		name: 'meta.declaration.assertion.java'
	}

	{
		match: '(^meta.declaration.ruby.gemfile$)'
		name: 'meta.declaration.ruby.gemfile'
	}

	{
		match: '(^meta.definition.class.implemented.interfaces.java$)'
		name: 'meta.definition.class.implemented.interfaces.java'
	}

	{
		match: '(^meta.definition.class.inherited.classes.java$)'
		name: 'meta.definition.class.inherited.classes.java'
	}

	{
		match: '(^meta.definition.global.clojure$)'
		name: 'meta.definition.global.clojure'
	}

	{
		match: '(^meta.definition.variable.java$)'
		name: 'meta.definition.variable.java'
	}

	{
		match: '(^meta.delimiter.decimal.period.js$)'
		name: 'meta.delimiter.decimal.period.js'
	}

	{
		match: '(^meta.delimiter.method.period.coffee$)'
		name: 'meta.delimiter.method.period.coffee'
	}

	{
		match: '(^meta.delimiter.method.period.js$)'
		name: 'meta.delimiter.method.period.js'
	}

	{
		match: '(^meta.delimiter.object.comma.coffee$)'
		name: 'meta.delimiter.object.comma.coffee'
	}

	{
		match: '(^meta.delimiter.object.comma.js$)'
		name: 'meta.delimiter.object.comma.js'
	}

	{
		match: '(^meta.delimiter.property.period.js$)'
		name: 'meta.delimiter.property.period.js'
	}

	{
		match: '(^meta.disable-markdown$)'
		name: 'meta.disable-markdown'
	}

	{
		match: '(^meta.divider.objc$)'
		name: 'meta.divider.objc'
	}

	{
		match: '(^meta.dummy.line-break$)'
		name: 'meta.dummy.line-break'
	}

	{
		match: '(^meta.embedded.block.c$)'
		name: 'meta.embedded.block.c'
	}

	{
		match: '(^meta.embedded.block.cpp$)'
		name: 'meta.embedded.block.cpp'
	}

	{
		match: '(^meta.embedded.block.css$)'
		name: 'meta.embedded.block.css'
	}

	{
		match: '(^meta.embedded.block.erb$)'
		name: 'meta.embedded.block.erb'
	}

	{
		match: '(^meta.embedded.block.graphql$)'
		name: 'meta.embedded.block.graphql'
	}

	{
		match: '(^meta.embedded.block.html$)'
		name: 'meta.embedded.block.html'
	}

	{
		match: '(^meta.embedded.block.js$)'
		name: 'meta.embedded.block.js'
	}

	{
		match: '(^meta.embedded.block.js.jquery$)'
		name: 'meta.embedded.block.js.jquery'
	}

	{
		match: '(^meta.embedded.block.jsp$)'
		name: 'meta.embedded.block.jsp'
	}

	{
		match: '(^meta.embedded.block.lua$)'
		name: 'meta.embedded.block.lua'
	}

	{
		match: '(^meta.embedded.block.php$)'
		name: 'meta.embedded.block.php'
	}

	{
		match: '(^meta.embedded.block.ruby$)'
		name: 'meta.embedded.block.ruby'
	}

	{
		match: '(^meta.embedded.block.scriptlet.jsp$)'
		name: 'meta.embedded.block.scriptlet.jsp'
	}

	{
		match: '(^meta.embedded.block.shell$)'
		name: 'meta.embedded.block.shell'
	}

	{
		match: '(^meta.embedded.block.sql$)'
		name: 'meta.embedded.block.sql'
	}

	{
		match: '(^meta.embedded.css$)'
		name: 'meta.embedded.css'
	}

	{
		match: '(^meta.embedded.diff.git-commit$)'
		name: 'meta.embedded.diff.git-commit'
	}

	{
		match: '(^meta.embedded.html$)'
		name: 'meta.embedded.html'
	}

	{
		match: '(^meta.embedded.js$)'
		name: 'meta.embedded.js'
	}

	{
		match: '(^meta.embedded.json$)'
		name: 'meta.embedded.json'
	}

	{
		match: '(^meta.embedded.line.declaration.jsp$)'
		name: 'meta.embedded.line.declaration.jsp'
	}

	{
		match: '(^meta.embedded.line.el_expression.jsp$)'
		name: 'meta.embedded.line.el_expression.jsp'
	}

	{
		match: '(^meta.embedded.line.erb$)'
		name: 'meta.embedded.line.erb'
	}

	{
		match: '(^meta.embedded.line.expression.jsp$)'
		name: 'meta.embedded.line.expression.jsp'
	}

	{
		match: '(^meta.embedded.line.php$)'
		name: 'meta.embedded.line.php'
	}

	{
		match: '(^meta.embedded.line.ruby$)'
		name: 'meta.embedded.line.ruby'
	}

	{
		match: '(^meta.embedded.line.shell$)'
		name: 'meta.embedded.line.shell'
	}

	{
		match: '(^meta.embedded.sql$)'
		name: 'meta.embedded.sql'
	}

	{
		match: '(^meta.embedded.xml$)'
		name: 'meta.embedded.xml'
	}

	{
		match: '(^meta.empty-dictionary.python$)'
		name: 'meta.empty-dictionary.python'
	}

	{
		match: '(^meta.empty-list.python$)'
		name: 'meta.empty-list.python'
	}

	{
		match: '(^meta.empty-string.double.python$)'
		name: 'meta.empty-string.double.python'
	}

	{
		match: '(^meta.empty-string.single.python$)'
		name: 'meta.empty-string.single.python'
	}

	{
		match: '(^meta.empty-tuple.python$)'
		name: 'meta.empty-tuple.python'
	}

	{
		match: '(^meta.encoding.cpp$)'
		name: 'meta.encoding.cpp'
	}

	{
		match: '(^meta.enum.java$)'
		name: 'meta.enum.java'
	}

	{
		match: '(^meta.environment-variable.ruby$)'
		name: 'meta.environment-variable.ruby'
	}

	{
		match: '(^meta.error.junit-test-report$)'
		name: 'meta.error.junit-test-report'
	}

	{
		match: '(^meta.even-tab$)'
		name: 'meta.even-tab'
	}

	{
		match: '(^meta.exec-command.git-rebase$)'
		name: 'meta.exec-command.git-rebase'
	}

	{
		match: '(^meta.export.js$)'
		name: 'meta.export.js'
	}

	{
		match: '(^meta.expression.clojure$)'
		name: 'meta.expression.clojure'
	}

	{
		match: '(^meta.extern-block.cpp$)'
		name: 'meta.extern-block.cpp'
	}

	{
		match: '(^meta.feature-query.css$)'
		name: 'meta.feature-query.css'
	}

	{
		match: '(^meta.field.declaration.cs$)'
		name: 'meta.field.declaration.cs'
	}

	{
		match: '(^meta.finally.java$)'
		name: 'meta.finally.java'
	}

	{
		match: '(^meta.format.perl$)'
		name: 'meta.format.perl'
	}

	{
		match: '(^meta.function-call.c$)'
		name: 'meta.function-call.c'
	}

	{
		match: '(^meta.function-call.invoke.php$)'
		name: 'meta.function-call.invoke.php'
	}

	{
		match: '(^meta.function-call.java$)'
		name: 'meta.function-call.java'
	}

	{
		match: '(^meta.function-call.js$)'
		name: 'meta.function-call.js'
	}

	{
		match: '(^meta.function-call.objc$)'
		name: 'meta.function-call.objc'
	}

	{
		match: '(^meta.function-call.object.php$)'
		name: 'meta.function-call.object.php'
	}

	{
		match: '(^meta.function-call.php$)'
		name: 'meta.function-call.php'
	}

	{
		match: '(^meta.function-call.predicate.objc$)'
		name: 'meta.function-call.predicate.objc'
	}

	{
		match: '(^meta.function-call.python$)'
		name: 'meta.function-call.python'
	}

	{
		match: '(^meta.function-call.static.php$)'
		name: 'meta.function-call.static.php'
	}

	{
		match: '(^meta.function-with-body.objc$)'
		name: 'meta.function-with-body.objc'
	}

	{
		match: '(^meta.function.argument.array.php$)'
		name: 'meta.function.argument.array.php'
	}

	{
		match: '(^meta.function.argument.default.php$)'
		name: 'meta.function.argument.default.php'
	}

	{
		match: '(^meta.function.argument.no-default.php$)'
		name: 'meta.function.argument.no-default.php'
	}

	{
		match: '(^meta.function.argument.typehinted.php$)'
		name: 'meta.function.argument.typehinted.php'
	}

	{
		match: '(^meta.function.arrow.js$)'
		name: 'meta.function.arrow.js'
	}

	{
		match: '(^meta.function.arrow.json.js$)'
		name: 'meta.function.arrow.json.js'
	}

	{
		match: '(^meta.function.c$)'
		name: 'meta.function.c'
	}

	{
		match: '(^meta.function.calc.css$)'
		name: 'meta.function.calc.css'
	}

	{
		match: '(^meta.function.closure.php$)'
		name: 'meta.function.closure.php'
	}

	{
		match: '(^meta.function.closure.use.php$)'
		name: 'meta.function.closure.use.php'
	}

	{
		match: '(^meta.function.coffee$)'
		name: 'meta.function.coffee'
	}

	{
		match: '(^meta.function.color.css$)'
		name: 'meta.function.color.css'
	}

	{
		match: '(^meta.function.constructor.cpp$)'
		name: 'meta.function.constructor.cpp'
	}

	{
		match: '(^meta.function.constructor.initializer-list.cpp$)'
		name: 'meta.function.constructor.initializer-list.cpp'
	}

	{
		match: '(^meta.function.decorator.python$)'
		name: 'meta.function.decorator.python'
	}

	{
		match: '(^meta.function.destructor.cpp$)'
		name: 'meta.function.destructor.cpp'
	}

	{
		match: '(^meta.function.destructor.prototype.cpp$)'
		name: 'meta.function.destructor.prototype.cpp'
	}

	{
		match: '(^meta.function.document-rule.css$)'
		name: 'meta.function.document-rule.css'
	}

	{
		match: '(^meta.function.extend.sass$)'
		name: 'meta.function.extend.sass'
	}

	{
		match: '(^meta.function.gradient.css$)'
		name: 'meta.function.gradient.css'
	}

	{
		match: '(^meta.function.gradient.invalid.deprecated.gradient.css$)'
		name: 'meta.function.gradient.invalid.deprecated.gradient.css'
	}

	{
		match: '(^meta.function.include.sass$)'
		name: 'meta.function.include.sass'
	}

	{
		match: '(^meta.function.inline.python$)'
		name: 'meta.function.inline.python'
	}

	{
		match: '(^meta.function.js$)'
		name: 'meta.function.js'
	}

	{
		match: '(^meta.function.json.js$)'
		name: 'meta.function.json.js'
	}

	{
		match: '(^meta.function.method.definition.js$)'
		name: 'meta.function.method.definition.js'
	}

	{
		match: '(^meta.function.method.with-arguments.ruby$)'
		name: 'meta.function.method.with-arguments.ruby'
	}

	{
		match: '(^meta.function.method.without-arguments.ruby$)'
		name: 'meta.function.method.without-arguments.ruby'
	}

	{
		match: '(^meta.function.misc.css$)'
		name: 'meta.function.misc.css'
	}

	{
		match: '(^meta.function.objc$)'
		name: 'meta.function.objc'
	}

	{
		match: '(^meta.function.perl$)'
		name: 'meta.function.perl'
	}

	{
		match: '(^meta.function.perl6$)'
		name: 'meta.function.perl6'
	}

	{
		match: '(^meta.function.php$)'
		name: 'meta.function.php'
	}

	{
		match: '(^meta.function.python$)'
		name: 'meta.function.python'
	}

	{
		match: '(^meta.function.shape.css$)'
		name: 'meta.function.shape.css'
	}

	{
		match: '(^meta.function.shell$)'
		name: 'meta.function.shell'
	}

	{
		match: '(^meta.function.timing-function.css$)'
		name: 'meta.function.timing-function.css'
	}

	{
		match: '(^meta.function.url.css$)'
		name: 'meta.function.url.css'
	}

	{
		match: '(^meta.function.variable.css$)'
		name: 'meta.function.variable.css'
	}

	{
		match: '(^meta.generic.constraints.cs$)'
		name: 'meta.generic.constraints.cs'
	}

	{
		match: '(^meta.generic.method.identifier$)'
		name: 'meta.generic.method.identifier'
	}

	{
		match: '(^meta.generic.type.specifier.cs$)'
		name: 'meta.generic.type.specifier.cs'
	}

	{
		match: '(^meta.group.assertion.conditional.regexp$)'
		name: 'meta.group.assertion.conditional.regexp'
	}

	{
		match: '(^meta.group.assertion.regexp$)'
		name: 'meta.group.assertion.regexp'
	}

	{
		match: '(^meta.group.regexp$)'
		name: 'meta.group.regexp'
	}

	{
		match: '(^meta.herestring.shell$)'
		name: 'meta.herestring.shell'
	}

	{
		match: '(^meta.id-with-protocol.objc$)'
		name: 'meta.id-with-protocol.objc'
	}

	{
		match: '(^meta.image.inline.markdown$)'
		name: 'meta.image.inline.markdown'
	}

	{
		match: '(^meta.image.reference.markdown$)'
		name: 'meta.image.reference.markdown'
	}

	{
		match: '(^meta.implementation.objc$)'
		name: 'meta.implementation.objc'
	}

	{
		match: '(^meta.import.java$)'
		name: 'meta.import.java'
	}

	{
		match: '(^meta.import.js$)'
		name: 'meta.import.js'
	}

	{
		match: '(^meta.include.php$)'
		name: 'meta.include.php'
	}

	{
		match: '(^meta.inherited-class.objc$)'
		name: 'meta.inherited-class.objc'
	}

	{
		match: '(^meta.initialization.c$)'
		name: 'meta.initialization.c'
	}

	{
		match: '(^meta.inner-class.java$)'
		name: 'meta.inner-class.java'
	}

	{
		match: '(^meta.interface-or-protocol.objc$)'
		name: 'meta.interface-or-protocol.objc'
	}

	{
		match: '(^meta.interface.php$)'
		name: 'meta.interface.php'
	}

	{
		match: '(^meta.internalsubset.xml$)'
		name: 'meta.internalsubset.xml'
	}

	{
		match: '(^meta.interpolated.expression.cs$)'
		name: 'meta.interpolated.expression.cs'
	}

	{
		match: '(^meta.item-access.python$)'
		name: 'meta.item-access.python'
	}

	{
		match: '(^meta.key-pair.java-properties$)'
		name: 'meta.key-pair.java-properties'
	}

	{
		match: '(^meta.link.email.lt-gt.markdown$)'
		name: 'meta.link.email.lt-gt.markdown'
	}

	{
		match: '(^meta.link.inet.markdown$)'
		name: 'meta.link.inet.markdown'
	}

	{
		match: '(^meta.link.inline.markdown$)'
		name: 'meta.link.inline.markdown'
	}

	{
		match: '(^meta.link.reference.def.markdown$)'
		name: 'meta.link.reference.def.markdown'
	}

	{
		match: '(^meta.link.reference.literal.markdown$)'
		name: 'meta.link.reference.literal.markdown'
	}

	{
		match: '(^meta.link.reference.markdown$)'
		name: 'meta.link.reference.markdown'
	}

	{
		match: '(^meta.map.clojure$)'
		name: 'meta.map.clojure'
	}

	{
		match: '(^meta.metadata.map.clojure$)'
		name: 'meta.metadata.map.clojure'
	}

	{
		match: '(^meta.metadata.simple.clojure$)'
		name: 'meta.metadata.simple.clojure'
	}

	{
		match: '(^meta.method-call.cs$)'
		name: 'meta.method-call.cs'
	}

	{
		match: '(^meta.method-call.java$)'
		name: 'meta.method-call.java'
	}

	{
		match: '(^meta.method-call.js$)'
		name: 'meta.method-call.js'
	}

	{
		match: '(^meta.method.base-call.cs$)'
		name: 'meta.method.base-call.cs'
	}

	{
		match: '(^meta.method.body.cs$)'
		name: 'meta.method.body.cs'
	}

	{
		match: '(^meta.method.cs$)'
		name: 'meta.method.cs'
	}

	{
		match: '(^meta.method.identifier.cs$)'
		name: 'meta.method.identifier.cs'
	}

	{
		match: '(^meta.method.identifier.java$)'
		name: 'meta.method.identifier.java'
	}

	{
		match: '(^meta.method.java$)'
		name: 'meta.method.java'
	}

	{
		match: '(^meta.method.return-type.cs$)'
		name: 'meta.method.return-type.cs'
	}

	{
		match: '(^meta.method.return-type.java$)'
		name: 'meta.method.return-type.java'
	}

	{
		match: '(^meta.module.ruby$)'
		name: 'meta.module.ruby'
	}

	{
		match: '(^meta.namespace-block.cpp$)'
		name: 'meta.namespace-block.cpp'
	}

	{
		match: '(^meta.new-object.cs$)'
		name: 'meta.new-object.cs'
	}

	{
		match: '(^meta.odd-tab$)'
		name: 'meta.odd-tab'
	}

	{
		match: '(^meta.other.valid-ampersand.markdown$)'
		name: 'meta.other.valid-ampersand.markdown'
	}

	{
		match: '(^meta.other.valid-bracket.markdown$)'
		name: 'meta.other.valid-bracket.markdown'
	}

	{
		match: '(^meta.output.junit-test-report$)'
		name: 'meta.output.junit-test-report'
	}

	{
		match: '(^meta.output.shell-session$)'
		name: 'meta.output.shell-session'
	}

	{
		match: '(^meta.package.java$)'
		name: 'meta.package.java'
	}

	{
		match: '(^meta.paragraph.list.markdown$)'
		name: 'meta.paragraph.list.markdown'
	}

	{
		match: '(^meta.paragraph.markdown$)'
		name: 'meta.paragraph.markdown'
	}

	{
		match: '(^meta.parameters.cs$)'
		name: 'meta.parameters.cs'
	}

	{
		match: '(^meta.parameters.js$)'
		name: 'meta.parameters.js'
	}

	{
		match: '(^meta.preprocessor.c$)'
		name: 'meta.preprocessor.c'
	}

	{
		match: '(^meta.preprocessor.cs$)'
		name: 'meta.preprocessor.cs'
	}

	{
		match: '(^meta.preprocessor.diagnostic.c$)'
		name: 'meta.preprocessor.diagnostic.c'
	}

	{
		match: '(^meta.preprocessor.include.c$)'
		name: 'meta.preprocessor.include.c'
	}

	{
		match: '(^meta.preprocessor.macro.c$)'
		name: 'meta.preprocessor.macro.c'
	}

	{
		match: '(^meta.preprocessor.pragma.c$)'
		name: 'meta.preprocessor.pragma.c'
	}

	{
		match: '(^meta.property-list.css$)'
		name: 'meta.property-list.css'
	}

	{
		match: '(^meta.property-list.font-feature.css$)'
		name: 'meta.property-list.font-feature.css'
	}

	{
		match: '(^meta.property-list.media-query.scss$)'
		name: 'meta.property-list.media-query.scss'
	}

	{
		match: '(^meta.property-list.scss$)'
		name: 'meta.property-list.scss'
	}

	{
		match: '(^meta.property-name.css$)'
		name: 'meta.property-name.css'
	}

	{
		match: '(^meta.property-name.media-query.scss$)'
		name: 'meta.property-name.media-query.scss'
	}

	{
		match: '(^meta.property-name.sass$)'
		name: 'meta.property-name.sass'
	}

	{
		match: '(^meta.property-name.scss$)'
		name: 'meta.property-name.scss'
	}

	{
		match: '(^meta.property-value.sass$)'
		name: 'meta.property-value.sass'
	}

	{
		match: '(^meta.property-with-attributes.objc$)'
		name: 'meta.property-with-attributes.objc'
	}

	{
		match: '(^meta.property.cs$)'
		name: 'meta.property.cs'
	}

	{
		match: '(^meta.property.objc$)'
		name: 'meta.property.objc'
	}

	{
		match: '(^meta.protocol-list.objc$)'
		name: 'meta.protocol-list.objc'
	}

	{
		match: '(^meta.quoted-expression.clojure$)'
		name: 'meta.quoted-expression.clojure'
	}

	{
		match: '(^meta.rails.controller$)'
		name: 'meta.rails.controller'
	}

	{
		match: '(^meta.rails.functional_test$)'
		name: 'meta.rails.functional_test'
	}

	{
		match: '(^meta.rails.helper$)'
		name: 'meta.rails.helper'
	}

	{
		match: '(^meta.rails.mailer$)'
		name: 'meta.rails.mailer'
	}

	{
		match: '(^meta.rails.migration$)'
		name: 'meta.rails.migration'
	}

	{
		match: '(^meta.rails.model$)'
		name: 'meta.rails.model'
	}

	{
		match: '(^meta.rails.routes$)'
		name: 'meta.rails.routes'
	}

	{
		match: '(^meta.rails.schema$)'
		name: 'meta.rails.schema'
	}

	{
		match: '(^meta.rails.unit_test$)'
		name: 'meta.rails.unit_test'
	}

	{
		match: '(^meta.ratio.css$)'
		name: 'meta.ratio.css'
	}

	{
		match: '(^meta.require.ruby$)'
		name: 'meta.require.ruby'
	}

	{
		match: '(^meta.return-type.objc$)'
		name: 'meta.return-type.objc'
	}

	{
		match: '(^meta.scope.array-item.plist$)'
		name: 'meta.scope.array-item.plist'
	}

	{
		match: '(^meta.scope.array.plist$)'
		name: 'meta.scope.array.plist'
	}

	{
		match: '(^meta.scope.between-tag-pair.html$)'
		name: 'meta.scope.between-tag-pair.html'
	}

	{
		match: '(^meta.scope.between-tag-pair.xml.plist$)'
		name: 'meta.scope.between-tag-pair.xml.plist'
	}

	{
		match: '(^meta.scope.case-block.shell$)'
		name: 'meta.scope.case-block.shell'
	}

	{
		match: '(^meta.scope.case-body.shell$)'
		name: 'meta.scope.case-body.shell'
	}

	{
		match: '(^meta.scope.case-clause-body.shell$)'
		name: 'meta.scope.case-clause-body.shell'
	}

	{
		match: '(^meta.scope.case-clause.shell$)'
		name: 'meta.scope.case-clause.shell'
	}

	{
		match: '(^meta.scope.case-pattern.shell$)'
		name: 'meta.scope.case-pattern.shell'
	}

	{
		match: '(^meta.scope.condition.makefile$)'
		name: 'meta.scope.condition.makefile'
	}

	{
		match: '(^meta.scope.conditional.makefile$)'
		name: 'meta.scope.conditional.makefile'
	}

	{
		match: '(^meta.scope.dictionary.plist$)'
		name: 'meta.scope.dictionary.plist'
	}

	{
		match: '(^meta.scope.for-in-loop.shell$)'
		name: 'meta.scope.for-in-loop.shell'
	}

	{
		match: '(^meta.scope.for-loop.shell$)'
		name: 'meta.scope.for-loop.shell'
	}

	{
		match: '(^meta.scope.function-call.makefile$)'
		name: 'meta.scope.function-call.makefile'
	}

	{
		match: '(^meta.scope.group.shell$)'
		name: 'meta.scope.group.shell'
	}

	{
		match: '(^meta.scope.if-block.shell$)'
		name: 'meta.scope.if-block.shell'
	}

	{
		match: '(^meta.scope.logical-expression.shell$)'
		name: 'meta.scope.logical-expression.shell'
	}

	{
		match: '(^meta.scope.message.git-commit$)'
		name: 'meta.scope.message.git-commit'
	}

	{
		match: '(^meta.scope.metadata.git-commit$)'
		name: 'meta.scope.metadata.git-commit'
	}

	{
		match: '(^meta.scope.prerequisites.makefile$)'
		name: 'meta.scope.prerequisites.makefile'
	}

	{
		match: '(^meta.scope.recipe.makefile$)'
		name: 'meta.scope.recipe.makefile'
	}

	{
		match: '(^meta.scope.select-block.shell$)'
		name: 'meta.scope.select-block.shell'
	}

	{
		match: '(^meta.scope.subshell.shell$)'
		name: 'meta.scope.subshell.shell'
	}

	{
		match: '(^meta.scope.target.makefile$)'
		name: 'meta.scope.target.makefile'
	}

	{
		match: '(^meta.scope.while-loop.shell$)'
		name: 'meta.scope.while-loop.shell'
	}

	{
		match: '(^meta.section$)'
		name: 'meta.section'
	}

	{
		match: '(^meta.section.error.junit-test-report$)'
		name: 'meta.section.error.junit-test-report'
	}

	{
		match: '(^meta.section.git-config$)'
		name: 'meta.section.git-config'
	}

	{
		match: '(^meta.section.output.junit-test-report$)'
		name: 'meta.section.output.junit-test-report'
	}

	{
		match: '(^meta.selector.css$)'
		name: 'meta.selector.css'
	}

	{
		match: '(^meta.selector.objc$)'
		name: 'meta.selector.objc'
	}

	{
		match: '(^meta.separator.markdown$)'
		name: 'meta.separator.markdown'
	}

	{
		match: '(^meta.set.clojure$)'
		name: 'meta.set.clojure'
	}

	{
		match: '(^meta.set.variable.map.scss$)'
		name: 'meta.set.variable.map.scss'
	}

	{
		match: '(^meta.set.variable.scss$)'
		name: 'meta.set.variable.scss'
	}

	{
		match: '(^meta.special.empty-tag.php$)'
		name: 'meta.special.empty-tag.php'
	}

	{
		match: '(^meta.stackframe.junit-test-report$)'
		name: 'meta.stackframe.junit-test-report'
	}

	{
		match: '(^meta.stackframe.source.junit-test-report$)'
		name: 'meta.stackframe.source.junit-test-report'
	}

	{
		match: '(^meta.stackframe.source.line.junit-test-report$)'
		name: 'meta.stackframe.source.line.junit-test-report'
	}

	{
		match: '(^meta.structure.array.json$)'
		name: 'meta.structure.array.json'
	}

	{
		match: '(^meta.structure.dictionary.json$)'
		name: 'meta.structure.dictionary.json'
	}

	{
		match: '(^meta.structure.dictionary.key.json$)'
		name: 'meta.structure.dictionary.key.json'
	}

	{
		match: '(^meta.structure.dictionary.python$)'
		name: 'meta.structure.dictionary.python'
	}

	{
		match: '(^meta.structure.dictionary.value.json$)'
		name: 'meta.structure.dictionary.value.json'
	}

	{
		match: '(^meta.structure.extglob.shell$)'
		name: 'meta.structure.extglob.shell'
	}

	{
		match: '(^meta.structure.list.python$)'
		name: 'meta.structure.list.python'
	}

	{
		match: '(^meta.switch-statement.js$)'
		name: 'meta.switch-statement.js'
	}

	{
		match: '(^meta.symbol.clojure$)'
		name: 'meta.symbol.clojure'
	}

	{
		match: '(^meta.symbol.dynamic.clojure$)'
		name: 'meta.symbol.dynamic.clojure'
	}

	{
		match: '(^meta.symbol.namespace.clojure$)'
		name: 'meta.symbol.namespace.clojure'
	}

	{
		match: '(^meta.syntax.ruby.start-block$)'
		name: 'meta.syntax.ruby.start-block'
	}

	{
		match: '(^meta.tag.any.html$)'
		name: 'meta.tag.any.html'
	}

	{
		match: '(^meta.tag.array.xml.plist$)'
		name: 'meta.tag.array.xml.plist'
	}

	{
		match: '(^meta.tag.block.any.html$)'
		name: 'meta.tag.block.any.html'
	}

	{
		match: '(^meta.tag.dict.xml.plist$)'
		name: 'meta.tag.dict.xml.plist'
	}

	{
		match: '(^meta.tag.inline.any.html$)'
		name: 'meta.tag.inline.any.html'
	}

	{
		match: '(^meta.tag.inline.phpdoc.php$)'
		name: 'meta.tag.inline.phpdoc.php'
	}

	{
		match: '(^meta.tag.nant$)'
		name: 'meta.tag.nant'
	}

	{
		match: '(^meta.tag.no-content.xml$)'
		name: 'meta.tag.no-content.xml'
	}

	{
		match: '(^meta.tag.other.html$)'
		name: 'meta.tag.other.html'
	}

	{
		match: '(^meta.tag.plist.xml.plist$)'
		name: 'meta.tag.plist.xml.plist'
	}

	{
		match: '(^meta.tag.preprocessor.xml$)'
		name: 'meta.tag.preprocessor.xml'
	}

	{
		match: '(^meta.tag.preprocessor.xml.html$)'
		name: 'meta.tag.preprocessor.xml.html'
	}

	{
		match: '(^meta.tag.sgml.doctype.html$)'
		name: 'meta.tag.sgml.doctype.html'
	}

	{
		match: '(^meta.tag.sgml.doctype.xml$)'
		name: 'meta.tag.sgml.doctype.xml'
	}

	{
		match: '(^meta.tag.sgml.html$)'
		name: 'meta.tag.sgml.html'
	}

	{
		match: '(^meta.tag.string.xml.plist$)'
		name: 'meta.tag.string.xml.plist'
	}

	{
		match: '(^meta.tag.structure.any.html$)'
		name: 'meta.tag.structure.any.html'
	}

	{
		match: '(^meta.tag.template.attribute.jsp$)'
		name: 'meta.tag.template.attribute.jsp'
	}

	{
		match: '(^meta.tag.template.body.jsp$)'
		name: 'meta.tag.template.body.jsp'
	}

	{
		match: '(^meta.tag.template.dobody.jsp$)'
		name: 'meta.tag.template.dobody.jsp'
	}

	{
		match: '(^meta.tag.template.element.jsp$)'
		name: 'meta.tag.template.element.jsp'
	}

	{
		match: '(^meta.tag.template.fallback.jsp$)'
		name: 'meta.tag.template.fallback.jsp'
	}

	{
		match: '(^meta.tag.template.forward.jsp$)'
		name: 'meta.tag.template.forward.jsp'
	}

	{
		match: '(^meta.tag.template.getproperty.jsp$)'
		name: 'meta.tag.template.getproperty.jsp'
	}

	{
		match: '(^meta.tag.template.include.jsp$)'
		name: 'meta.tag.template.include.jsp'
	}

	{
		match: '(^meta.tag.template.invoke.jsp$)'
		name: 'meta.tag.template.invoke.jsp'
	}

	{
		match: '(^meta.tag.template.mustache$)'
		name: 'meta.tag.template.mustache'
	}

	{
		match: '(^meta.tag.template.output.jsp$)'
		name: 'meta.tag.template.output.jsp'
	}

	{
		match: '(^meta.tag.template.param.jsp$)'
		name: 'meta.tag.template.param.jsp'
	}

	{
		match: '(^meta.tag.template.plugin.jsp$)'
		name: 'meta.tag.template.plugin.jsp'
	}

	{
		match: '(^meta.tag.template.raw.mustache$)'
		name: 'meta.tag.template.raw.mustache'
	}

	{
		match: '(^meta.tag.template.root.jsp$)'
		name: 'meta.tag.template.root.jsp'
	}

	{
		match: '(^meta.tag.template.setproperty.jsp$)'
		name: 'meta.tag.template.setproperty.jsp'
	}

	{
		match: '(^meta.tag.template.text.jsp$)'
		name: 'meta.tag.template.text.jsp'
	}

	{
		match: '(^meta.tag.template.usebean.jsp$)'
		name: 'meta.tag.template.usebean.jsp'
	}

	{
		match: '(^meta.tag.xml$)'
		name: 'meta.tag.xml'
	}

	{
		match: '(^meta.tag.xml.template$)'
		name: 'meta.tag.xml.template'
	}

	{
		match: '(^meta.testcase.label.junit-test-report$)'
		name: 'meta.testcase.label.junit-test-report'
	}

	{
		match: '(^meta.testcase.name.junit-test-report$)'
		name: 'meta.testcase.name.junit-test-report'
	}

	{
		match: '(^meta.throwables.java$)'
		name: 'meta.throwables.java'
	}

	{
		match: '(^meta.toc-list.banner.block.c$)'
		name: 'meta.toc-list.banner.block.c'
	}

	{
		match: '(^meta.toc-list.banner.line.c$)'
		name: 'meta.toc-list.banner.line.c'
	}

	{
		match: '(^meta.toc-list.pragma-mark.c$)'
		name: 'meta.toc-list.pragma-mark.c'
	}

	{
		match: '(^meta.trait.php$)'
		name: 'meta.trait.php'
	}

	{
		match: '(^meta.try.java$)'
		name: 'meta.try.java'
	}

	{
		match: '(^meta.try.resources.java$)'
		name: 'meta.try.resources.java'
	}

	{
		match: '(^meta.use.php$)'
		name: 'meta.use.php'
	}

	{
		match: '(^meta.using-namespace-declaration.cpp$)'
		name: 'meta.using-namespace-declaration.cpp'
	}

	{
		match: '(^meta.value-pair.section-item.git-config$)'
		name: 'meta.value-pair.section-item.git-config'
	}

	{
		match: '(^meta.var.clojure$)'
		name: 'meta.var.clojure'
	}

	{
		match: '(^meta.variable-declaration.sass$)'
		name: 'meta.variable-declaration.sass'
	}

	{
		match: '(^meta.variable-declaration.sass.mixin$)'
		name: 'meta.variable-declaration.sass.mixin'
	}

	{
		match: '(^meta.variable-usage.sass$)'
		name: 'meta.variable-usage.sass'
	}

	{
		match: '(^meta.variable.assignment.destructured.array.coffee$)'
		name: 'meta.variable.assignment.destructured.array.coffee'
	}

	{
		match: '(^meta.variable.assignment.destructured.object.coffee$)'
		name: 'meta.variable.assignment.destructured.object.coffee'
	}

	{
		match: '(^meta.vector.clojure$)'
		name: 'meta.vector.clojure'
	}

	{
		match: '(^other.description.jsdoc$)'
		name: 'other.description.jsdoc'
	}

	{
		match: '(^other.meta.jsdoc$)'
		name: 'other.meta.jsdoc'
	}

	{
		match: '(^preprocessor.source.cake$)'
		name: 'preprocessor.source.cake'
	}

	{
		match: '(^preprocessor.source.csx$)'
		name: 'preprocessor.source.csx'
	}

	{
		match: '(^punctuation.bracket.angle.java$)'
		name: 'punctuation.bracket.angle.java'
	}

	{
		match: '(^punctuation.bracket.curly.java$)'
		name: 'punctuation.bracket.curly.java'
	}

	{
		match: '(^punctuation.bracket.round.java$)'
		name: 'punctuation.bracket.round.java'
	}

	{
		match: '(^punctuation.bracket.square.java$)'
		name: 'punctuation.bracket.square.java'
	}

	{
		match: '(^punctuation.definition.annotation-arguments.begin.bracket.round.java$)'
		name: 'punctuation.definition.annotation-arguments.begin.bracket.round.java'
	}

	{
		match: '(^punctuation.definition.arbitrary-repetition.php$)'
		name: 'punctuation.definition.arbitrary-repetition.php'
	}

	{
		match: '(^punctuation.definition.arbitrary-repetition.ruby$)'
		name: 'punctuation.definition.arbitrary-repetition.ruby'
	}

	{
		match: '(^punctuation.definition.arbitrary-repitition.php$)'
		name: 'punctuation.definition.arbitrary-repitition.php'
	}

	{
		match: '(^punctuation.definition.arguments.begin.bracket.round.js$)'
		name: 'punctuation.definition.arguments.begin.bracket.round.js'
	}

	{
		match: '(^punctuation.definition.arguments.begin.python$)'
		name: 'punctuation.definition.arguments.begin.python'
	}

	{
		match: '(^punctuation.definition.arguments.shell$)'
		name: 'punctuation.definition.arguments.shell'
	}

	{
		match: '(^punctuation.definition.array.begin.json$)'
		name: 'punctuation.definition.array.begin.json'
	}

	{
		match: '(^punctuation.definition.array.begin.php$)'
		name: 'punctuation.definition.array.begin.php'
	}

	{
		match: '(^punctuation.definition.array.begin.plist$)'
		name: 'punctuation.definition.array.begin.plist'
	}

	{
		match: '(^punctuation.definition.array.end.json$)'
		name: 'punctuation.definition.array.end.json'
	}

	{
		match: '(^punctuation.definition.array.end.php$)'
		name: 'punctuation.definition.array.end.php'
	}

	{
		match: '(^punctuation.definition.attribute-selector.begin.bracket.square.scss$)'
		name: 'punctuation.definition.attribute-selector.begin.bracket.square.scss'
	}

	{
		match: '(^punctuation.definition.attribute-selector.end.bracket.square.scss$)'
		name: 'punctuation.definition.attribute-selector.end.bracket.square.scss'
	}

	{
		match: '(^punctuation.definition.begin.bracket.round.scss$)'
		name: 'punctuation.definition.begin.bracket.round.scss'
	}

	{
		match: '(^punctuation.definition.begin.entity.css$)'
		name: 'punctuation.definition.begin.entity.css'
	}

	{
		match: '(^punctuation.definition.begin.gfm$)'
		name: 'punctuation.definition.begin.gfm'
	}

	{
		match: '(^punctuation.definition.block.begin.mustache$)'
		name: 'punctuation.definition.block.begin.mustache'
	}

	{
		match: '(^punctuation.definition.block.end.mustache$)'
		name: 'punctuation.definition.block.end.mustache'
	}

	{
		match: '(^punctuation.definition.blockquote.markdown$)'
		name: 'punctuation.definition.blockquote.markdown'
	}

	{
		match: '(^punctuation.definition.bold.markdown$)'
		name: 'punctuation.definition.bold.markdown'
	}

	{
		match: '(^punctuation.definition.case-pattern.shell$)'
		name: 'punctuation.definition.case-pattern.shell'
	}

	{
		match: '(^punctuation.definition.comment.begin.c$)'
		name: 'punctuation.definition.comment.begin.c'
	}

	{
		match: '(^punctuation.definition.comment.begin.css$)'
		name: 'punctuation.definition.comment.begin.css'
	}

	{
		match: '(^punctuation.definition.comment.begin.erb$)'
		name: 'punctuation.definition.comment.begin.erb'
	}

	{
		match: '(^punctuation.definition.comment.begin.plist$)'
		name: 'punctuation.definition.comment.begin.plist'
	}

	{
		match: '(^punctuation.definition.comment.begin.ruby$)'
		name: 'punctuation.definition.comment.begin.ruby'
	}

	{
		match: '(^punctuation.definition.comment.coffee$)'
		name: 'punctuation.definition.comment.coffee'
	}

	{
		match: '(^punctuation.definition.comment.erb$)'
		name: 'punctuation.definition.comment.erb'
	}

	{
		match: '(^punctuation.definition.comment.git-commit$)'
		name: 'punctuation.definition.comment.git-commit'
	}

	{
		match: '(^punctuation.definition.comment.git-config$)'
		name: 'punctuation.definition.comment.git-config'
	}

	{
		match: '(^punctuation.definition.comment.git-rebase$)'
		name: 'punctuation.definition.comment.git-rebase'
	}

	{
		match: '(^punctuation.definition.comment.html.js$)'
		name: 'punctuation.definition.comment.html.js'
	}

	{
		match: '(^punctuation.definition.comment.java$)'
		name: 'punctuation.definition.comment.java'
	}

	{
		match: '(^punctuation.definition.comment.js$)'
		name: 'punctuation.definition.comment.js'
	}

	{
		match: '(^punctuation.definition.comment.mustache$)'
		name: 'punctuation.definition.comment.mustache'
	}

	{
		match: '(^punctuation.definition.comment.php$)'
		name: 'punctuation.definition.comment.php'
	}

	{
		match: '(^punctuation.definition.comment.ruby$)'
		name: 'punctuation.definition.comment.ruby'
	}

	{
		match: '(^punctuation.definition.comment.sass$)'
		name: 'punctuation.definition.comment.sass'
	}

	{
		match: '(^punctuation.definition.comment.scss$)'
		name: 'punctuation.definition.comment.scss'
	}

	{
		match: '(^punctuation.definition.comment.toml$)'
		name: 'punctuation.definition.comment.toml'
	}

	{
		match: '(^punctuation.definition.comment.xml.plist$)'
		name: 'punctuation.definition.comment.xml.plist'
	}

	{
		match: '(^punctuation.definition.comment.yaml$)'
		name: 'punctuation.definition.comment.yaml'
	}

	{
		match: '(^punctuation.definition.computed-key.begin.bracket.square.js$)'
		name: 'punctuation.definition.computed-key.begin.bracket.square.js'
	}

	{
		match: '(^punctuation.definition.computed-key.end.bracket.square.js$)'
		name: 'punctuation.definition.computed-key.end.bracket.square.js'
	}

	{
		match: '(^punctuation.definition.condition.begin.bracket.round.css$)'
		name: 'punctuation.definition.condition.begin.bracket.round.css'
	}

	{
		match: '(^punctuation.definition.condition.begin.bracket.round.scss$)'
		name: 'punctuation.definition.condition.begin.bracket.round.scss'
	}

	{
		match: '(^punctuation.definition.condition.end.bracket.round.scss$)'
		name: 'punctuation.definition.condition.end.bracket.round.scss'
	}

	{
		match: '(^punctuation.definition.constant.begin.markdown$)'
		name: 'punctuation.definition.constant.begin.markdown'
	}

	{
		match: '(^punctuation.definition.constant.css$)'
		name: 'punctuation.definition.constant.css'
	}

	{
		match: '(^punctuation.definition.constant.end.markdown$)'
		name: 'punctuation.definition.constant.end.markdown'
	}

	{
		match: '(^punctuation.definition.constant.hashkey.ruby$)'
		name: 'punctuation.definition.constant.hashkey.ruby'
	}

	{
		match: '(^punctuation.definition.constant.markdown$)'
		name: 'punctuation.definition.constant.markdown'
	}

	{
		match: '(^punctuation.definition.constant.nant$)'
		name: 'punctuation.definition.constant.nant'
	}

	{
		match: '(^punctuation.definition.constant.ruby$)'
		name: 'punctuation.definition.constant.ruby'
	}

	{
		match: '(^punctuation.definition.constant.scss$)'
		name: 'punctuation.definition.constant.scss'
	}

	{
		match: '(^punctuation.definition.constant.xml$)'
		name: 'punctuation.definition.constant.xml'
	}

	{
		match: '(^punctuation.definition.data.plist$)'
		name: 'punctuation.definition.data.plist'
	}

	{
		match: '(^punctuation.definition.decorator.python$)'
		name: 'punctuation.definition.decorator.python'
	}

	{
		match: '(^punctuation.definition.destructuring.begin.bracket.curly.coffee$)'
		name: 'punctuation.definition.destructuring.begin.bracket.curly.coffee'
	}

	{
		match: '(^punctuation.definition.destructuring.begin.bracket.square.coffee$)'
		name: 'punctuation.definition.destructuring.begin.bracket.square.coffee'
	}

	{
		match: '(^punctuation.definition.dictionary.begin.json$)'
		name: 'punctuation.definition.dictionary.begin.json'
	}

	{
		match: '(^punctuation.definition.dictionary.begin.plist$)'
		name: 'punctuation.definition.dictionary.begin.plist'
	}

	{
		match: '(^punctuation.definition.dictionary.begin.python$)'
		name: 'punctuation.definition.dictionary.begin.python'
	}

	{
		match: '(^punctuation.definition.dictionary.end.python$)'
		name: 'punctuation.definition.dictionary.end.python'
	}

	{
		match: '(^punctuation.definition.directive.c$)'
		name: 'punctuation.definition.directive.c'
	}

	{
		match: '(^punctuation.definition.directives.end.yaml$)'
		name: 'punctuation.definition.directives.end.yaml'
	}

	{
		match: '(^punctuation.definition.document.end.yaml$)'
		name: 'punctuation.definition.document.end.yaml'
	}

	{
		match: '(^punctuation.definition.embedded.begin.ruby$)'
		name: 'punctuation.definition.embedded.begin.ruby'
	}

	{
		match: '(^punctuation.definition.end.bracket.round.scss$)'
		name: 'punctuation.definition.end.bracket.round.scss'
	}

	{
		match: '(^punctuation.definition.end.bracket.square.c$)'
		name: 'punctuation.definition.end.bracket.square.c'
	}

	{
		match: '(^punctuation.definition.end.entity.css$)'
		name: 'punctuation.definition.end.entity.css'
	}

	{
		match: '(^punctuation.definition.end.gfm$)'
		name: 'punctuation.definition.end.gfm'
	}

	{
		match: '(^punctuation.definition.entity.begin.bracket.square.css$)'
		name: 'punctuation.definition.entity.begin.bracket.square.css'
	}

	{
		match: '(^punctuation.definition.entity.css$)'
		name: 'punctuation.definition.entity.css'
	}

	{
		match: '(^punctuation.definition.entity.end.html$)'
		name: 'punctuation.definition.entity.end.html'
	}

	{
		match: '(^punctuation.definition.entity.gfm$)'
		name: 'punctuation.definition.entity.gfm'
	}

	{
		match: '(^punctuation.definition.entity.other.inherited-class.objc$)'
		name: 'punctuation.definition.entity.other.inherited-class.objc'
	}

	{
		match: '(^punctuation.definition.entity.sass$)'
		name: 'punctuation.definition.entity.sass'
	}

	{
		match: '(^punctuation.definition.entity.xml$)'
		name: 'punctuation.definition.entity.xml'
	}

	{
		match: '(^punctuation.definition.entry.yaml$)'
		name: 'punctuation.definition.entry.yaml'
	}

	{
		match: '(^punctuation.definition.escape.backslash.coffee$)'
		name: 'punctuation.definition.escape.backslash.coffee'
	}

	{
		match: '(^punctuation.definition.extglob.shell$)'
		name: 'punctuation.definition.extglob.shell'
	}

	{
		match: '(^punctuation.definition.function.body.begin.bracket.curly.js$)'
		name: 'punctuation.definition.function.body.begin.bracket.curly.js'
	}

	{
		match: '(^punctuation.definition.function.body.end.bracket.curly.js$)'
		name: 'punctuation.definition.function.body.end.bracket.curly.js'
	}

	{
		match: '(^punctuation.definition.group.assertion.conditional.regexp$)'
		name: 'punctuation.definition.group.assertion.conditional.regexp'
	}

	{
		match: '(^punctuation.definition.group.assertion.regexp$)'
		name: 'punctuation.definition.group.assertion.regexp'
	}

	{
		match: '(^punctuation.definition.group.capture.regexp$)'
		name: 'punctuation.definition.group.capture.regexp'
	}

	{
		match: '(^punctuation.definition.group.no-capture.regexp$)'
		name: 'punctuation.definition.group.no-capture.regexp'
	}

	{
		match: '(^punctuation.definition.group.regexp$)'
		name: 'punctuation.definition.group.regexp'
	}

	{
		match: '(^punctuation.definition.group.shell$)'
		name: 'punctuation.definition.group.shell'
	}

	{
		match: '(^punctuation.definition.heading.markdown$)'
		name: 'punctuation.definition.heading.markdown'
	}

	{
		match: '(^punctuation.definition.heredoc.perl$)'
		name: 'punctuation.definition.heredoc.perl'
	}

	{
		match: '(^punctuation.definition.inheritance.begin.python$)'
		name: 'punctuation.definition.inheritance.begin.python'
	}

	{
		match: '(^punctuation.definition.interpolation.begin.bracket.curly.scss$)'
		name: 'punctuation.definition.interpolation.begin.bracket.curly.scss'
	}

	{
		match: '(^punctuation.definition.italic.markdown$)'
		name: 'punctuation.definition.italic.markdown'
	}

	{
		match: '(^punctuation.definition.item.text$)'
		name: 'punctuation.definition.item.text'
	}

	{
		match: '(^punctuation.definition.keyword.css$)'
		name: 'punctuation.definition.keyword.css'
	}

	{
		match: '(^punctuation.definition.keyword.less$)'
		name: 'punctuation.definition.keyword.less'
	}

	{
		match: '(^punctuation.definition.keyword.objc$)'
		name: 'punctuation.definition.keyword.objc'
	}

	{
		match: '(^punctuation.definition.keyword.sass$)'
		name: 'punctuation.definition.keyword.sass'
	}

	{
		match: '(^punctuation.definition.keyword.scss$)'
		name: 'punctuation.definition.keyword.scss'
	}

	{
		match: '(^punctuation.definition.link.markdown$)'
		name: 'punctuation.definition.link.markdown'
	}

	{
		match: '(^punctuation.definition.list_item.markdown$)'
		name: 'punctuation.definition.list_item.markdown'
	}

	{
		match: '(^punctuation.definition.list.begin.python$)'
		name: 'punctuation.definition.list.begin.python'
	}

	{
		match: '(^punctuation.definition.list.end.python$)'
		name: 'punctuation.definition.list.end.python'
	}

	{
		match: '(^punctuation.definition.logical-expression.shell$)'
		name: 'punctuation.definition.logical-expression.shell'
	}

	{
		match: '(^punctuation.definition.map.begin.bracket.round.scss$)'
		name: 'punctuation.definition.map.begin.bracket.round.scss'
	}

	{
		match: '(^punctuation.definition.media-query.begin.bracket.round.scss$)'
		name: 'punctuation.definition.media-query.begin.bracket.round.scss'
	}

	{
		match: '(^punctuation.definition.metadata.markdown$)'
		name: 'punctuation.definition.metadata.markdown'
	}

	{
		match: '(^punctuation.definition.method-parameters.begin.cs$)'
		name: 'punctuation.definition.method-parameters.begin.cs'
	}

	{
		match: '(^punctuation.definition.modules.begin.js$)'
		name: 'punctuation.definition.modules.begin.js'
	}

	{
		match: '(^punctuation.definition.modules.end.js$)'
		name: 'punctuation.definition.modules.end.js'
	}

	{
		match: '(^punctuation.definition.parameters.begin.bracket.round.css$)'
		name: 'punctuation.definition.parameters.begin.bracket.round.css'
	}

	{
		match: '(^punctuation.definition.parameters.begin.bracket.round.java$)'
		name: 'punctuation.definition.parameters.begin.bracket.round.java'
	}

	{
		match: '(^punctuation.definition.parameters.begin.bracket.round.js$)'
		name: 'punctuation.definition.parameters.begin.bracket.round.js'
	}

	{
		match: '(^punctuation.definition.parameters.begin.bracket.round.scss$)'
		name: 'punctuation.definition.parameters.begin.bracket.round.scss'
	}

	{
		match: '(^punctuation.definition.parameters.begin.c$)'
		name: 'punctuation.definition.parameters.begin.c'
	}

	{
		match: '(^punctuation.definition.parameters.begin.php$)'
		name: 'punctuation.definition.parameters.begin.php'
	}

	{
		match: '(^punctuation.definition.parameters.begin.python$)'
		name: 'punctuation.definition.parameters.begin.python'
	}

	{
		match: '(^punctuation.definition.parameters.c$)'
		name: 'punctuation.definition.parameters.c'
	}

	{
		match: '(^punctuation.definition.parameters.end.bracket.round.css$)'
		name: 'punctuation.definition.parameters.end.bracket.round.css'
	}

	{
		match: '(^punctuation.definition.parameters.end.bracket.round.java$)'
		name: 'punctuation.definition.parameters.end.bracket.round.java'
	}

	{
		match: '(^punctuation.definition.parameters.end.c$)'
		name: 'punctuation.definition.parameters.end.c'
	}

	{
		match: '(^punctuation.definition.parameters.end.php$)'
		name: 'punctuation.definition.parameters.end.php'
	}

	{
		match: '(^punctuation.definition.parameters.perl$)'
		name: 'punctuation.definition.parameters.perl'
	}

	{
		match: '(^punctuation.definition.parameters.ruby$)'
		name: 'punctuation.definition.parameters.ruby'
	}

	{
		match: '(^punctuation.definition.pseudo-class.begin.bracket.round.css$)'
		name: 'punctuation.definition.pseudo-class.begin.bracket.round.css'
	}

	{
		match: '(^punctuation.definition.pseudo-class.end.bracket.round.css$)'
		name: 'punctuation.definition.pseudo-class.end.bracket.round.css'
	}

	{
		match: '(^punctuation.definition.raw.markdown$)'
		name: 'punctuation.definition.raw.markdown'
	}

	{
		match: '(^punctuation.definition.scope.cpp$)'
		name: 'punctuation.definition.scope.cpp'
	}

	{
		match: '(^punctuation.definition.section.case-statement.js$)'
		name: 'punctuation.definition.section.case-statement.js'
	}

	{
		match: '(^punctuation.definition.section.subsection.begin.git-config$)'
		name: 'punctuation.definition.section.subsection.begin.git-config'
	}

	{
		match: '(^punctuation.definition.section.subsection.end.git-config$)'
		name: 'punctuation.definition.section.subsection.end.git-config'
	}

	{
		match: '(^punctuation.definition.section.switch-block.begin.bracket.curly.js$)'
		name: 'punctuation.definition.section.switch-block.begin.bracket.curly.js'
	}

	{
		match: '(^punctuation.definition.separator.parameter.cs$)'
		name: 'punctuation.definition.separator.parameter.cs'
	}

	{
		match: '(^punctuation.definition.storage.modifier.objc$)'
		name: 'punctuation.definition.storage.modifier.objc'
	}

	{
		match: '(^punctuation.definition.storage.type.objc$)'
		name: 'punctuation.definition.storage.type.objc'
	}

	{
		match: '(^punctuation.definition.string.begin.c$)'
		name: 'punctuation.definition.string.begin.c'
	}

	{
		match: '(^punctuation.definition.string.begin.clojure$)'
		name: 'punctuation.definition.string.begin.clojure'
	}

	{
		match: '(^punctuation.definition.string.begin.coffee$)'
		name: 'punctuation.definition.string.begin.coffee'
	}

	{
		match: '(^punctuation.definition.string.begin.cs$)'
		name: 'punctuation.definition.string.begin.cs'
	}

	{
		match: '(^punctuation.definition.string.begin.css$)'
		name: 'punctuation.definition.string.begin.css'
	}

	{
		match: '(^punctuation.definition.string.begin.git-config$)'
		name: 'punctuation.definition.string.begin.git-config'
	}

	{
		match: '(^punctuation.definition.string.begin.go$)'
		name: 'punctuation.definition.string.begin.go'
	}

	{
		match: '(^punctuation.definition.string.begin.gotemplate$)'
		name: 'punctuation.definition.string.begin.gotemplate'
	}

	{
		match: '(^punctuation.definition.string.begin.html$)'
		name: 'punctuation.definition.string.begin.html'
	}

	{
		match: '(^punctuation.definition.string.begin.java$)'
		name: 'punctuation.definition.string.begin.java'
	}

	{
		match: '(^punctuation.definition.string.begin.js$)'
		name: 'punctuation.definition.string.begin.js'
	}

	{
		match: '(^punctuation.definition.string.begin.json$)'
		name: 'punctuation.definition.string.begin.json'
	}

	{
		match: '(^punctuation.definition.string.begin.jsp$)'
		name: 'punctuation.definition.string.begin.jsp'
	}

	{
		match: '(^punctuation.definition.string.begin.markdown$)'
		name: 'punctuation.definition.string.begin.markdown'
	}

	{
		match: '(^punctuation.definition.string.begin.nant$)'
		name: 'punctuation.definition.string.begin.nant'
	}

	{
		match: '(^punctuation.definition.string.begin.objc$)'
		name: 'punctuation.definition.string.begin.objc'
	}

	{
		match: '(^punctuation.definition.string.begin.perl$)'
		name: 'punctuation.definition.string.begin.perl'
	}

	{
		match: '(^punctuation.definition.string.begin.perl6$)'
		name: 'punctuation.definition.string.begin.perl6'
	}

	{
		match: '(^punctuation.definition.string.begin.php$)'
		name: 'punctuation.definition.string.begin.php'
	}

	{
		match: '(^punctuation.definition.string.begin.plist$)'
		name: 'punctuation.definition.string.begin.plist'
	}

	{
		match: '(^punctuation.definition.string.begin.python$)'
		name: 'punctuation.definition.string.begin.python'
	}

	{
		match: '(^punctuation.definition.string.begin.ruby$)'
		name: 'punctuation.definition.string.begin.ruby'
	}

	{
		match: '(^punctuation.definition.string.begin.sass$)'
		name: 'punctuation.definition.string.begin.sass'
	}

	{
		match: '(^punctuation.definition.string.begin.scss$)'
		name: 'punctuation.definition.string.begin.scss'
	}

	{
		match: '(^punctuation.definition.string.begin.shell$)'
		name: 'punctuation.definition.string.begin.shell'
	}

	{
		match: '(^punctuation.definition.string.begin.sql$)'
		name: 'punctuation.definition.string.begin.sql'
	}

	{
		match: '(^punctuation.definition.string.begin.strings$)'
		name: 'punctuation.definition.string.begin.strings'
	}

	{
		match: '(^punctuation.definition.string.begin.toml$)'
		name: 'punctuation.definition.string.begin.toml'
	}

	{
		match: '(^punctuation.definition.string.begin.xml$)'
		name: 'punctuation.definition.string.begin.xml'
	}

	{
		match: '(^punctuation.definition.string.begin.xml.plist$)'
		name: 'punctuation.definition.string.begin.xml.plist'
	}

	{
		match: '(^punctuation.definition.string.begin.yaml$)'
		name: 'punctuation.definition.string.begin.yaml'
	}

	{
		match: '(^punctuation.definition.string.end.coffee$)'
		name: 'punctuation.definition.string.end.coffee'
	}

	{
		match: '(^punctuation.definition.string.end.cs$)'
		name: 'punctuation.definition.string.end.cs'
	}

	{
		match: '(^punctuation.definition.string.end.css$)'
		name: 'punctuation.definition.string.end.css'
	}

	{
		match: '(^punctuation.definition.string.end.go$)'
		name: 'punctuation.definition.string.end.go'
	}

	{
		match: '(^punctuation.definition.string.end.js$)'
		name: 'punctuation.definition.string.end.js'
	}

	{
		match: '(^punctuation.definition.string.end.jsp$)'
		name: 'punctuation.definition.string.end.jsp'
	}

	{
		match: '(^punctuation.definition.string.end.markdown$)'
		name: 'punctuation.definition.string.end.markdown'
	}

	{
		match: '(^punctuation.definition.string.end.python$)'
		name: 'punctuation.definition.string.end.python'
	}

	{
		match: '(^punctuation.definition.string.end.sass$)'
		name: 'punctuation.definition.string.end.sass'
	}

	{
		match: '(^punctuation.definition.string.end.scss$)'
		name: 'punctuation.definition.string.end.scss'
	}

	{
		match: '(^punctuation.definition.string.end.shell$)'
		name: 'punctuation.definition.string.end.shell'
	}

	{
		match: '(^punctuation.definition.string.end.sql$)'
		name: 'punctuation.definition.string.end.sql'
	}

	{
		match: '(^punctuation.definition.string.end.toml$)'
		name: 'punctuation.definition.string.end.toml'
	}

	{
		match: '(^punctuation.definition.string.end.xml.plist$)'
		name: 'punctuation.definition.string.end.xml.plist'
	}

	{
		match: '(^punctuation.definition.string.end.yaml$)'
		name: 'punctuation.definition.string.end.yaml'
	}

	{
		match: '(^punctuation.definition.string.makefile$)'
		name: 'punctuation.definition.string.makefile'
	}

	{
		match: '(^punctuation.definition.string.markdown$)'
		name: 'punctuation.definition.string.markdown'
	}

	{
		match: '(^punctuation.definition.string.perl$)'
		name: 'punctuation.definition.string.perl'
	}

	{
		match: '(^punctuation.definition.string.php$)'
		name: 'punctuation.definition.string.php'
	}

	{
		match: '(^punctuation.definition.subshell.shell$)'
		name: 'punctuation.definition.subshell.shell'
	}

	{
		match: '(^punctuation.definition.switch-expression.begin.bracket.round.js$)'
		name: 'punctuation.definition.switch-expression.begin.bracket.round.js'
	}

	{
		match: '(^punctuation.definition.switch-expression.end.bracket.round.js$)'
		name: 'punctuation.definition.switch-expression.end.bracket.round.js'
	}

	{
		match: '(^punctuation.definition.symbol.begin.ruby$)'
		name: 'punctuation.definition.symbol.begin.ruby'
	}

	{
		match: '(^punctuation.definition.table.array.begin.toml$)'
		name: 'punctuation.definition.table.array.begin.toml'
	}

	{
		match: '(^punctuation.definition.table.array.end.toml$)'
		name: 'punctuation.definition.table.array.end.toml'
	}

	{
		match: '(^punctuation.definition.table.begin.toml$)'
		name: 'punctuation.definition.table.begin.toml'
	}

	{
		match: '(^punctuation.definition.table.end.toml$)'
		name: 'punctuation.definition.table.end.toml'
	}

	{
		match: '(^punctuation.definition.tag.begin.jsp$)'
		name: 'punctuation.definition.tag.begin.jsp'
	}

	{
		match: '(^punctuation.definition.tag.end.jsp$)'
		name: 'punctuation.definition.tag.end.jsp'
	}

	{
		match: '(^punctuation.definition.tag.html$)'
		name: 'punctuation.definition.tag.html'
	}

	{
		match: '(^punctuation.definition.tag.local.yaml$)'
		name: 'punctuation.definition.tag.local.yaml'
	}

	{
		match: '(^punctuation.definition.tag.non-specific.yaml$)'
		name: 'punctuation.definition.tag.non-specific.yaml'
	}

	{
		match: '(^punctuation.definition.tag.omap.yaml$)'
		name: 'punctuation.definition.tag.omap.yaml'
	}

	{
		match: '(^punctuation.definition.tag.xml$)'
		name: 'punctuation.definition.tag.xml'
	}

	{
		match: '(^punctuation.definition.tag.xml.plist$)'
		name: 'punctuation.definition.tag.xml.plist'
	}

	{
		match: '(^punctuation.definition.tuple.end.python$)'
		name: 'punctuation.definition.tuple.end.python'
	}

	{
		match: '(^punctuation.definition.type.begin.objc$)'
		name: 'punctuation.definition.type.begin.objc'
	}

	{
		match: '(^punctuation.definition.unicode-escape.begin.bracket.curly.js$)'
		name: 'punctuation.definition.unicode-escape.begin.bracket.curly.js'
	}

	{
		match: '(^punctuation.definition.unicode-escape.end.bracket.curly.js$)'
		name: 'punctuation.definition.unicode-escape.end.bracket.curly.js'
	}

	{
		match: '(^punctuation.definition.variable.less$)'
		name: 'punctuation.definition.variable.less'
	}

	{
		match: '(^punctuation.definition.variable.makefile$)'
		name: 'punctuation.definition.variable.makefile'
	}

	{
		match: '(^punctuation.definition.variable.perl$)'
		name: 'punctuation.definition.variable.perl'
	}

	{
		match: '(^punctuation.definition.variable.php$)'
		name: 'punctuation.definition.variable.php'
	}

	{
		match: '(^punctuation.definition.variable.ruby$)'
		name: 'punctuation.definition.variable.ruby'
	}

	{
		match: '(^punctuation.definition.variable.shell$)'
		name: 'punctuation.definition.variable.shell'
	}

	{
		match: '(^punctuation.definition.variable.yaml$)'
		name: 'punctuation.definition.variable.yaml'
	}

	{
		match: '(^punctuation.other.bracket.round.go$)'
		name: 'punctuation.other.bracket.round.go'
	}

	{
		match: '(^punctuation.other.bracket.square.go$)'
		name: 'punctuation.other.bracket.square.go'
	}

	{
		match: '(^punctuation.other.colon.go$)'
		name: 'punctuation.other.colon.go'
	}

	{
		match: '(^punctuation.other.period.go$)'
		name: 'punctuation.other.period.go'
	}

	{
		match: '(^punctuation.section.arguments.begin.bracket.round.c$)'
		name: 'punctuation.section.arguments.begin.bracket.round.c'
	}

	{
		match: '(^punctuation.section.arguments.end.bracket.round.c$)'
		name: 'punctuation.section.arguments.end.bracket.round.c'
	}

	{
		match: '(^punctuation.section.array.begin.php$)'
		name: 'punctuation.section.array.begin.php'
	}

	{
		match: '(^punctuation.section.array.begin.ruby$)'
		name: 'punctuation.section.array.begin.ruby'
	}

	{
		match: '(^punctuation.section.array.end.php$)'
		name: 'punctuation.section.array.end.php'
	}

	{
		match: '(^punctuation.section.array.end.ruby$)'
		name: 'punctuation.section.array.end.ruby'
	}

	{
		match: '(^punctuation.section.array.shell$)'
		name: 'punctuation.section.array.shell'
	}

	{
		match: '(^punctuation.section.block.begin.bracket.curly.c$)'
		name: 'punctuation.section.block.begin.bracket.curly.c'
	}

	{
		match: '(^punctuation.section.block.begin.bracket.curly.cpp$)'
		name: 'punctuation.section.block.begin.bracket.curly.cpp'
	}

	{
		match: '(^punctuation.section.block.begin.bracket.curly.java$)'
		name: 'punctuation.section.block.begin.bracket.curly.java'
	}

	{
		match: '(^punctuation.section.block.begin.cs$)'
		name: 'punctuation.section.block.begin.cs'
	}

	{
		match: '(^punctuation.section.block.end.bracket.curly.c$)'
		name: 'punctuation.section.block.end.bracket.curly.c'
	}

	{
		match: '(^punctuation.section.block.end.bracket.curly.java$)'
		name: 'punctuation.section.block.end.bracket.curly.java'
	}

	{
		match: '(^punctuation.section.catch.begin.bracket.curly.java$)'
		name: 'punctuation.section.catch.begin.bracket.curly.java'
	}

	{
		match: '(^punctuation.section.class.begin.bracket.curly.java$)'
		name: 'punctuation.section.class.begin.bracket.curly.java'
	}

	{
		match: '(^punctuation.section.class.begin.cs$)'
		name: 'punctuation.section.class.begin.cs'
	}

	{
		match: '(^punctuation.section.class.begin.python$)'
		name: 'punctuation.section.class.begin.python'
	}

	{
		match: '(^punctuation.section.class.end.cs$)'
		name: 'punctuation.section.class.end.cs'
	}

	{
		match: '(^punctuation.section.document.begin.bracket.curly.css$)'
		name: 'punctuation.section.document.begin.bracket.curly.css'
	}

	{
		match: '(^punctuation.section.embedded.begin.erb$)'
		name: 'punctuation.section.embedded.begin.erb'
	}

	{
		match: '(^punctuation.section.embedded.begin.gotemplate$)'
		name: 'punctuation.section.embedded.begin.gotemplate'
	}

	{
		match: '(^punctuation.section.embedded.begin.jsp$)'
		name: 'punctuation.section.embedded.begin.jsp'
	}

	{
		match: '(^punctuation.section.embedded.begin.php$)'
		name: 'punctuation.section.embedded.begin.php'
	}

	{
		match: '(^punctuation.section.embedded.begin.ruby$)'
		name: 'punctuation.section.embedded.begin.ruby'
	}

	{
		match: '(^punctuation.section.embedded.begin.xml$)'
		name: 'punctuation.section.embedded.begin.xml'
	}

	{
		match: '(^punctuation.section.embedded.end.php$)'
		name: 'punctuation.section.embedded.end.php'
	}

	{
		match: '(^punctuation.section.enum.begin.bracket.curly.java$)'
		name: 'punctuation.section.enum.begin.bracket.curly.java'
	}

	{
		match: '(^punctuation.section.enum.begin.cs$)'
		name: 'punctuation.section.enum.begin.cs'
	}

	{
		match: '(^punctuation.section.enum.end.cs$)'
		name: 'punctuation.section.enum.end.cs'
	}

	{
		match: '(^punctuation.section.expression.begin.clojure$)'
		name: 'punctuation.section.expression.begin.clojure'
	}

	{
		match: '(^punctuation.section.expression.end.clojure$)'
		name: 'punctuation.section.expression.end.clojure'
	}

	{
		match: '(^punctuation.section.expression.end.trailing.clojure$)'
		name: 'punctuation.section.expression.end.trailing.clojure'
	}

	{
		match: '(^punctuation.section.finally.begin.bracket.curly.java$)'
		name: 'punctuation.section.finally.begin.bracket.curly.java'
	}

	{
		match: '(^punctuation.section.function.begin.bracket.round.css$)'
		name: 'punctuation.section.function.begin.bracket.round.css'
	}

	{
		match: '(^punctuation.section.function.begin.python$)'
		name: 'punctuation.section.function.begin.python'
	}

	{
		match: '(^punctuation.section.function.css$)'
		name: 'punctuation.section.function.css'
	}

	{
		match: '(^punctuation.section.function.end.bracket.round.css$)'
		name: 'punctuation.section.function.end.bracket.round.css'
	}

	{
		match: '(^punctuation.section.function.ruby$)'
		name: 'punctuation.section.function.ruby'
	}

	{
		match: '(^punctuation.section.function.sass$)'
		name: 'punctuation.section.function.sass'
	}

	{
		match: '(^punctuation.section.function.scss$)'
		name: 'punctuation.section.function.scss'
	}

	{
		match: '(^punctuation.section.inner-class.begin.bracket.curly.java$)'
		name: 'punctuation.section.inner-class.begin.bracket.curly.java'
	}

	{
		match: '(^punctuation.section.keyframes.begin.bracket.curly.css$)'
		name: 'punctuation.section.keyframes.begin.bracket.curly.css'
	}

	{
		match: '(^punctuation.section.keyframes.begin.scss$)'
		name: 'punctuation.section.keyframes.begin.scss'
	}

	{
		match: '(^punctuation.section.keyframes.end.scss$)'
		name: 'punctuation.section.keyframes.end.scss'
	}

	{
		match: '(^punctuation.section.map.begin.clojure$)'
		name: 'punctuation.section.map.begin.clojure'
	}

	{
		match: '(^punctuation.section.map.end.clojure$)'
		name: 'punctuation.section.map.end.clojure'
	}

	{
		match: '(^punctuation.section.media.begin.bracket.curly.css$)'
		name: 'punctuation.section.media.begin.bracket.curly.css'
	}

	{
		match: '(^punctuation.section.metadata.map.begin.clojure$)'
		name: 'punctuation.section.metadata.map.begin.clojure'
	}

	{
		match: '(^punctuation.section.metadata.map.end.clojure$)'
		name: 'punctuation.section.metadata.map.end.clojure'
	}

	{
		match: '(^punctuation.section.method.begin.bracket.curly.java$)'
		name: 'punctuation.section.method.begin.bracket.curly.java'
	}

	{
		match: '(^punctuation.section.namespace.begin.cs$)'
		name: 'punctuation.section.namespace.begin.cs'
	}

	{
		match: '(^punctuation.section.namespace.end.cs$)'
		name: 'punctuation.section.namespace.end.cs'
	}

	{
		match: '(^punctuation.section.parameters.begin.bracket.round.c$)'
		name: 'punctuation.section.parameters.begin.bracket.round.c'
	}

	{
		match: '(^punctuation.section.parameters.end.bracket.round.c$)'
		name: 'punctuation.section.parameters.end.bracket.round.c'
	}

	{
		match: '(^punctuation.section.parens.begin.bracket.round.c$)'
		name: 'punctuation.section.parens.begin.bracket.round.c'
	}

	{
		match: '(^punctuation.section.parens.end.bracket.round.c$)'
		name: 'punctuation.section.parens.end.bracket.round.c'
	}

	{
		match: '(^punctuation.section.property-list.begin.bracket.curly.css$)'
		name: 'punctuation.section.property-list.begin.bracket.curly.css'
	}

	{
		match: '(^punctuation.section.property-list.begin.bracket.curly.scss$)'
		name: 'punctuation.section.property-list.begin.bracket.curly.scss'
	}

	{
		match: '(^punctuation.section.property-list.end.css$)'
		name: 'punctuation.section.property-list.end.css'
	}

	{
		match: '(^punctuation.section.regexp.begin.ruby$)'
		name: 'punctuation.section.regexp.begin.ruby'
	}

	{
		match: '(^punctuation.section.regexp.ruby$)'
		name: 'punctuation.section.regexp.ruby'
	}

	{
		match: '(^punctuation.section.scope.begin.objc$)'
		name: 'punctuation.section.scope.begin.objc'
	}

	{
		match: '(^punctuation.section.scope.begin.ruby$)'
		name: 'punctuation.section.scope.begin.ruby'
	}

	{
		match: '(^punctuation.section.scope.end.java$)'
		name: 'punctuation.section.scope.end.java'
	}

	{
		match: '(^punctuation.section.scope.end.js$)'
		name: 'punctuation.section.scope.end.js'
	}

	{
		match: '(^punctuation.section.scope.end.php$)'
		name: 'punctuation.section.scope.end.php'
	}

	{
		match: '(^punctuation.section.scope.end.ruby$)'
		name: 'punctuation.section.scope.end.ruby'
	}

	{
		match: '(^punctuation.section.scope.perl$)'
		name: 'punctuation.section.scope.perl'
	}

	{
		match: '(^punctuation.section.scope.ruby$)'
		name: 'punctuation.section.scope.ruby'
	}

	{
		match: '(^punctuation.section.set.begin.clojure$)'
		name: 'punctuation.section.set.begin.clojure'
	}

	{
		match: '(^punctuation.section.set.end.clojure$)'
		name: 'punctuation.section.set.end.clojure'
	}

	{
		match: '(^punctuation.section.supports.begin.bracket.curly.css$)'
		name: 'punctuation.section.supports.begin.bracket.curly.css'
	}

	{
		match: '(^punctuation.section.symbol.begin.ruby$)'
		name: 'punctuation.section.symbol.begin.ruby'
	}

	{
		match: '(^punctuation.section.try.begin.bracket.curly.java$)'
		name: 'punctuation.section.try.begin.bracket.curly.java'
	}

	{
		match: '(^punctuation.section.try.resources.begin.bracket.round.java$)'
		name: 'punctuation.section.try.resources.begin.bracket.round.java'
	}

	{
		match: '(^punctuation.section.vector.begin.clojure$)'
		name: 'punctuation.section.vector.begin.clojure'
	}

	{
		match: '(^punctuation.section.vector.end.clojure$)'
		name: 'punctuation.section.vector.end.clojure'
	}

	{
		match: '(^punctuation.separator.arguments.objc$)'
		name: 'punctuation.separator.arguments.objc'
	}

	{
		match: '(^punctuation.separator.classes.php$)'
		name: 'punctuation.separator.classes.php'
	}

	{
		match: '(^punctuation.separator.continuation.objc$)'
		name: 'punctuation.separator.continuation.objc'
	}

	{
		match: '(^punctuation.separator.css$)'
		name: 'punctuation.separator.css'
	}

	{
		match: '(^punctuation.separator.dash.unicode-range.css$)'
		name: 'punctuation.separator.dash.unicode-range.css'
	}

	{
		match: '(^punctuation.separator.delimiter.c$)'
		name: 'punctuation.separator.delimiter.c'
	}

	{
		match: '(^punctuation.separator.delimiter.java$)'
		name: 'punctuation.separator.delimiter.java'
	}

	{
		match: '(^punctuation.separator.delimiter.scss$)'
		name: 'punctuation.separator.delimiter.scss'
	}

	{
		match: '(^punctuation.separator.dictionary.key-value.json$)'
		name: 'punctuation.separator.dictionary.key-value.json'
	}

	{
		match: '(^punctuation.separator.dictionary.pair.json$)'
		name: 'punctuation.separator.dictionary.pair.json'
	}

	{
		match: '(^punctuation.separator.dictionary.python$)'
		name: 'punctuation.separator.dictionary.python'
	}

	{
		match: '(^punctuation.separator.inheritance.php$)'
		name: 'punctuation.separator.inheritance.php'
	}

	{
		match: '(^punctuation.separator.inheritance.python$)'
		name: 'punctuation.separator.inheritance.python'
	}

	{
		match: '(^punctuation.separator.inheritance.ruby$)'
		name: 'punctuation.separator.inheritance.ruby'
	}

	{
		match: '(^punctuation.separator.java$)'
		name: 'punctuation.separator.java'
	}

	{
		match: '(^punctuation.separator.key-value$)'
		name: 'punctuation.separator.key-value'
	}

	{
		match: '(^punctuation.separator.key-value.css$)'
		name: 'punctuation.separator.key-value.css'
	}

	{
		match: '(^punctuation.separator.key-value.gfm$)'
		name: 'punctuation.separator.key-value.gfm'
	}

	{
		match: '(^punctuation.separator.key-value.git-config$)'
		name: 'punctuation.separator.key-value.git-config'
	}

	{
		match: '(^punctuation.separator.key-value.html$)'
		name: 'punctuation.separator.key-value.html'
	}

	{
		match: '(^punctuation.separator.key-value.java-properties$)'
		name: 'punctuation.separator.key-value.java-properties'
	}

	{
		match: '(^punctuation.separator.key-value.jsp$)'
		name: 'punctuation.separator.key-value.jsp'
	}

	{
		match: '(^punctuation.separator.key-value.makefile$)'
		name: 'punctuation.separator.key-value.makefile'
	}

	{
		match: '(^punctuation.separator.key-value.markdown$)'
		name: 'punctuation.separator.key-value.markdown'
	}

	{
		match: '(^punctuation.separator.key-value.scss$)'
		name: 'punctuation.separator.key-value.scss'
	}

	{
		match: '(^punctuation.separator.key-value.xml.plist$)'
		name: 'punctuation.separator.key-value.xml.plist'
	}

	{
		match: '(^punctuation.separator.key-value.yaml$)'
		name: 'punctuation.separator.key-value.yaml'
	}

	{
		match: '(^punctuation.separator.list.comma.css$)'
		name: 'punctuation.separator.list.comma.css'
	}

	{
		match: '(^punctuation.separator.list.python$)'
		name: 'punctuation.separator.list.python'
	}

	{
		match: '(^punctuation.separator.method.ruby$)'
		name: 'punctuation.separator.method.ruby'
	}

	{
		match: '(^punctuation.separator.namespace.access.cpp$)'
		name: 'punctuation.separator.namespace.access.cpp'
	}

	{
		match: '(^punctuation.separator.namespace.ruby$)'
		name: 'punctuation.separator.namespace.ruby'
	}

	{
		match: '(^punctuation.separator.namespace.xml$)'
		name: 'punctuation.separator.namespace.xml'
	}

	{
		match: '(^punctuation.separator.object.ruby$)'
		name: 'punctuation.separator.object.ruby'
	}

	{
		match: '(^punctuation.separator.operator.css$)'
		name: 'punctuation.separator.operator.css'
	}

	{
		match: '(^punctuation.separator.operator.sass$)'
		name: 'punctuation.separator.operator.sass'
	}

	{
		match: '(^punctuation.separator.parameters.c$)'
		name: 'punctuation.separator.parameters.c'
	}

	{
		match: '(^punctuation.separator.parameters.python$)'
		name: 'punctuation.separator.parameters.python'
	}

	{
		match: '(^punctuation.separator.period.java$)'
		name: 'punctuation.separator.period.java'
	}

	{
		match: '(^punctuation.separator.pipe-sign.shell$)'
		name: 'punctuation.separator.pipe-sign.shell'
	}

	{
		match: '(^punctuation.separator.pointer-access.c$)'
		name: 'punctuation.separator.pointer-access.c'
	}

	{
		match: '(^punctuation.separator.prompt.python.console$)'
		name: 'punctuation.separator.prompt.python.console'
	}

	{
		match: '(^punctuation.separator.prompt.shell-session$)'
		name: 'punctuation.separator.prompt.shell-session'
	}

	{
		match: '(^punctuation.separator.statement.ruby$)'
		name: 'punctuation.separator.statement.ruby'
	}

	{
		match: '(^punctuation.separator.types.java$)'
		name: 'punctuation.separator.types.java'
	}

	{
		match: '(^punctuation.separator.valuepair.dictionary.python$)'
		name: 'punctuation.separator.valuepair.dictionary.python'
	}

	{
		match: '(^punctuation.separator.variable.ruby$)'
		name: 'punctuation.separator.variable.ruby'
	}

	{
		match: '(^punctuation.storage.type.modifier.cs$)'
		name: 'punctuation.storage.type.modifier.cs'
	}

	{
		match: '(^punctuation.terminator.expression.php$)'
		name: 'punctuation.terminator.expression.php'
	}

	{
		match: '(^punctuation.terminator.go$)'
		name: 'punctuation.terminator.go'
	}

	{
		match: '(^punctuation.terminator.java$)'
		name: 'punctuation.terminator.java'
	}

	{
		match: '(^punctuation.terminator.rule.css$)'
		name: 'punctuation.terminator.rule.css'
	}

	{
		match: '(^punctuation.terminator.rule.scss$)'
		name: 'punctuation.terminator.rule.scss'
	}

	{
		match: '(^punctuation.terminator.statement.c$)'
		name: 'punctuation.terminator.statement.c'
	}

	{
		match: '(^punctuation.terminator.statement.coffee$)'
		name: 'punctuation.terminator.statement.coffee'
	}

	{
		match: '(^punctuation.terminator.statement.js$)'
		name: 'punctuation.terminator.statement.js'
	}

	{
		match: '(^punctuation.vararg-ellipses.c$)'
		name: 'punctuation.vararg-ellipses.c'
	}

	{
		match: '(^punctuation.whitespace.comment.leading.cpp$)'
		name: 'punctuation.whitespace.comment.leading.cpp'
	}

	{
		match: '(^punctuation.whitespace.comment.leading.erb$)'
		name: 'punctuation.whitespace.comment.leading.erb'
	}

	{
		match: '(^punctuation.whitespace.comment.leading.git-commit$)'
		name: 'punctuation.whitespace.comment.leading.git-commit'
	}

	{
		match: '(^punctuation.whitespace.comment.leading.java$)'
		name: 'punctuation.whitespace.comment.leading.java'
	}

	{
		match: '(^punctuation.whitespace.comment.leading.java-properties$)'
		name: 'punctuation.whitespace.comment.leading.java-properties'
	}

	{
		match: '(^punctuation.whitespace.comment.leading.less$)'
		name: 'punctuation.whitespace.comment.leading.less'
	}

	{
		match: '(^punctuation.whitespace.comment.leading.makefile$)'
		name: 'punctuation.whitespace.comment.leading.makefile'
	}

	{
		match: '(^punctuation.whitespace.comment.leading.objc$)'
		name: 'punctuation.whitespace.comment.leading.objc'
	}

	{
		match: '(^punctuation.whitespace.comment.leading.perl$)'
		name: 'punctuation.whitespace.comment.leading.perl'
	}

	{
		match: '(^punctuation.whitespace.comment.leading.perl6$)'
		name: 'punctuation.whitespace.comment.leading.perl6'
	}

	{
		match: '(^punctuation.whitespace.comment.leading.php$)'
		name: 'punctuation.whitespace.comment.leading.php'
	}

	{
		match: '(^punctuation.whitespace.comment.leading.plist$)'
		name: 'punctuation.whitespace.comment.leading.plist'
	}

	{
		match: '(^punctuation.whitespace.comment.leading.python$)'
		name: 'punctuation.whitespace.comment.leading.python'
	}

	{
		match: '(^punctuation.whitespace.comment.leading.ruby$)'
		name: 'punctuation.whitespace.comment.leading.ruby'
	}

	{
		match: '(^punctuation.whitespace.comment.leading.shell$)'
		name: 'punctuation.whitespace.comment.leading.shell'
	}

	{
		match: '(^punctuation.whitespace.comment.leading.sql$)'
		name: 'punctuation.whitespace.comment.leading.sql'
	}

	{
		match: '(^punctuation.whitespace.comment.trailing.erb$)'
		name: 'punctuation.whitespace.comment.trailing.erb'
	}

	{
		match: '(^punctuation.whitespace.embedded.leading.erb$)'
		name: 'punctuation.whitespace.embedded.leading.erb'
	}

	{
		match: '(^punctuation.whitespace.embedded.leading.php$)'
		name: 'punctuation.whitespace.embedded.leading.php'
	}

	{
		match: '(^punctuation.whitespace.embedded.trailing.erb$)'
		name: 'punctuation.whitespace.embedded.trailing.erb'
	}

	{
		match: '(^punctuation.whitespace.embedded.trailing.php$)'
		name: 'punctuation.whitespace.embedded.trailing.php'
	}

	{
		match: '(^punctuation.whitespace.support.function.cocoa.leopard$)'
		name: 'punctuation.whitespace.support.function.cocoa.leopard'
	}

	{
		match: '(^routine.name.perl6$)'
		name: 'routine.name.perl6'
	}

	{
		match: '(^source.coffee.embedded.source$)'
		name: 'source.coffee.embedded.source'
	}

	{
		match: '(^source.css.embedded.html$)'
		name: 'source.css.embedded.html'
	}

	{
		match: '(^source.java$)'
		name: 'source.java'
	}

	{
		match: '(^source.java-props.embedded.xml$)'
		name: 'source.java-props.embedded.xml'
	}

	{
		match: '(^source.java.embedded.xml$)'
		name: 'source.java.embedded.xml'
	}

	{
		match: '(^source.js.embedded.source$)'
		name: 'source.js.embedded.source'
	}

	{
		match: '(^source.php$)'
		name: 'source.php'
	}

	{
		match: '(^source.python.embedded.html$)'
		name: 'source.python.embedded.html'
	}

	{
		match: '(^source.ruby$)'
		name: 'source.ruby'
	}

	{
		match: '(^source.ruby.rails$)'
		name: 'source.ruby.rails'
	}

	{
		match: '(^source.ruby.rails.embedded.html$)'
		name: 'source.ruby.rails.embedded.html'
	}

	{
		match: '(^source.ruby.rails.embedded.sql$)'
		name: 'source.ruby.rails.embedded.sql'
	}

	{
		match: '(^source.shell$)'
		name: 'source.shell'
	}

	{
		match: '(^source.smarty.embedded.html$)'
		name: 'source.smarty.embedded.html'
	}

	{
		match: '(^storage.control.clojure$)'
		name: 'storage.control.clojure'
	}

	{
		match: '(^storage.modifier.cpp$)'
		name: 'storage.modifier.cpp'
	}

	{
		match: '(^storage.modifier.cs$)'
		name: 'storage.modifier.cs'
	}

	{
		match: '(^storage.modifier.extends.java$)'
		name: 'storage.modifier.extends.java'
	}

	{
		match: '(^storage.modifier.extends.php$)'
		name: 'storage.modifier.extends.php'
	}

	{
		match: '(^storage.modifier.generator.js$)'
		name: 'storage.modifier.generator.js'
	}

	{
		match: '(^storage.modifier.global.python$)'
		name: 'storage.modifier.global.python'
	}

	{
		match: '(^storage.modifier.ignore-case.css$)'
		name: 'storage.modifier.ignore-case.css'
	}

	{
		match: '(^storage.modifier.implements.java$)'
		name: 'storage.modifier.implements.java'
	}

	{
		match: '(^storage.modifier.implements.php$)'
		name: 'storage.modifier.implements.php'
	}

	{
		match: '(^storage.modifier.java$)'
		name: 'storage.modifier.java'
	}

	{
		match: '(^storage.modifier.js$)'
		name: 'storage.modifier.js'
	}

	{
		match: '(^storage.modifier.nonlocal.python$)'
		name: 'storage.modifier.nonlocal.python'
	}

	{
		match: '(^storage.modifier.objc$)'
		name: 'storage.modifier.objc'
	}

	{
		match: '(^storage.modifier.perl$)'
		name: 'storage.modifier.perl'
	}

	{
		match: '(^storage.modifier.perl6$)'
		name: 'storage.modifier.perl6'
	}

	{
		match: '(^storage.modifier.php$)'
		name: 'storage.modifier.php'
	}

	{
		match: '(^storage.modifier.protocol.objc$)'
		name: 'storage.modifier.protocol.objc'
	}

	{
		match: '(^storage.modifier.reference.php$)'
		name: 'storage.modifier.reference.php'
	}

	{
		match: '(^storage.modifier.shell$)'
		name: 'storage.modifier.shell'
	}

	{
		match: '(^storage.modifier.sql$)'
		name: 'storage.modifier.sql'
	}

	{
		match: '(^storage.modifier.type.constraints.perl6$)'
		name: 'storage.modifier.type.constraints.perl6'
	}

	{
		match: '(^storage.type.annotation.coffee$)'
		name: 'storage.type.annotation.coffee'
	}

	{
		match: '(^storage.type.annotation.java$)'
		name: 'storage.type.annotation.java'
	}

	{
		match: '(^storage.type.byte.go$)'
		name: 'storage.type.byte.go'
	}

	{
		match: '(^storage.type.c$)'
		name: 'storage.type.c'
	}

	{
		match: '(^storage.type.class.coffee$)'
		name: 'storage.type.class.coffee'
	}

	{
		match: '(^storage.type.class.jsdoc$)'
		name: 'storage.type.class.jsdoc'
	}

	{
		match: '(^storage.type.class.perl6$)'
		name: 'storage.type.class.perl6'
	}

	{
		match: '(^storage.type.class.php$)'
		name: 'storage.type.class.php'
	}

	{
		match: '(^storage.type.class.pod.perl$)'
		name: 'storage.type.class.pod.perl'
	}

	{
		match: '(^storage.type.class.python$)'
		name: 'storage.type.class.python'
	}

	{
		match: '(^storage.type.class.radar$)'
		name: 'storage.type.class.radar'
	}

	{
		match: '(^storage.type.const.js$)'
		name: 'storage.type.const.js'
	}

	{
		match: '(^storage.type.const.php$)'
		name: 'storage.type.const.php'
	}

	{
		match: '(^storage.type.cpp$)'
		name: 'storage.type.cpp'
	}

	{
		match: '(^storage.type.cs$)'
		name: 'storage.type.cs'
	}

	{
		match: '(^storage.type.declare.routine.perl6$)'
		name: 'storage.type.declare.routine.perl6'
	}

	{
		match: '(^storage.type.error.go$)'
		name: 'storage.type.error.go'
	}

	{
		match: '(^storage.type.function.arrow.java$)'
		name: 'storage.type.function.arrow.java'
	}

	{
		match: '(^storage.type.function.arrow.js$)'
		name: 'storage.type.function.arrow.js'
	}

	{
		match: '(^storage.type.function.coffee$)'
		name: 'storage.type.function.coffee'
	}

	{
		match: '(^storage.type.function.inline.python$)'
		name: 'storage.type.function.inline.python'
	}

	{
		match: '(^storage.type.function.js$)'
		name: 'storage.type.function.js'
	}

	{
		match: '(^storage.type.function.php$)'
		name: 'storage.type.function.php'
	}

	{
		match: '(^storage.type.function.python$)'
		name: 'storage.type.function.python'
	}

	{
		match: '(^storage.type.generic.wildcard.java$)'
		name: 'storage.type.generic.wildcard.java'
	}

	{
		match: '(^storage.type.id.objc$)'
		name: 'storage.type.id.objc'
	}

	{
		match: '(^storage.type.java$)'
		name: 'storage.type.java'
	}

	{
		match: '(^storage.type.js$)'
		name: 'storage.type.js'
	}

	{
		match: '(^storage.type.method.perl$)'
		name: 'storage.type.method.perl'
	}

	{
		match: '(^storage.type.modifier.cpp$)'
		name: 'storage.type.modifier.cpp'
	}

	{
		match: '(^storage.type.objc$)'
		name: 'storage.type.objc'
	}

	{
		match: '(^storage.type.object.array.java$)'
		name: 'storage.type.object.array.java'
	}

	{
		match: '(^storage.type.php$)'
		name: 'storage.type.php'
	}

	{
		match: '(^storage.type.primitive.array.java$)'
		name: 'storage.type.primitive.array.java'
	}

	{
		match: '(^storage.type.primitive.java$)'
		name: 'storage.type.primitive.java'
	}

	{
		match: '(^storage.type.rune.go$)'
		name: 'storage.type.rune.go'
	}

	{
		match: '(^storage.type.sql$)'
		name: 'storage.type.sql'
	}

	{
		match: '(^storage.type.string.go$)'
		name: 'storage.type.string.go'
	}

	{
		match: '(^storage.type.sub.perl$)'
		name: 'storage.type.sub.perl'
	}

	{
		match: '(^storage.type.template.cpp$)'
		name: 'storage.type.template.cpp'
	}

	{
		match: '(^storage.type.uintptr.go$)'
		name: 'storage.type.uintptr.go'
	}

	{
		match: '(^storage.type.var.js$)'
		name: 'storage.type.var.js'
	}

	{
		match: '(^storage.type.variable.perl6$)'
		name: 'storage.type.variable.perl6'
	}

	{
		match: '(^string.emoji.end.gfm$)'
		name: 'string.emoji.end.gfm'
	}

	{
		match: '(^string.emoji.start.gfm$)'
		name: 'string.emoji.start.gfm'
	}

	{
		match: '(^string.emoji.word.gfm$)'
		name: 'string.emoji.word.gfm'
	}

	{
		match: '(^string.interpolated.backtick.makefile$)'
		name: 'string.interpolated.backtick.makefile'
	}

	{
		match: '(^string.interpolated.backtick.shell$)'
		name: 'string.interpolated.backtick.shell'
	}

	{
		match: '(^string.interpolated.dollar.shell$)'
		name: 'string.interpolated.dollar.shell'
	}

	{
		match: '(^string.interpolated.makefile$)'
		name: 'string.interpolated.makefile'
	}

	{
		match: '(^string.interpolated.perl$)'
		name: 'string.interpolated.perl'
	}

	{
		match: '(^string.interpolated.php$)'
		name: 'string.interpolated.php'
	}

	{
		match: '(^string.interpolated.process-substitution.shell$)'
		name: 'string.interpolated.process-substitution.shell'
	}

	{
		match: '(^string.interpolated.qx-brace.perl$)'
		name: 'string.interpolated.qx-brace.perl'
	}

	{
		match: '(^string.interpolated.qx-bracket.perl$)'
		name: 'string.interpolated.qx-bracket.perl'
	}

	{
		match: '(^string.interpolated.qx-ltgt.perl$)'
		name: 'string.interpolated.qx-ltgt.perl'
	}

	{
		match: '(^string.interpolated.qx-paren.perl$)'
		name: 'string.interpolated.qx-paren.perl'
	}

	{
		match: '(^string.interpolated.qx.perl$)'
		name: 'string.interpolated.qx.perl'
	}

	{
		match: '(^string.interpolated.qx.single-quote.perl$)'
		name: 'string.interpolated.qx.single-quote.perl'
	}

	{
		match: '(^string.interpolated.ruby$)'
		name: 'string.interpolated.ruby'
	}

	{
		match: '(^string.interpolated.sql$)'
		name: 'string.interpolated.sql'
	}

	{
		match: '(^string.interpolated.yaml$)'
		name: 'string.interpolated.yaml'
	}

	{
		match: '(^string.issue.number.gfm$)'
		name: 'string.issue.number.gfm'
	}

	{
		match: '(^string.other.link.description.markdown$)'
		name: 'string.other.link.description.markdown'
	}

	{
		match: '(^string.other.link.description.title.markdown$)'
		name: 'string.other.link.description.title.markdown'
	}

	{
		match: '(^string.other.link.title.markdown$)'
		name: 'string.other.link.title.markdown'
	}

	{
		match: '(^string.other.math.shell$)'
		name: 'string.other.math.shell'
	}

	{
		match: '(^string.other.quoted.brackets.sql$)'
		name: 'string.other.quoted.brackets.sql'
	}

	{
		match: '(^string.python.traceback$)'
		name: 'string.python.traceback'
	}

	{
		match: '(^string.quoted.double.attribute-value.css$)'
		name: 'string.quoted.double.attribute-value.css'
	}

	{
		match: '(^string.quoted.double.attribute-value.sass$)'
		name: 'string.quoted.double.attribute-value.sass'
	}

	{
		match: '(^string.quoted.double.attribute-value.scss$)'
		name: 'string.quoted.double.attribute-value.scss'
	}

	{
		match: '(^string.quoted.double.block.python$)'
		name: 'string.quoted.double.block.python'
	}

	{
		match: '(^string.quoted.double.block.raw-regex.python$)'
		name: 'string.quoted.double.block.raw-regex.python'
	}

	{
		match: '(^string.quoted.double.block.raw.python$)'
		name: 'string.quoted.double.block.raw.python'
	}

	{
		match: '(^string.quoted.double.block.sql.python$)'
		name: 'string.quoted.double.block.sql.python'
	}

	{
		match: '(^string.quoted.double.block.toml$)'
		name: 'string.quoted.double.block.toml'
	}

	{
		match: '(^string.quoted.double.block.unicode-raw-regex.python$)'
		name: 'string.quoted.double.block.unicode-raw-regex.python'
	}

	{
		match: '(^string.quoted.double.block.unicode-raw.python$)'
		name: 'string.quoted.double.block.unicode-raw.python'
	}

	{
		match: '(^string.quoted.double.block.unicode.python$)'
		name: 'string.quoted.double.block.unicode.python'
	}

	{
		match: '(^string.quoted.double.c$)'
		name: 'string.quoted.double.c'
	}

	{
		match: '(^string.quoted.double.clojure$)'
		name: 'string.quoted.double.clojure'
	}

	{
		match: '(^string.quoted.double.coffee$)'
		name: 'string.quoted.double.coffee'
	}

	{
		match: '(^string.quoted.double.cpp$)'
		name: 'string.quoted.double.cpp'
	}

	{
		match: '(^string.quoted.double.cs$)'
		name: 'string.quoted.double.cs'
	}

	{
		match: '(^string.quoted.double.css$)'
		name: 'string.quoted.double.css'
	}

	{
		match: '(^string.quoted.double.doctype.identifiers-and-DTDs.html$)'
		name: 'string.quoted.double.doctype.identifiers-and-DTDs.html'
	}

	{
		match: '(^string.quoted.double.git-config$)'
		name: 'string.quoted.double.git-config'
	}

	{
		match: '(^string.quoted.double.go$)'
		name: 'string.quoted.double.go'
	}

	{
		match: '(^string.quoted.double.gotemplate$)'
		name: 'string.quoted.double.gotemplate'
	}

	{
		match: '(^string.quoted.double.heredoc.angle.perl6$)'
		name: 'string.quoted.double.heredoc.angle.perl6'
	}

	{
		match: '(^string.quoted.double.heredoc.brace.perl6$)'
		name: 'string.quoted.double.heredoc.brace.perl6'
	}

	{
		match: '(^string.quoted.double.heredoc.bracket.perl6$)'
		name: 'string.quoted.double.heredoc.bracket.perl6'
	}

	{
		match: '(^string.quoted.double.heredoc.coffee$)'
		name: 'string.quoted.double.heredoc.coffee'
	}

	{
		match: '(^string.quoted.double.heredoc.paren.perl6$)'
		name: 'string.quoted.double.heredoc.paren.perl6'
	}

	{
		match: '(^string.quoted.double.html$)'
		name: 'string.quoted.double.html'
	}

	{
		match: '(^string.quoted.double.include.c$)'
		name: 'string.quoted.double.include.c'
	}

	{
		match: '(^string.quoted.double.interpolated.ruby$)'
		name: 'string.quoted.double.interpolated.ruby'
	}

	{
		match: '(^string.quoted.double.java$)'
		name: 'string.quoted.double.java'
	}

	{
		match: '(^string.quoted.double.js$)'
		name: 'string.quoted.double.js'
	}

	{
		match: '(^string.quoted.double.json$)'
		name: 'string.quoted.double.json'
	}

	{
		match: '(^string.quoted.double.jsp$)'
		name: 'string.quoted.double.jsp'
	}

	{
		match: '(^string.quoted.double.literal.cs$)'
		name: 'string.quoted.double.literal.cs'
	}

	{
		match: '(^string.quoted.double.nant$)'
		name: 'string.quoted.double.nant'
	}

	{
		match: '(^string.quoted.double.objc$)'
		name: 'string.quoted.double.objc'
	}

	{
		match: '(^string.quoted.double.perl$)'
		name: 'string.quoted.double.perl'
	}

	{
		match: '(^string.quoted.double.perl6$)'
		name: 'string.quoted.double.perl6'
	}

	{
		match: '(^string.quoted.double.php$)'
		name: 'string.quoted.double.php'
	}

	{
		match: '(^string.quoted.double.plist$)'
		name: 'string.quoted.double.plist'
	}

	{
		match: '(^string.quoted.double.raw.cpp$)'
		name: 'string.quoted.double.raw.cpp'
	}

	{
		match: '(^string.quoted.double.sass$)'
		name: 'string.quoted.double.sass'
	}

	{
		match: '(^string.quoted.double.scss$)'
		name: 'string.quoted.double.scss'
	}

	{
		match: '(^string.quoted.double.shell$)'
		name: 'string.quoted.double.shell'
	}

	{
		match: '(^string.quoted.double.single-line.python$)'
		name: 'string.quoted.double.single-line.python'
	}

	{
		match: '(^string.quoted.double.single-line.raw-regex.python$)'
		name: 'string.quoted.double.single-line.raw-regex.python'
	}

	{
		match: '(^string.quoted.double.single-line.raw.python$)'
		name: 'string.quoted.double.single-line.raw.python'
	}

	{
		match: '(^string.quoted.double.single-line.sql.python$)'
		name: 'string.quoted.double.single-line.sql.python'
	}

	{
		match: '(^string.quoted.double.single-line.unicode-raw-regex.python$)'
		name: 'string.quoted.double.single-line.unicode-raw-regex.python'
	}

	{
		match: '(^string.quoted.double.single-line.unicode-raw.python$)'
		name: 'string.quoted.double.single-line.unicode-raw.python'
	}

	{
		match: '(^string.quoted.double.single-line.unicode.python$)'
		name: 'string.quoted.double.single-line.unicode.python'
	}

	{
		match: '(^string.quoted.double.sql$)'
		name: 'string.quoted.double.sql'
	}

	{
		match: '(^string.quoted.double.sql.php$)'
		name: 'string.quoted.double.sql.php'
	}

	{
		match: '(^string.quoted.double.strings$)'
		name: 'string.quoted.double.strings'
	}

	{
		match: '(^string.quoted.double.toml$)'
		name: 'string.quoted.double.toml'
	}

	{
		match: '(^string.quoted.double.unclosed.sql$)'
		name: 'string.quoted.double.unclosed.sql'
	}

	{
		match: '(^string.quoted.double.xml$)'
		name: 'string.quoted.double.xml'
	}

	{
		match: '(^string.quoted.double.xml.plist$)'
		name: 'string.quoted.double.xml.plist'
	}

	{
		match: '(^string.quoted.double.yaml$)'
		name: 'string.quoted.double.yaml'
	}

	{
		match: '(^string.quoted.heredoc.coffee$)'
		name: 'string.quoted.heredoc.coffee'
	}

	{
		match: '(^string.quoted.other.backtick.sql$)'
		name: 'string.quoted.other.backtick.sql'
	}

	{
		match: '(^string.quoted.other.backtick.unclosed.sql$)'
		name: 'string.quoted.other.backtick.unclosed.sql'
	}

	{
		match: '(^string.quoted.other.interpolated.ruby$)'
		name: 'string.quoted.other.interpolated.ruby'
	}

	{
		match: '(^string.quoted.other.lt-gt.include.c$)'
		name: 'string.quoted.other.lt-gt.include.c'
	}

	{
		match: '(^string.quoted.other.q-brace.perl$)'
		name: 'string.quoted.other.q-brace.perl'
	}

	{
		match: '(^string.quoted.other.q-bracket.perl$)'
		name: 'string.quoted.other.q-bracket.perl'
	}

	{
		match: '(^string.quoted.other.q-ltgt.perl$)'
		name: 'string.quoted.other.q-ltgt.perl'
	}

	{
		match: '(^string.quoted.other.q-paren.perl$)'
		name: 'string.quoted.other.q-paren.perl'
	}

	{
		match: '(^string.quoted.other.q.perl$)'
		name: 'string.quoted.other.q.perl'
	}

	{
		match: '(^string.quoted.other.qq-brace.perl$)'
		name: 'string.quoted.other.qq-brace.perl'
	}

	{
		match: '(^string.quoted.other.qq-bracket.perl$)'
		name: 'string.quoted.other.qq-bracket.perl'
	}

	{
		match: '(^string.quoted.other.qq-ltgt.perl$)'
		name: 'string.quoted.other.qq-ltgt.perl'
	}

	{
		match: '(^string.quoted.other.qq-paren.perl$)'
		name: 'string.quoted.other.qq-paren.perl'
	}

	{
		match: '(^string.quoted.other.qq.perl$)'
		name: 'string.quoted.other.qq.perl'
	}

	{
		match: '(^string.quoted.other.ruby$)'
		name: 'string.quoted.other.ruby'
	}

	{
		match: '(^string.quoted.raw.go$)'
		name: 'string.quoted.raw.go'
	}

	{
		match: '(^string.quoted.raw.gotemplate$)'
		name: 'string.quoted.raw.gotemplate'
	}

	{
		match: '(^string.quoted.script.coffee$)'
		name: 'string.quoted.script.coffee'
	}

	{
		match: '(^string.quoted.single.attribute-value.scss$)'
		name: 'string.quoted.single.attribute-value.scss'
	}

	{
		match: '(^string.quoted.single.block.python$)'
		name: 'string.quoted.single.block.python'
	}

	{
		match: '(^string.quoted.single.block.raw-regex.python$)'
		name: 'string.quoted.single.block.raw-regex.python'
	}

	{
		match: '(^string.quoted.single.block.raw.python$)'
		name: 'string.quoted.single.block.raw.python'
	}

	{
		match: '(^string.quoted.single.block.sql.python$)'
		name: 'string.quoted.single.block.sql.python'
	}

	{
		match: '(^string.quoted.single.block.toml$)'
		name: 'string.quoted.single.block.toml'
	}

	{
		match: '(^string.quoted.single.block.unicode-raw-regex.python$)'
		name: 'string.quoted.single.block.unicode-raw-regex.python'
	}

	{
		match: '(^string.quoted.single.block.unicode-raw.python$)'
		name: 'string.quoted.single.block.unicode-raw.python'
	}

	{
		match: '(^string.quoted.single.block.unicode.python$)'
		name: 'string.quoted.single.block.unicode.python'
	}

	{
		match: '(^string.quoted.single.c$)'
		name: 'string.quoted.single.c'
	}

	{
		match: '(^string.quoted.single.coffee$)'
		name: 'string.quoted.single.coffee'
	}

	{
		match: '(^string.quoted.single.cs$)'
		name: 'string.quoted.single.cs'
	}

	{
		match: '(^string.quoted.single.css$)'
		name: 'string.quoted.single.css'
	}

	{
		match: '(^string.quoted.single.dollar.shell$)'
		name: 'string.quoted.single.dollar.shell'
	}

	{
		match: '(^string.quoted.single.heredoc.angle.perl6$)'
		name: 'string.quoted.single.heredoc.angle.perl6'
	}

	{
		match: '(^string.quoted.single.heredoc.brace.perl6$)'
		name: 'string.quoted.single.heredoc.brace.perl6'
	}

	{
		match: '(^string.quoted.single.heredoc.bracket.perl6$)'
		name: 'string.quoted.single.heredoc.bracket.perl6'
	}

	{
		match: '(^string.quoted.single.heredoc.double.perl6$)'
		name: 'string.quoted.single.heredoc.double.perl6'
	}

	{
		match: '(^string.quoted.single.heredoc.paren.perl6$)'
		name: 'string.quoted.single.heredoc.paren.perl6'
	}

	{
		match: '(^string.quoted.single.heredoc.perl6$)'
		name: 'string.quoted.single.heredoc.perl6'
	}

	{
		match: '(^string.quoted.single.heredoc.single.perl6$)'
		name: 'string.quoted.single.heredoc.single.perl6'
	}

	{
		match: '(^string.quoted.single.heredoc.slash.perl6$)'
		name: 'string.quoted.single.heredoc.slash.perl6'
	}

	{
		match: '(^string.quoted.single.html$)'
		name: 'string.quoted.single.html'
	}

	{
		match: '(^string.quoted.single.java$)'
		name: 'string.quoted.single.java'
	}

	{
		match: '(^string.quoted.single.js$)'
		name: 'string.quoted.single.js'
	}

	{
		match: '(^string.quoted.single.nant$)'
		name: 'string.quoted.single.nant'
	}

	{
		match: '(^string.quoted.single.perl$)'
		name: 'string.quoted.single.perl'
	}

	{
		match: '(^string.quoted.single.perl6$)'
		name: 'string.quoted.single.perl6'
	}

	{
		match: '(^string.quoted.single.php$)'
		name: 'string.quoted.single.php'
	}

	{
		match: '(^string.quoted.single.plist$)'
		name: 'string.quoted.single.plist'
	}

	{
		match: '(^string.quoted.single.ruby$)'
		name: 'string.quoted.single.ruby'
	}

	{
		match: '(^string.quoted.single.sass$)'
		name: 'string.quoted.single.sass'
	}

	{
		match: '(^string.quoted.single.scss$)'
		name: 'string.quoted.single.scss'
	}

	{
		match: '(^string.quoted.single.shell$)'
		name: 'string.quoted.single.shell'
	}

	{
		match: '(^string.quoted.single.single-line.python$)'
		name: 'string.quoted.single.single-line.python'
	}

	{
		match: '(^string.quoted.single.single-line.raw-regex.python$)'
		name: 'string.quoted.single.single-line.raw-regex.python'
	}

	{
		match: '(^string.quoted.single.single-line.raw.python$)'
		name: 'string.quoted.single.single-line.raw.python'
	}

	{
		match: '(^string.quoted.single.single-line.unicode-raw-regex.python$)'
		name: 'string.quoted.single.single-line.unicode-raw-regex.python'
	}

	{
		match: '(^string.quoted.single.single-line.unicode-raw.python$)'
		name: 'string.quoted.single.single-line.unicode-raw.python'
	}

	{
		match: '(^string.quoted.single.single-line.unicode.python$)'
		name: 'string.quoted.single.single-line.unicode.python'
	}

	{
		match: '(^string.quoted.single.sql$)'
		name: 'string.quoted.single.sql'
	}

	{
		match: '(^string.quoted.single.sql.php$)'
		name: 'string.quoted.single.sql.php'
	}

	{
		match: '(^string.quoted.single.toml$)'
		name: 'string.quoted.single.toml'
	}

	{
		match: '(^string.quoted.single.unclosed.sql$)'
		name: 'string.quoted.single.unclosed.sql'
	}

	{
		match: '(^string.quoted.single.xml$)'
		name: 'string.quoted.single.xml'
	}

	{
		match: '(^string.quoted.single.xml.plist$)'
		name: 'string.quoted.single.xml.plist'
	}

	{
		match: '(^string.quoted.single.yaml$)'
		name: 'string.quoted.single.yaml'
	}

	{
		match: '(^string.quoted.template.graphql.js$)'
		name: 'string.quoted.template.graphql.js'
	}

	{
		match: '(^string.quoted.template.html.js$)'
		name: 'string.quoted.template.html.js'
	}

	{
		match: '(^string.quoted.template.js$)'
		name: 'string.quoted.template.js'
	}

	{
		match: '(^string.quoted.template.sql.js$)'
		name: 'string.quoted.template.sql.js'
	}

	{
		match: '(^string.regexp.arbitrary-repetition.php$)'
		name: 'string.regexp.arbitrary-repetition.php'
	}

	{
		match: '(^string.regexp.arbitrary-repetition.ruby$)'
		name: 'string.regexp.arbitrary-repetition.ruby'
	}

	{
		match: '(^string.regexp.arbitrary-repitition.php$)'
		name: 'string.regexp.arbitrary-repitition.php'
	}

	{
		match: '(^string.regexp.character-class.php$)'
		name: 'string.regexp.character-class.php'
	}

	{
		match: '(^string.regexp.character-class.ruby$)'
		name: 'string.regexp.character-class.ruby'
	}

	{
		match: '(^string.regexp.clojure$)'
		name: 'string.regexp.clojure'
	}

	{
		match: '(^string.regexp.coffee$)'
		name: 'string.regexp.coffee'
	}

	{
		match: '(^string.regexp.compile.nested_braces.perl$)'
		name: 'string.regexp.compile.nested_braces.perl'
	}

	{
		match: '(^string.regexp.compile.nested_brackets.perl$)'
		name: 'string.regexp.compile.nested_brackets.perl'
	}

	{
		match: '(^string.regexp.compile.nested_ltgt.perl$)'
		name: 'string.regexp.compile.nested_ltgt.perl'
	}

	{
		match: '(^string.regexp.compile.nested_parens.perl$)'
		name: 'string.regexp.compile.nested_parens.perl'
	}

	{
		match: '(^string.regexp.compile.simple-delimiter.perl$)'
		name: 'string.regexp.compile.simple-delimiter.perl'
	}

	{
		match: '(^string.regexp.compile.single-quote.perl$)'
		name: 'string.regexp.compile.single-quote.perl'
	}

	{
		match: '(^string.regexp.double-quoted.php$)'
		name: 'string.regexp.double-quoted.php'
	}

	{
		match: '(^string.regexp.find-m.nested_braces.perl$)'
		name: 'string.regexp.find-m.nested_braces.perl'
	}

	{
		match: '(^string.regexp.find-m.nested_brackets.perl$)'
		name: 'string.regexp.find-m.nested_brackets.perl'
	}

	{
		match: '(^string.regexp.find-m.nested_ltgt.perl$)'
		name: 'string.regexp.find-m.nested_ltgt.perl'
	}

	{
		match: '(^string.regexp.find-m.nested_parens.perl$)'
		name: 'string.regexp.find-m.nested_parens.perl'
	}

	{
		match: '(^string.regexp.find-m.simple-delimiter.perl$)'
		name: 'string.regexp.find-m.simple-delimiter.perl'
	}

	{
		match: '(^string.regexp.find-m.single-quote.perl$)'
		name: 'string.regexp.find-m.single-quote.perl'
	}

	{
		match: '(^string.regexp.format.nested_braces.perl$)'
		name: 'string.regexp.format.nested_braces.perl'
	}

	{
		match: '(^string.regexp.format.nested_brackets.perl$)'
		name: 'string.regexp.format.nested_brackets.perl'
	}

	{
		match: '(^string.regexp.format.nested_ltgt.perl$)'
		name: 'string.regexp.format.nested_ltgt.perl'
	}

	{
		match: '(^string.regexp.format.nested_parens.perl$)'
		name: 'string.regexp.format.nested_parens.perl'
	}

	{
		match: '(^string.regexp.format.simple_delimiter.perl$)'
		name: 'string.regexp.format.simple_delimiter.perl'
	}

	{
		match: '(^string.regexp.format.single_quote.perl$)'
		name: 'string.regexp.format.single_quote.perl'
	}

	{
		match: '(^string.regexp.group.ruby$)'
		name: 'string.regexp.group.ruby'
	}

	{
		match: '(^string.regexp.interpolated.ruby$)'
		name: 'string.regexp.interpolated.ruby'
	}

	{
		match: '(^string.regexp.js$)'
		name: 'string.regexp.js'
	}

	{
		match: '(^string.regexp.modr.sql$)'
		name: 'string.regexp.modr.sql'
	}

	{
		match: '(^string.regexp.nested_braces.perl$)'
		name: 'string.regexp.nested_braces.perl'
	}

	{
		match: '(^string.regexp.nested_brackets.perl$)'
		name: 'string.regexp.nested_brackets.perl'
	}

	{
		match: '(^string.regexp.nested_ltgt.perl$)'
		name: 'string.regexp.nested_ltgt.perl'
	}

	{
		match: '(^string.regexp.nested_parens.perl$)'
		name: 'string.regexp.nested_parens.perl'
	}

	{
		match: '(^string.regexp.replace.extended.simple_delimiter.perl$)'
		name: 'string.regexp.replace.extended.simple_delimiter.perl'
	}

	{
		match: '(^string.regexp.replace.perl$)'
		name: 'string.regexp.replace.perl'
	}

	{
		match: '(^string.regexp.replaceXXX.format.simple_delimiter.perl$)'
		name: 'string.regexp.replaceXXX.format.simple_delimiter.perl'
	}

	{
		match: '(^string.regexp.replaceXXX.format.single_quote.perl$)'
		name: 'string.regexp.replaceXXX.format.single_quote.perl'
	}

	{
		match: '(^string.regexp.replaceXXX.simple_delimiter.perl$)'
		name: 'string.regexp.replaceXXX.simple_delimiter.perl'
	}

	{
		match: '(^string.regexp.single-quoted.php$)'
		name: 'string.regexp.single-quoted.php'
	}

	{
		match: '(^string.regexp.sql$)'
		name: 'string.regexp.sql'
	}

	{
		match: '(^string.unquoted.attribute-value.css$)'
		name: 'string.unquoted.attribute-value.css'
	}

	{
		match: '(^string.unquoted.attribute-value.sass$)'
		name: 'string.unquoted.attribute-value.sass'
	}

	{
		match: '(^string.unquoted.attribute-value.scss$)'
		name: 'string.unquoted.attribute-value.scss'
	}

	{
		match: '(^string.unquoted.cdata.xml$)'
		name: 'string.unquoted.cdata.xml'
	}

	{
		match: '(^string.unquoted.heredoc.applescript.shell$)'
		name: 'string.unquoted.heredoc.applescript.shell'
	}

	{
		match: '(^string.unquoted.heredoc.backtick.perl$)'
		name: 'string.unquoted.heredoc.backtick.perl'
	}

	{
		match: '(^string.unquoted.heredoc.doublequote.perl$)'
		name: 'string.unquoted.heredoc.doublequote.perl'
	}

	{
		match: '(^string.unquoted.heredoc.html.shell$)'
		name: 'string.unquoted.heredoc.html.shell'
	}

	{
		match: '(^string.unquoted.heredoc.markdown.shell$)'
		name: 'string.unquoted.heredoc.markdown.shell'
	}

	{
		match: '(^string.unquoted.heredoc.no-indent.applescript.shell$)'
		name: 'string.unquoted.heredoc.no-indent.applescript.shell'
	}

	{
		match: '(^string.unquoted.heredoc.no-indent.html.shell$)'
		name: 'string.unquoted.heredoc.no-indent.html.shell'
	}

	{
		match: '(^string.unquoted.heredoc.no-indent.markdown.shell$)'
		name: 'string.unquoted.heredoc.no-indent.markdown.shell'
	}

	{
		match: '(^string.unquoted.heredoc.no-indent.python.shell$)'
		name: 'string.unquoted.heredoc.no-indent.python.shell'
	}

	{
		match: '(^string.unquoted.heredoc.no-indent.ruby.shell$)'
		name: 'string.unquoted.heredoc.no-indent.ruby.shell'
	}

	{
		match: '(^string.unquoted.heredoc.no-indent.shell$)'
		name: 'string.unquoted.heredoc.no-indent.shell'
	}

	{
		match: '(^string.unquoted.heredoc.no-indent.shell.shell$)'
		name: 'string.unquoted.heredoc.no-indent.shell.shell'
	}

	{
		match: '(^string.unquoted.heredoc.no-indent.textile.shell$)'
		name: 'string.unquoted.heredoc.no-indent.textile.shell'
	}

	{
		match: '(^string.unquoted.heredoc.perl$)'
		name: 'string.unquoted.heredoc.perl'
	}

	{
		match: '(^string.unquoted.heredoc.php$)'
		name: 'string.unquoted.heredoc.php'
	}

	{
		match: '(^string.unquoted.heredoc.python.shell$)'
		name: 'string.unquoted.heredoc.python.shell'
	}

	{
		match: '(^string.unquoted.heredoc.quote.perl$)'
		name: 'string.unquoted.heredoc.quote.perl'
	}

	{
		match: '(^string.unquoted.heredoc.ruby$)'
		name: 'string.unquoted.heredoc.ruby'
	}

	{
		match: '(^string.unquoted.heredoc.ruby.shell$)'
		name: 'string.unquoted.heredoc.ruby.shell'
	}

	{
		match: '(^string.unquoted.heredoc.shell$)'
		name: 'string.unquoted.heredoc.shell'
	}

	{
		match: '(^string.unquoted.heredoc.shell.shell$)'
		name: 'string.unquoted.heredoc.shell.shell'
	}

	{
		match: '(^string.unquoted.heredoc.textile.shell$)'
		name: 'string.unquoted.heredoc.textile.shell'
	}

	{
		match: '(^string.unquoted.herestring.shell$)'
		name: 'string.unquoted.herestring.shell'
	}

	{
		match: '(^string.unquoted.html$)'
		name: 'string.unquoted.html'
	}

	{
		match: '(^string.unquoted.index.php$)'
		name: 'string.unquoted.index.php'
	}

	{
		match: '(^string.unquoted.java-properties$)'
		name: 'string.unquoted.java-properties'
	}

	{
		match: '(^string.unquoted.nowdoc.php$)'
		name: 'string.unquoted.nowdoc.php'
	}

	{
		match: '(^string.unquoted.plist$)'
		name: 'string.unquoted.plist'
	}

	{
		match: '(^string.unquoted.program-block.perl$)'
		name: 'string.unquoted.program-block.perl'
	}

	{
		match: '(^string.unquoted.program-block.ruby$)'
		name: 'string.unquoted.program-block.ruby'
	}

	{
		match: '(^string.unquoted.yaml$)'
		name: 'string.unquoted.yaml'
	}

	{
		match: '(^string.url.css$)'
		name: 'string.url.css'
	}

	{
		match: '(^string.username.gfm$)'
		name: 'string.username.gfm'
	}

	{
		match: '(^support.class.builtin.php$)'
		name: 'support.class.builtin.php'
	}

	{
		match: '(^support.class.cocoa$)'
		name: 'support.class.cocoa'
	}

	{
		match: '(^support.class.cocoa.leopard$)'
		name: 'support.class.cocoa.leopard'
	}

	{
		match: '(^support.class.dom.js$)'
		name: 'support.class.dom.js'
	}

	{
		match: '(^support.class.js$)'
		name: 'support.class.js'
	}

	{
		match: '(^support.class.math.js$)'
		name: 'support.class.math.js'
	}

	{
		match: '(^support.class.php$)'
		name: 'support.class.php'
	}

	{
		match: '(^support.class.quartz$)'
		name: 'support.class.quartz'
	}

	{
		match: '(^support.class.ruby$)'
		name: 'support.class.ruby'
	}

	{
		match: '(^support.constant.cocoa$)'
		name: 'support.constant.cocoa'
	}

	{
		match: '(^support.constant.cocoa.leopard$)'
		name: 'support.constant.cocoa.leopard'
	}

	{
		match: '(^support.constant.color.current.css$)'
		name: 'support.constant.color.current.css'
	}

	{
		match: '(^support.constant.color.w3c-extended-color-name.css$)'
		name: 'support.constant.color.w3c-extended-color-name.css'
	}

	{
		match: '(^support.constant.color.w3c-standard-color-name.css$)'
		name: 'support.constant.color.w3c-standard-color-name.css'
	}

	{
		match: '(^support.constant.dom.js$)'
		name: 'support.constant.dom.js'
	}

	{
		match: '(^support.constant.font-name.css$)'
		name: 'support.constant.font-name.css'
	}

	{
		match: '(^support.constant.java-properties$)'
		name: 'support.constant.java-properties'
	}

	{
		match: '(^support.constant.js$)'
		name: 'support.constant.js'
	}

	{
		match: '(^support.constant.language-range.css$)'
		name: 'support.constant.language-range.css'
	}

	{
		match: '(^support.constant.mac-classic.c$)'
		name: 'support.constant.mac-classic.c'
	}

	{
		match: '(^support.constant.mathematical-symbols.scss$)'
		name: 'support.constant.mathematical-symbols.scss'
	}

	{
		match: '(^support.constant.media-type.media.css$)'
		name: 'support.constant.media-type.media.css'
	}

	{
		match: '(^support.constant.media.sass$)'
		name: 'support.constant.media.sass'
	}

	{
		match: '(^support.constant.notification.cocoa$)'
		name: 'support.constant.notification.cocoa'
	}

	{
		match: '(^support.constant.notification.cocoa.leopard$)'
		name: 'support.constant.notification.cocoa.leopard'
	}

	{
		match: '(^support.constant.parity.css$)'
		name: 'support.constant.parity.css'
	}

	{
		match: '(^support.constant.parser-token.php$)'
		name: 'support.constant.parser-token.php'
	}

	{
		match: '(^support.constant.property-value.css$)'
		name: 'support.constant.property-value.css'
	}

	{
		match: '(^support.constant.property-value.css.sass$)'
		name: 'support.constant.property-value.css.sass'
	}

	{
		match: '(^support.constant.property-value.list-style-type.css$)'
		name: 'support.constant.property-value.list-style-type.css'
	}

	{
		match: '(^support.constant.property-value.media-property.media.css$)'
		name: 'support.constant.property-value.media-property.media.css'
	}

	{
		match: '(^support.constant.property.math.js$)'
		name: 'support.constant.property.math.js'
	}

	{
		match: '(^support.constant.step-direction.css$)'
		name: 'support.constant.step-direction.css'
	}

	{
		match: '(^support.constant.text-direction.css$)'
		name: 'support.constant.text-direction.css'
	}

	{
		match: '(^support.constant.vendored.property-value.css$)'
		name: 'support.constant.vendored.property-value.css'
	}

	{
		match: '(^support.function.actionpack.rails$)'
		name: 'support.function.actionpack.rails'
	}

	{
		match: '(^support.function.activerecord.rails$)'
		name: 'support.function.activerecord.rails'
	}

	{
		match: '(^support.function.activesupport.rails$)'
		name: 'support.function.activesupport.rails'
	}

	{
		match: '(^support.function.aggregate.sql$)'
		name: 'support.function.aggregate.sql'
	}

	{
		match: '(^support.function.alias.php$)'
		name: 'support.function.alias.php'
	}

	{
		match: '(^support.function.any-method.builtin.less$)'
		name: 'support.function.any-method.builtin.less'
	}

	{
		match: '(^support.function.any-method.builtin.url.css$)'
		name: 'support.function.any-method.builtin.url.css'
	}

	{
		match: '(^support.function.any-method.c$)'
		name: 'support.function.any-method.c'
	}

	{
		match: '(^support.function.any-method.name-of-parameter.objc$)'
		name: 'support.function.any-method.name-of-parameter.objc'
	}

	{
		match: '(^support.function.apc.php$)'
		name: 'support.function.apc.php'
	}

	{
		match: '(^support.function.array.php$)'
		name: 'support.function.array.php'
	}

	{
		match: '(^support.function.basic_functions.php$)'
		name: 'support.function.basic_functions.php'
	}

	{
		match: '(^support.function.bcmath.php$)'
		name: 'support.function.bcmath.php'
	}

	{
		match: '(^support.function.blenc.php$)'
		name: 'support.function.blenc.php'
	}

	{
		match: '(^support.function.built-in.smarty$)'
		name: 'support.function.built-in.smarty'
	}

	{
		match: '(^support.function.builtin.go$)'
		name: 'support.function.builtin.go'
	}

	{
		match: '(^support.function.builtin.gotemplate$)'
		name: 'support.function.builtin.gotemplate'
	}

	{
		match: '(^support.function.builtin.python$)'
		name: 'support.function.builtin.python'
	}

	{
		match: '(^support.function.builtin.shell$)'
		name: 'support.function.builtin.shell'
	}

	{
		match: '(^support.function.bz2.php$)'
		name: 'support.function.bz2.php'
	}

	{
		match: '(^support.function.C99.c$)'
		name: 'support.function.C99.c'
	}

	{
		match: '(^support.function.calendar.php$)'
		name: 'support.function.calendar.php'
	}

	{
		match: '(^support.function.classobj.php$)'
		name: 'support.function.classobj.php'
	}

	{
		match: '(^support.function.cocoa$)'
		name: 'support.function.cocoa'
	}

	{
		match: '(^support.function.cocoa.leopard$)'
		name: 'support.function.cocoa.leopard'
	}

	{
		match: '(^support.function.coffee$)'
		name: 'support.function.coffee'
	}

	{
		match: '(^support.function.com.php$)'
		name: 'support.function.com.php'
	}

	{
		match: '(^support.function.console.coffee$)'
		name: 'support.function.console.coffee'
	}

	{
		match: '(^support.function.console.js$)'
		name: 'support.function.console.js'
	}

	{
		match: '(^support.function.construct.output.php$)'
		name: 'support.function.construct.output.php'
	}

	{
		match: '(^support.function.construct.php$)'
		name: 'support.function.construct.php'
	}

	{
		match: '(^support.function.ctype.php$)'
		name: 'support.function.ctype.php'
	}

	{
		match: '(^support.function.curl.php$)'
		name: 'support.function.curl.php'
	}

	{
		match: '(^support.function.datetime.php$)'
		name: 'support.function.datetime.php'
	}

	{
		match: '(^support.function.dba.php$)'
		name: 'support.function.dba.php'
	}

	{
		match: '(^support.function.dbx.php$)'
		name: 'support.function.dbx.php'
	}

	{
		match: '(^support.function.default.less$)'
		name: 'support.function.default.less'
	}

	{
		match: '(^support.function.dir.php$)'
		name: 'support.function.dir.php'
	}

	{
		match: '(^support.function.dom.js$)'
		name: 'support.function.dom.js'
	}

	{
		match: '(^support.function.eio.php$)'
		name: 'support.function.eio.php'
	}

	{
		match: '(^support.function.enchant.php$)'
		name: 'support.function.enchant.php'
	}

	{
		match: '(^support.function.ereg.php$)'
		name: 'support.function.ereg.php'
	}

	{
		match: '(^support.function.errorfunc.php$)'
		name: 'support.function.errorfunc.php'
	}

	{
		match: '(^support.function.event-handler.js$)'
		name: 'support.function.event-handler.js'
	}

	{
		match: '(^support.function.exec.php$)'
		name: 'support.function.exec.php'
	}

	{
		match: '(^support.function.exif.php$)'
		name: 'support.function.exif.php'
	}

	{
		match: '(^support.function.fann.php$)'
		name: 'support.function.fann.php'
	}

	{
		match: '(^support.function.file.php$)'
		name: 'support.function.file.php'
	}

	{
		match: '(^support.function.fileinfo.php$)'
		name: 'support.function.fileinfo.php'
	}

	{
		match: '(^support.function.filter.php$)'
		name: 'support.function.filter.php'
	}

	{
		match: '(^support.function.fpm.php$)'
		name: 'support.function.fpm.php'
	}

	{
		match: '(^support.function.funchand.php$)'
		name: 'support.function.funchand.php'
	}

	{
		match: '(^support.function.gettext.php$)'
		name: 'support.function.gettext.php'
	}

	{
		match: '(^support.function.git-rebase$)'
		name: 'support.function.git-rebase'
	}

	{
		match: '(^support.function.gmp.php$)'
		name: 'support.function.gmp.php'
	}

	{
		match: '(^support.function.go$)'
		name: 'support.function.go'
	}

	{
		match: '(^support.function.hash.php$)'
		name: 'support.function.hash.php'
	}

	{
		match: '(^support.function.http.php$)'
		name: 'support.function.http.php'
	}

	{
		match: '(^support.function.iconv.php$)'
		name: 'support.function.iconv.php'
	}

	{
		match: '(^support.function.iisfunc.php$)'
		name: 'support.function.iisfunc.php'
	}

	{
		match: '(^support.function.image.php$)'
		name: 'support.function.image.php'
	}

	{
		match: '(^support.function.info.php$)'
		name: 'support.function.info.php'
	}

	{
		match: '(^support.function.interbase.php$)'
		name: 'support.function.interbase.php'
	}

	{
		match: '(^support.function.intl.php$)'
		name: 'support.function.intl.php'
	}

	{
		match: '(^support.function.js$)'
		name: 'support.function.js'
	}

	{
		match: '(^support.function.json.php$)'
		name: 'support.function.json.php'
	}

	{
		match: '(^support.function.kernel.ruby$)'
		name: 'support.function.kernel.ruby'
	}

	{
		match: '(^support.function.ldap.php$)'
		name: 'support.function.ldap.php'
	}

	{
		match: '(^support.function.less$)'
		name: 'support.function.less'
	}

	{
		match: '(^support.function.libxml.php$)'
		name: 'support.function.libxml.php'
	}

	{
		match: '(^support.function.magic.php$)'
		name: 'support.function.magic.php'
	}

	{
		match: '(^support.function.magic.python$)'
		name: 'support.function.magic.python'
	}

	{
		match: '(^support.function.mail.php$)'
		name: 'support.function.mail.php'
	}

	{
		match: '(^support.function.math.js$)'
		name: 'support.function.math.js'
	}

	{
		match: '(^support.function.math.php$)'
		name: 'support.function.math.php'
	}

	{
		match: '(^support.function.math.sql$)'
		name: 'support.function.math.sql'
	}

	{
		match: '(^support.function.mbstring.php$)'
		name: 'support.function.mbstring.php'
	}

	{
		match: '(^support.function.mcrypt.php$)'
		name: 'support.function.mcrypt.php'
	}

	{
		match: '(^support.function.memcache.php$)'
		name: 'support.function.memcache.php'
	}

	{
		match: '(^support.function.method.array.coffee$)'
		name: 'support.function.method.array.coffee'
	}

	{
		match: '(^support.function.mhash.php$)'
		name: 'support.function.mhash.php'
	}

	{
		match: '(^support.function.misc.sass$)'
		name: 'support.function.misc.sass'
	}

	{
		match: '(^support.function.misc.scss$)'
		name: 'support.function.misc.scss'
	}

	{
		match: '(^support.function.mongo.php$)'
		name: 'support.function.mongo.php'
	}

	{
		match: '(^support.function.mysql.php$)'
		name: 'support.function.mysql.php'
	}

	{
		match: '(^support.function.mysqli.php$)'
		name: 'support.function.mysqli.php'
	}

	{
		match: '(^support.function.mysqlnd-memcache.php$)'
		name: 'support.function.mysqlnd-memcache.php'
	}

	{
		match: '(^support.function.mysqlnd-ms.php$)'
		name: 'support.function.mysqlnd-ms.php'
	}

	{
		match: '(^support.function.mysqlnd-qc.php$)'
		name: 'support.function.mysqlnd-qc.php'
	}

	{
		match: '(^support.function.mysqlnd-uh.php$)'
		name: 'support.function.mysqlnd-uh.php'
	}

	{
		match: '(^support.function.network.php$)'
		name: 'support.function.network.php'
	}

	{
		match: '(^support.function.nsapi.php$)'
		name: 'support.function.nsapi.php'
	}

	{
		match: '(^support.function.oci8.php$)'
		name: 'support.function.oci8.php'
	}

	{
		match: '(^support.function.opcache.php$)'
		name: 'support.function.opcache.php'
	}

	{
		match: '(^support.function.openssl.php$)'
		name: 'support.function.openssl.php'
	}

	{
		match: '(^support.function.output.php$)'
		name: 'support.function.output.php'
	}

	{
		match: '(^support.function.password.php$)'
		name: 'support.function.password.php'
	}

	{
		match: '(^support.function.pcntl.php$)'
		name: 'support.function.pcntl.php'
	}

	{
		match: '(^support.function.perl$)'
		name: 'support.function.perl'
	}

	{
		match: '(^support.function.perl6$)'
		name: 'support.function.perl6'
	}

	{
		match: '(^support.function.pgsql.php$)'
		name: 'support.function.pgsql.php'
	}

	{
		match: '(^support.function.php_apache.php$)'
		name: 'support.function.php_apache.php'
	}

	{
		match: '(^support.function.php_dom.php$)'
		name: 'support.function.php_dom.php'
	}

	{
		match: '(^support.function.php_ftp.php$)'
		name: 'support.function.php_ftp.php'
	}

	{
		match: '(^support.function.php_imap.php$)'
		name: 'support.function.php_imap.php'
	}

	{
		match: '(^support.function.php_mssql.php$)'
		name: 'support.function.php_mssql.php'
	}

	{
		match: '(^support.function.php_odbc.php$)'
		name: 'support.function.php_odbc.php'
	}

	{
		match: '(^support.function.php_pcre.php$)'
		name: 'support.function.php_pcre.php'
	}

	{
		match: '(^support.function.php_spl.php$)'
		name: 'support.function.php_spl.php'
	}

	{
		match: '(^support.function.php_zip.php$)'
		name: 'support.function.php_zip.php'
	}

	{
		match: '(^support.function.posix.php$)'
		name: 'support.function.posix.php'
	}

	{
		match: '(^support.function.proctitle.php$)'
		name: 'support.function.proctitle.php'
	}

	{
		match: '(^support.function.pspell.php$)'
		name: 'support.function.pspell.php'
	}

	{
		match: '(^support.function.readline.php$)'
		name: 'support.function.readline.php'
	}

	{
		match: '(^support.function.recode.php$)'
		name: 'support.function.recode.php'
	}

	{
		match: '(^support.function.rrd.php$)'
		name: 'support.function.rrd.php'
	}

	{
		match: '(^support.function.scalar.sql$)'
		name: 'support.function.scalar.sql'
	}

	{
		match: '(^support.function.sem.php$)'
		name: 'support.function.sem.php'
	}

	{
		match: '(^support.function.session.php$)'
		name: 'support.function.session.php'
	}

	{
		match: '(^support.function.shmop.php$)'
		name: 'support.function.shmop.php'
	}

	{
		match: '(^support.function.simplexml.php$)'
		name: 'support.function.simplexml.php'
	}

	{
		match: '(^support.function.snmp.php$)'
		name: 'support.function.snmp.php'
	}

	{
		match: '(^support.function.soap.php$)'
		name: 'support.function.soap.php'
	}

	{
		match: '(^support.function.sockets.php$)'
		name: 'support.function.sockets.php'
	}

	{
		match: '(^support.function.sqlite.php$)'
		name: 'support.function.sqlite.php'
	}

	{
		match: '(^support.function.sqlsrv.php$)'
		name: 'support.function.sqlsrv.php'
	}

	{
		match: '(^support.function.static.array.coffee$)'
		name: 'support.function.static.array.coffee'
	}

	{
		match: '(^support.function.static.math.coffee$)'
		name: 'support.function.static.math.coffee'
	}

	{
		match: '(^support.function.static.number.coffee$)'
		name: 'support.function.static.number.coffee'
	}

	{
		match: '(^support.function.static.object.coffee$)'
		name: 'support.function.static.object.coffee'
	}

	{
		match: '(^support.function.stats.php$)'
		name: 'support.function.stats.php'
	}

	{
		match: '(^support.function.streamsfuncs.php$)'
		name: 'support.function.streamsfuncs.php'
	}

	{
		match: '(^support.function.string.php$)'
		name: 'support.function.string.php'
	}

	{
		match: '(^support.function.string.sql$)'
		name: 'support.function.string.sql'
	}

	{
		match: '(^support.function.sybase.php$)'
		name: 'support.function.sybase.php'
	}

	{
		match: '(^support.function.taint.php$)'
		name: 'support.function.taint.php'
	}

	{
		match: '(^support.function.tidy.php$)'
		name: 'support.function.tidy.php'
	}

	{
		match: '(^support.function.tokenizer.php$)'
		name: 'support.function.tokenizer.php'
	}

	{
		match: '(^support.function.trader.php$)'
		name: 'support.function.trader.php'
	}

	{
		match: '(^support.function.type-checking.less$)'
		name: 'support.function.type-checking.less'
	}

	{
		match: '(^support.function.unit-checking.less$)'
		name: 'support.function.unit-checking.less'
	}

	{
		match: '(^support.function.uopz.php$)'
		name: 'support.function.uopz.php'
	}

	{
		match: '(^support.function.url.php$)'
		name: 'support.function.url.php'
	}

	{
		match: '(^support.function.var.php$)'
		name: 'support.function.var.php'
	}

	{
		match: '(^support.function.viewhelpers.rails$)'
		name: 'support.function.viewhelpers.rails'
	}

	{
		match: '(^support.function.wddx.php$)'
		name: 'support.function.wddx.php'
	}

	{
		match: '(^support.function.xhprof.php$)'
		name: 'support.function.xhprof.php'
	}

	{
		match: '(^support.function.xml.php$)'
		name: 'support.function.xml.php'
	}

	{
		match: '(^support.function.xmlrpc.php$)'
		name: 'support.function.xmlrpc.php'
	}

	{
		match: '(^support.function.xmlwriter.php$)'
		name: 'support.function.xmlwriter.php'
	}

	{
		match: '(^support.function.zlib.php$)'
		name: 'support.function.zlib.php'
	}

	{
		match: '(^support.gfm$)'
		name: 'support.gfm'
	}

	{
		match: '(^support.other.namespace.php$)'
		name: 'support.other.namespace.php'
	}

	{
		match: '(^support.other.namespace.use-as.php$)'
		name: 'support.other.namespace.use-as.php'
	}

	{
		match: '(^support.other.namespace.use.php$)'
		name: 'support.other.namespace.use.php'
	}

	{
		match: '(^support.other.php$)'
		name: 'support.other.php'
	}

	{
		match: '(^support.other.protocol.objc$)'
		name: 'support.other.protocol.objc'
	}

	{
		match: '(^support.type.cocoa$)'
		name: 'support.type.cocoa'
	}

	{
		match: '(^support.type.cocoa.leopard$)'
		name: 'support.type.cocoa.leopard'
	}

	{
		match: '(^support.type.exception.python$)'
		name: 'support.type.exception.python'
	}

	{
		match: '(^support.type.mac-classic.c$)'
		name: 'support.type.mac-classic.c'
	}

	{
		match: '(^support.type.perl6$)'
		name: 'support.type.perl6'
	}

	{
		match: '(^support.type.posix-reserved.c$)'
		name: 'support.type.posix-reserved.c'
	}

	{
		match: '(^support.type.property-name.css$)'
		name: 'support.type.property-name.css'
	}

	{
		match: '(^support.type.pthread.c$)'
		name: 'support.type.pthread.c'
	}

	{
		match: '(^support.type.python$)'
		name: 'support.type.python'
	}

	{
		match: '(^support.type.quartz$)'
		name: 'support.type.quartz'
	}

	{
		match: '(^support.type.stdint.c$)'
		name: 'support.type.stdint.c'
	}

	{
		match: '(^support.type.sys-types.c$)'
		name: 'support.type.sys-types.c'
	}

	{
		match: '(^support.type.vendored.property-name.css$)'
		name: 'support.type.vendored.property-name.css'
	}

	{
		match: '(^support.type.vendored.property-name.media.css$)'
		name: 'support.type.vendored.property-name.media.css'
	}

	{
		match: '(^support.variable.coffee$)'
		name: 'support.variable.coffee'
	}

	{
		match: '(^support.variable.foundation$)'
		name: 'support.variable.foundation'
	}

	{
		match: '(^support.variable.js$)'
		name: 'support.variable.js'
	}

	{
		match: '(^support.variable.magic.python$)'
		name: 'support.variable.magic.python'
	}

	{
		match: '(^support.variable.property.dom.js$)'
		name: 'support.variable.property.dom.js'
	}

	{
		match: '(^support.variable.property.js$)'
		name: 'support.variable.property.js'
	}

	{
		match: '(^table.gfm$)'
		name: 'table.gfm'
	}

	{
		match: '(^text.html.embedded.ruby$)'
		name: 'text.html.embedded.ruby'
	}

	{
		match: '(^variable.argument.css$)'
		name: 'variable.argument.css'
	}

	{
		match: '(^variable.assignment.coffee$)'
		name: 'variable.assignment.coffee'
	}

	{
		match: '(^variable.css$)'
		name: 'variable.css'
	}

	{
		match: '(^variable.font-feature.css$)'
		name: 'variable.font-feature.css'
	}

	{
		match: '(^variable.interpolation.scss$)'
		name: 'variable.interpolation.scss'
	}

	{
		match: '(^variable.language.coffee$)'
		name: 'variable.language.coffee'
	}

	{
		match: '(^variable.language.default.js$)'
		name: 'variable.language.default.js'
	}

	{
		match: '(^variable.language.documentroot.xml$)'
		name: 'variable.language.documentroot.xml'
	}

	{
		match: '(^variable.language.entity.xml$)'
		name: 'variable.language.entity.xml'
	}

	{
		match: '(^variable.language.import-all.js$)'
		name: 'variable.language.import-all.js'
	}

	{
		match: '(^variable.language.java$)'
		name: 'variable.language.java'
	}

	{
		match: '(^variable.language.js$)'
		name: 'variable.language.js'
	}

	{
		match: '(^variable.language.makefile$)'
		name: 'variable.language.makefile'
	}

	{
		match: '(^variable.language.objc$)'
		name: 'variable.language.objc'
	}

	{
		match: '(^variable.language.perl6$)'
		name: 'variable.language.perl6'
	}

	{
		match: '(^variable.language.ruby$)'
		name: 'variable.language.ruby'
	}

	{
		match: '(^variable.language.self.python$)'
		name: 'variable.language.self.python'
	}

	{
		match: '(^variable.language.self.ruby$)'
		name: 'variable.language.self.ruby'
	}

	{
		match: '(^variable.language.this.java$)'
		name: 'variable.language.this.java'
	}

	{
		match: '(^variable.language.wildcard.java$)'
		name: 'variable.language.wildcard.java'
	}

	{
		match: '(^variable.ordered.list.gfm$)'
		name: 'variable.ordered.list.gfm'
	}

	{
		match: '(^variable.other.assignment.go$)'
		name: 'variable.other.assignment.go'
	}

	{
		match: '(^variable.other.bracket.shell$)'
		name: 'variable.other.bracket.shell'
	}

	{
		match: '(^variable.other.class.php$)'
		name: 'variable.other.class.php'
	}

	{
		match: '(^variable.other.constant.ruby$)'
		name: 'variable.other.constant.ruby'
	}

	{
		match: '(^variable.other.declaration.go$)'
		name: 'variable.other.declaration.go'
	}

	{
		match: '(^variable.other.definition.java$)'
		name: 'variable.other.definition.java'
	}

	{
		match: '(^variable.other.description.jsdoc$)'
		name: 'variable.other.description.jsdoc'
	}

	{
		match: '(^variable.other.global.php$)'
		name: 'variable.other.global.php'
	}

	{
		match: '(^variable.other.global.safer.php$)'
		name: 'variable.other.global.safer.php'
	}

	{
		match: '(^variable.other.gotemplate$)'
		name: 'variable.other.gotemplate'
	}

	{
		match: '(^variable.other.identifier.perl6$)'
		name: 'variable.other.identifier.perl6'
	}

	{
		match: '(^variable.other.index.php$)'
		name: 'variable.other.index.php'
	}

	{
		match: '(^variable.other.interpolation.less$)'
		name: 'variable.other.interpolation.less'
	}

	{
		match: '(^variable.other.jsdoc$)'
		name: 'variable.other.jsdoc'
	}

	{
		match: '(^variable.other.key.toml$)'
		name: 'variable.other.key.toml'
	}

	{
		match: '(^variable.other.less$)'
		name: 'variable.other.less'
	}

	{
		match: '(^variable.other.loop.shell$)'
		name: 'variable.other.loop.shell'
	}

	{
		match: '(^variable.other.makefile$)'
		name: 'variable.other.makefile'
	}

	{
		match: '(^variable.other.member.c$)'
		name: 'variable.other.member.c'
	}

	{
		match: '(^variable.other.module-alias.js$)'
		name: 'variable.other.module-alias.js'
	}

	{
		match: '(^variable.other.module.js$)'
		name: 'variable.other.module.js'
	}

	{
		match: '(^variable.other.object.java$)'
		name: 'variable.other.object.java'
	}

	{
		match: '(^variable.other.object.js$)'
		name: 'variable.other.object.js'
	}

	{
		match: '(^variable.other.object.property.java$)'
		name: 'variable.other.object.property.java'
	}

	{
		match: '(^variable.other.object.property.js$)'
		name: 'variable.other.object.property.js'
	}

	{
		match: '(^variable.other.object.ruby$)'
		name: 'variable.other.object.ruby'
	}

	{
		match: '(^variable.other.perl6$)'
		name: 'variable.other.perl6'
	}

	{
		match: '(^variable.other.php$)'
		name: 'variable.other.php'
	}

	{
		match: '(^variable.other.pod.perl$)'
		name: 'variable.other.pod.perl'
	}

	{
		match: '(^variable.other.positional.shell$)'
		name: 'variable.other.positional.shell'
	}

	{
		match: '(^variable.other.predefined.program-name.perl$)'
		name: 'variable.other.predefined.program-name.perl'
	}

	{
		match: '(^variable.other.property.java$)'
		name: 'variable.other.property.java'
	}

	{
		match: '(^variable.other.property.js$)'
		name: 'variable.other.property.js'
	}

	{
		match: '(^variable.other.property.php$)'
		name: 'variable.other.property.php'
	}

	{
		match: '(^variable.other.readwrite.global.mac-classic.c$)'
		name: 'variable.other.readwrite.global.mac-classic.c'
	}

	{
		match: '(^variable.other.readwrite.global.pre-defined.ruby$)'
		name: 'variable.other.readwrite.global.pre-defined.ruby'
	}

	{
		match: '(^variable.other.readwrite.global.ruby$)'
		name: 'variable.other.readwrite.global.ruby'
	}

	{
		match: '(^variable.other.readwrite.global.special.perl$)'
		name: 'variable.other.readwrite.global.special.perl'
	}

	{
		match: '(^variable.other.readwrite.instance.coffee$)'
		name: 'variable.other.readwrite.instance.coffee'
	}

	{
		match: '(^variable.other.readwrite.list-separator.perl$)'
		name: 'variable.other.readwrite.list-separator.perl'
	}

	{
		match: '(^variable.other.readwrite.member.cpp$)'
		name: 'variable.other.readwrite.member.cpp'
	}

	{
		match: '(^variable.other.readwrite.static.mac-classic.c$)'
		name: 'variable.other.readwrite.static.mac-classic.c'
	}

	{
		match: '(^variable.other.regexp.last-paren-match.perl$)'
		name: 'variable.other.regexp.last-paren-match.perl'
	}

	{
		match: '(^variable.other.sass$)'
		name: 'variable.other.sass'
	}

	{
		match: '(^variable.other.selector.objc$)'
		name: 'variable.other.selector.objc'
	}

	{
		match: '(^variable.other.yaml$)'
		name: 'variable.other.yaml'
	}

	{
		match: '(^variable.parameter.document-rule.css$)'
		name: 'variable.parameter.document-rule.css'
	}

	{
		match: '(^variable.parameter.function.coffee$)'
		name: 'variable.parameter.function.coffee'
	}

	{
		match: '(^variable.parameter.function.js$)'
		name: 'variable.parameter.function.js'
	}

	{
		match: '(^variable.parameter.function.objc$)'
		name: 'variable.parameter.function.objc'
	}

	{
		match: '(^variable.parameter.function.perl$)'
		name: 'variable.parameter.function.perl'
	}

	{
		match: '(^variable.parameter.function.ruby$)'
		name: 'variable.parameter.function.ruby'
	}

	{
		match: '(^variable.parameter.java$)'
		name: 'variable.parameter.java'
	}

	{
		match: '(^variable.parameter.keyframe-list.css$)'
		name: 'variable.parameter.keyframe-list.css'
	}

	{
		match: '(^variable.parameter.misc.css$)'
		name: 'variable.parameter.misc.css'
	}

	{
		match: '(^variable.parameter.misc.sass$)'
		name: 'variable.parameter.misc.sass'
	}

	{
		match: '(^variable.parameter.preprocessor.c$)'
		name: 'variable.parameter.preprocessor.c'
	}

	{
		match: '(^variable.parameter.rest.function.js$)'
		name: 'variable.parameter.rest.function.js'
	}

	{
		match: '(^variable.parameter.style-name.css$)'
		name: 'variable.parameter.style-name.css'
	}

	{
		match: '(^variable.parameter.url.css$)'
		name: 'variable.parameter.url.css'
	}

	{
		match: '(^variable.parameter.url.sass$)'
		name: 'variable.parameter.url.sass'
	}

	{
		match: '(^variable.scss$)'
		name: 'variable.scss'
	}

	{
		match: '(^variable.unordered.list.gfm$)'
		name: 'variable.unordered.list.gfm'
	}
]
