scopeName: 'source.abnf'
name: 'ABNF'
fileTypes: ['abnf']
patterns: [
  {
    match: '(ALPHA|BIT|CHAR|CR|CRLF|CTL|DIGIT|DQUOTE|HEXDIG|HTAB|LF|LWSP|OCTET|SP|VCHAR|WSP)(\\s*|$|(?![A-Za-z-]))'
    captures:
      1:
        name: 'constant.language.abnf'
  }
  {
    match: '([A-Za-z][A-Za-z0-9-]*)\\s*'
    name: 'entity.name.tag.abnf'
  }
  {
    match: '\\s*(=/?)\\s*'
    name: 'keyword.operator.assignment.abnf'
  }
  {
    match: '\\s*%b[01]+((-[01]+)|(\\.[01]+)*)\\s*'
    name: 'constant.numeric.binary.abnf'
  }
  {
    match: '\\s*%d[0-9]+((-[0-9]+)|(\\.[0-9]+)*)\\s*'
    name: 'constant.numeric.decimal.abnf'
  }
  {
    match: '\\s*%x[0-9A-Fa-f]+((-[0-9A-Fa-f]+)|(\\.[0-9A-Fa-f]+)*)\\s*'
    name: 'constant.numeric.hexadecimal.abnf'
  }
  {
    match: '[0-9]+'
    name: 'constant.numeric.integer.abnf'
  }
  {
    match: '\\s*\\*\\s*'
    name: 'keyword.operator.repeat.abnf'
  }
  {
    match: '\\s*/\\s*'
    name: 'keyword.operator.or.abnf'
  }
  {
    match: '\\s*\\(\\s*'
    name: 'punctuation.bracket.round.begin.abnf'
  }
  {
    match: '\\s*\\)\\s*'
    name: 'punctuation.bracket.round.end.abnf'
  }
  {
    match: '\\s*\\[\\s*'
    name: 'punctuation.bracket.square.begin.abnf'
  }
  {
    match: '\\s*\\]\\s*'
    name: 'punctuation.bracket.square.end.abnf'
  }
  {
    begin: '\\s*"'
    beginCaptures:
      0:
        name: 'punctuation.definition.string.begin.abnf'
    end: '"\\s*'
    endCaptures:
      0:
        name: 'punctuation.definition.string.end.abnf'
    contentName: 'string.quoted.double.abnf'
  }
  {
    begin: '\\s*<'
    beginCaptures:
      0:
        name: 'punctuation.definition.string.begin.abnf'
    end: '>\\s*'
    endCaptures:
      0:
        name: 'punctuation.definition.string.end.abnf'
    contentName: 'string.other.abnf'
  }
  {
    begin: '\\s*;'
    end: '\\n'
    name: 'comment.line.semi-colon.abnf'
  }
]
